<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>redis面试题</title>
      <link href="/2025/04/11/2025_04/03%20redis/"/>
      <url>/2025/04/11/2025_04/03%20redis/</url>
      
        <content type="html"><![CDATA[<h1 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h1><h2 id="01-什么是redis？"><a href="#01-什么是redis？" class="headerlink" title="01 什么是redis？"></a>01 什么是redis？</h2><p><code>Redis</code>是一种基于<strong>内存</strong>的数据库，对数据的读写操作都非常快，常用于缓存，消息队列，分布式锁等场景。其内部提供了多种不同的数据类型来支持不同的业务场景，比如<code>String, Hash, List, Set, Zset, BitMap, HyperLogLog, GEO, Stream  </code>，并且对数据类型的操作都是原子性的，因为执行命令由单线程负责，不存在并发竞争的问题。除此之外，<code>Redis</code>还支持<strong>事务，持久化，Lua脚本，多种集群方案（主从复制模式&#x2F;哨兵模式，切片集群模式），发布&#x2F;订阅模式，内存淘汰机制，过期删除机制</strong>。</p><h2 id="02-为什么redis快？"><a href="#02-为什么redis快？" class="headerlink" title="02 为什么redis快？"></a>02 为什么redis快？</h2><ol><li><u><strong>纯内存访问</strong></u></li></ol><p>完全给予内存，绝大部分请求是纯粹的内存操作，非常快速，数据存在内存中，类似于<code>HashMap，HashMap</code>的优势就是查找和操作的时间复杂度都是O(1)。</p><ol start="2"><li><u><strong>单线程避免行下文切换</strong></u></li></ol><p>采用单线程，避兔了不必要的上下文切换和竞争条件，也不存在多进程或者多线程导致的切换而消耗CPU，不用去考虑各种锁的问题，不存在加锁释放锁操作，<strong>没有因为可能出现死锁而导致的性能消耗</strong></p><ol start="3"><li><u><strong>数据结构设计思路是空间换时间</strong></u></li></ol><p>跳表查询（虽然浪费了空间但是提升了查询效率），将O(n)的时间复杂度降到了O(logn)</p><blockquote><p><strong>为什么不是使用平衡树查找呢？</strong></p><p>① 跳表的特性：</p><ul><li>时间复杂度和平衡树是相当的，都是对数的量级</li><li>平衡二叉树在调整旋转操作时，跳表可能对这种情况效率更高</li></ul><p>② 对比平衡树的优势：</p><ul><li>不用旋转操作，可能代码量更少，调试和维护成本更低</li><li>虽然Redis采用单线程模型，但是调表的无锁设计在理论上更容易拓展为多线程数据结构，保留了优化的空间</li></ul><p>③ 契合 Redis 的设计需求</p><ul><li>空间换时间的权衡，消耗约 33% 的额外内存，但换取了更快的操作速度。对于以内存换性能的 Redis 来说，这种权衡是合理的。</li><li>Redis 同时使用哈希表（存储 value 到 score 的映射）和跳表（按 score 排序），<strong>两者结合既保证了 O(1) 时间的单值查询（哈希表），又实现了高效的范围操作（跳表）</strong>，综合性能优于单一结构。</li></ul></blockquote><ol start="4"><li><u><strong>使用多路复用I&#x2F;O，复用(epoll)模型，非阻塞I&#x2F;O</strong></u></li></ol><p>单线程同时监听所有连接，哪个连接有数据就立刻处理，不卡在空等上（非阻塞）。就像快递员用智能扫描枪，一次知道所有包裹到没到，不用挨个查。</p><ol start="5"><li><u><strong>渐近式ReHash，缓存时间戳</strong></u></li></ol><p>**渐近式<code>ReHash</code>**主要解决，传统<code>ReHash</code>一次性迁移全部数据会阻塞线程</p><ul><li>用 ​<strong>两个哈希表</strong>​（旧表+新大表）</li><li>每次处理请求时 ​<strong>顺带迁移1个桶的数据</strong>​（如处理第N个请求迁移旧表第N个桶）</li><li>数据访问时 ​<strong>同时查新旧表</strong>，直到迁移完成</li></ul><blockquote><p><em>将海量数据迁移的耗时<strong>分摊到每次请求</strong>，避免卡顿</em></p><p><strong>详细解释：什么是渐进式<code>ReHash</code>呢？</strong></p><p>这个与<code>Redis</code>的<code>Key</code>和<code>Value</code>的数据结构有关，为了实现从键到值的快速访问，<code>Redis</code>使用了一个哈希表来保存所有的键值对，哈希表的本质就是一个数组，数组的每个元素称为一个哈希桶，每个哈希桶中保存了键值对数据。但是假设不断的往<code>redis</code>数据库中添加元素，就会涉及到扩容问题，扩容必然会面临到元素移动的问题，但是，加入元素总量为6w个时，总之，很多很多元素，就会阻塞我们的IO，为了解决这个问题，所以采用了渐近式的<code>rehash</code>（+斜体字）</p><p><strong>注意：</strong></p><p>不过这里要注意，如果<code>Redis</code>中有海量的key值的话，这个<code>Rehash</code>过程会很长很长，虽然采用渐进式<code>Rehash</code>，但在<code>Rehash</code>的过程中还是会导致请求有不小的卡顿。并且像一些统计命令也会非常卡顿：比如<code>keys</code>按照<code>Redis</code>的配置每个实例 能存储的最大的<code>key</code>的数量为2的32次方,即2.5亿，但是尽量把<code>key</code>的数量控制在千万以下，这样就可以避免<code>Rehash</code>导致的卡顿问题，如果数量确实比较多，建议采用分区<code>hash</code>存储。</p></blockquote><p><strong>缓存时间戳解决</strong>直接调用系统时间戳（如<code>gettimeofday</code>）<strong>需陷入内核，效率低</strong></p><ul><li><strong>单线程缓存时间</strong>：主线程每毫秒更新一次缓存时间戳</li><li>所有时间操作<strong>直接读缓存</strong>，减少系统调用</li></ul><blockquote><p><em>时间精度从<strong>纳秒级</strong>变<strong>毫秒级</strong>，但性能提升显著</em></p><p><strong>详细解释：为什么缓存时间戳</strong></p><p><code>redis</code>需要频繁检查键是否过期，每次检查都要获取当前的时间戳。我们平常使用系统时间戳时，常常是使用<code>System.currentTimeInMillis</code>或者<code>time.time()</code>来获取系统的毫秒时间戳。<code>Redis</code>不能这样，因为每一次获取系统时间戳都是一次系统调用，系统调用相对来说是比较费时间的，作为单线程的<code>Redis</code>承受不起，所以他需要对时间进行缓存，有一个定时任务，每毫秒更新一次时间缓存，获取时间都是从缓存中直接拿。不用访问主存，所以更快。（简单来说+斜体字）</p><p><strong>时间戳是什么？</strong></p><p>时间戳本质上是一个数字，假设今天是 <strong>2024年1月1日 00:00:00</strong>，你给自己定了一个闹钟：<strong>2024年1月1日 08:30:00</strong>（早上八点半）。用时间戳表示，这个时间可能是 <strong>1704061800</strong>（假设这是从某个固定起点到八点半经过的总秒数）。</p></blockquote><h2 id="03-redis-优缺点"><a href="#03-redis-优缺点" class="headerlink" title="03 redis 优缺点"></a>03 redis 优缺点</h2><p><code>Redis</code>是一个键值（Key-Value）了些的<code>NoSQL</code>数据库。</p><p><strong>Redis优点：</strong></p><ol><li>基于内存操作，因此读写速度非常快;</li><li>支持丰富的数据结构，string、hash、list、set、zset(sorted set);</li><li>支持事务，而且操作都是原子性;</li><li>按key设置过期时间，到期后自动删除;</li><li>支持主从(master-slave)复制来实现数据备份，主机会自动将数据同步到从机。</li></ol><p><strong>Redis缺点：</strong></p><p>内存成本相对硬盘较高。</p><blockquote><p><strong>什么是NoSQL？</strong></p><p>见名思意：</p><p><code>SOL：structured Query Language</code></p><p><code>NoSQL：Not Only sQL/non-relational</code></p><p>比如常见的<code>mysql</code>数据库中，有的表内容是，有的数据的内容列为（id，name，address），而有的数据为（id，name，address，telegraph），每数据之间的结构是不一样的。</p></blockquote><h2 id="04-redis五种数据类型，每种适用于什么场景"><a href="#04-redis五种数据类型，每种适用于什么场景" class="headerlink" title="04 redis五种数据类型，每种适用于什么场景"></a>04 redis五种数据类型，每种适用于什么场景</h2><p><code>redis</code>常见的数据类型有五种：<strong>String（字符串），Hash（哈希），List（列表），Set（集合）、Zset（有序集合）</strong>。</p><p>后续加入了新的四种： <strong>BitMap（2.2 版新增）、HyperLogLog（2.8 版新增）、GEO（3.2 版新增）、Stream（5.0 版新增）</strong></p><table><thead><tr><th align="center">结构类型</th><th align="center">结构存储的值</th><th align="center">结构读写能力</th><th align="center">结构适用场景</th></tr></thead><tbody><tr><td align="center"><strong>string字符串</strong></td><td align="center">可以是字符串、整数或浮点数</td><td align="center">对整个字符串或字符串的一部分进行操作;对整数或浮点数进行自增或自减操作;</td><td align="center">缓存对象、常规计数、分布式锁、共享 session 信息等</td></tr><tr><td align="center"><strong>List列表</strong></td><td align="center">一个链表，链表上的每个节点都包含一个字符串</td><td align="center">对链表的两端进行push和pop操作，读取单个或多个元素;根据值查找或删除元素;</td><td align="center">消息队列（但是有两个问题：1. 生产者需要自行实现全局唯一 ID；不能以消费组形式消费数据）等</td></tr><tr><td align="center"><strong>Set集合</strong></td><td align="center">包含字符串的无序集合</td><td align="center">字符串的集合，包含基础的方法有看是否存在添加、获取、删除;还包含计算交集、并集、差集等</td><td align="center">缓存对象、购物车等。</td></tr><tr><td align="center"><strong>Hash散列</strong></td><td align="center">包含键值对的无序散列表</td><td align="center">包含方法有添加、获取、删除单个元素</td><td align="center">聚合计算（并集、交集、差集）场景，比如点赞、共同关注、抽奖活动等。</td></tr><tr><td align="center"><strong>Zset有序集合</strong></td><td align="center">和散列一样，用于存储键值对</td><td align="center">字符串成员与浮点数分数之间的有序映射；元素的排列顺序由分数的大小决定;包含方法有添加、获取、删除单个元素以及根据分值范围或成员来获取元素</td><td align="center">排序场景，比如排行榜、电话和姓名排序等。</td></tr></tbody></table><h2 id="05-缓冲击穿、缓存穿透、缓存雪崩"><a href="#05-缓冲击穿、缓存穿透、缓存雪崩" class="headerlink" title="05 缓冲击穿、缓存穿透、缓存雪崩"></a>05 缓冲击穿、缓存穿透、缓存雪崩</h2><p><img src="/assets/image-20250324133619160.png" alt="image-20250324133619160"></p><h2 id="06-redis数据持久化两种方式：RDB、AOF"><a href="#06-redis数据持久化两种方式：RDB、AOF" class="headerlink" title="06 redis数据持久化两种方式：RDB、AOF"></a>06 redis数据持久化两种方式：RDB、AOF</h2><p>Redis 提供了两种数据持久化方式：RDB 和 AOF。RDB 是通过生成数据快照来实现持久化，适合对性能要求高、允许少量数据丢失的场景，比如备份和灾难恢复；它的优点是文件紧凑、恢复速度快，但缺点是可能会丢失最后一次快照之后的数据。AOF 则是通过记录每次写操作日志来实现持久化，适合对数据安全性要求高、需要实时持久化的场景；它的优点是数据丢失风险低，缺点是文件较大且频繁同步可能影响性能。实际应用中，可以同时开启 RDB 和 AOF，结合两者的优点，既保证性能又提高数据安全性。</p><p><strong>为什么会有混合持久化</strong></p><p>RDB 优点是数据恢复速度快，但是快照的频率不好把握。频率太低，丢失的数据就会比较多，频率太高，就会影响性能。</p><p>AOF 优点是丢失数据少，但是数据恢复不快。</p><p>为了集成了两者的优点， Redis 4.0 <strong>提出了混合使用 AOF 日志和内存快照</strong>，也叫混合持久化，既保证了 Redis 重启速度，又降低数据丢失风险。</p><p>混合持久化工作在 <strong>AOF 日志重写过程</strong>，当开启了混合持久化时，在 AOF 重写日志时，fork 出来的重写子进程会先将与主线程共享的内存数据以 RDB 方式写入到 AOF 文件，然后主线程处理的操作命令会被记录在重写缓冲区里，重写缓冲区里的增量命令会以 AOF 方式写入到 AOF 文件，写入完成后通知主进程将新的含有 RDB 格式和 AOF 格式的 AOF 文件替换旧的的 AOF 文件。</p><p>也就是说，使用了混合持久化，AOF <strong>文件的前半部分是 RDB 格式的全量数据，后半部分是 AOF 格式的增量数据</strong></p><blockquote><p>Redis 提供了两种数据持久化方式：<strong>RDB</strong> 和 <strong>AOF</strong>。</p><h3 id="1-RDB（Redis-Database）"><a href="#1-RDB（Redis-Database）" class="headerlink" title="1. RDB（Redis Database）"></a>1. RDB（Redis Database）</h3><p>RDB 是 Redis 默认的持久化方式，它通过生成数据快照来实现持久化。具体来说，Redis 会将某一时刻内存中的数据保存到一个二进制文件中（默认文件名为 <code>dump.rdb</code>）。</p><h4 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h4><ul><li><strong>触发方式</strong>：可以通过配置自动触发（例如在指定时间内有多少次写操作），也可以通过 <code>SAVE</code> 或 <code>BGSAVE</code> 命令手动触发。</li><li>优点<ul><li><strong>性能高</strong>：生成快照时对性能影响较小，适合大规模数据恢复。</li><li><strong>文件紧凑</strong>：RDB 文件是二进制格式，文件较小，适合备份和传输。</li></ul></li><li>缺点<ul><li><strong>数据丢失风险</strong>：如果 Redis 宕机，可能会丢失最后一次快照之后的数据。</li><li><strong>不适合实时持久化</strong>：RDB 是定期生成快照，无法实现秒级数据持久化。</li></ul></li></ul><h3 id="2-AOF（Append-Only-File）"><a href="#2-AOF（Append-Only-File）" class="headerlink" title="2. AOF（Append-Only File）"></a>2. AOF（Append-Only File）</h3><p>AOF 通过记录每次写操作日志来实现持久化。Redis 会将所有的写操作追加到一个日志文件中（默认文件名为 <code>appendonly.aof</code>），重启时通过重放日志来恢复数据。</p><h4 id="特点：-1"><a href="#特点：-1" class="headerlink" title="特点："></a>特点：</h4><ul><li><strong>触发方式</strong>：可以配置不同的同步策略，例如 <code>appendfsync everysec</code>（每秒同步一次）或 <code>appendfsync always</code>（每次写操作都同步）。</li><li>优点<ul><li><strong>数据安全性高</strong>：AOF 可以记录每一次写操作，数据丢失风险较低。</li><li><strong>支持实时持久化</strong>：通过配置可以实现秒级或实时持久化。</li></ul></li><li>缺点<ul><li><strong>文件较大</strong>：AOF 文件是文本格式，随着写操作增多，文件会不断增长。</li><li><strong>性能开销</strong>：频繁的同步操作可能会对性能有一定影响。</li></ul></li></ul><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ul><li><strong>RDB</strong> 适合对性能要求较高、允许少量数据丢失的场景，例如备份和灾难恢复。</li><li><strong>AOF</strong> 适合对数据安全性要求较高、需要实时持久化的场景。</li></ul><p>实际应用中，Redis 可以同时开启 RDB 和 AOF，结合两者的优点，既保证性能又提高数据安全性。</p></blockquote><h2 id="07-mysql数据与redis进行同步？-双写一致性问题"><a href="#07-mysql数据与redis进行同步？-双写一致性问题" class="headerlink" title="07 mysql数据与redis进行同步？(双写一致性问题)"></a>07 mysql数据与redis进行同步？(双写一致性问题)</h2><p><strong>什么叫做一致性问题？</strong></p><p>当修改了数据库的数据也要同时更新缓存的数据，缓存和数据库的数据要保持一致，再学习时候我了解到了4种场景下的缓存模式：</p><p><strong>1.缓存更新策略（旁路缓存模式）</strong></p><p><strong>场景：</strong></p><p> 在大部分业务系统中，Redis 作为缓存层用于提升系统的读取性能，而MySQL作为持久化存储，用于保证数据的可靠性。最常见的场景是:</p><ul><li>系统先查询 Redis 缓存，如果缓存中没有数据，再从 MySQL 中查询井将数据写入 Redis 缓存。</li><li>更新数据时，更新 MySQL 并删除 Redis 缓存，使缓存数据失效，保证下次读取时能拿到最新数据。</li></ul><p><strong>典型业务场景:</strong></p><p><strong>商品详情页面：</strong>当用户请求某个商品详情时，首先查询 Redis 缓存，如果须存中没有，则查询 MySQL，将查询结果缓存到 Redis 中;如果商品信息发生变更时，更新 MySQL 并删除 Redis 中的缓存。</p><p>可能存在并发问题，同时有两个数用户更新同一条数据，数据本来是100，用户a改为了90，用户b改成了100，改回去了。</p><p>为了保证数据的一致性：</p><ul><li>**缓存淘汰策略:**MySQL数据更新后立即删除 Redis 缓存，确保下次读取时能获取到最新数据。即通过“删除缓存” 的方式避免胜数据存在于缓存中。</li><li>**并发问题:**当并发请求较高时，可能会出现“缓存雪崩”或“缓存击穿”问题，例如:A更新 MySQL数据，B 在缓存失效的瞬间读取了旧数据，再次缓存到 Redis，为解决此问题，可以采用 延迟双删策略:<ul><li>a.删除 Redis 缓存。</li><li>b.更新 MySQL.</li><li>c.适当延迟(如 500ms)，再次删除 Redis 缓存，确保在并发情况下不存在缓存不一致问题。</li></ul></li></ul><p><strong>2.先更新缓存再更新数据库</strong></p><p><strong>场景:</strong></p><p>在某些实时性要求较高的场景中，可以考先更新 Redis 缓存，然后再异步更新 MySQL数据库。</p><p><strong>典型业务场景:</strong></p><p>**秒杀系统:**例如商品库存的扣减，用户购买商品时，首先更新 Redis 中的库存数量，保证极低延退的实时性体验。然后将变更异步写入 MySQL，确保持久化存储的一致性</p><p><strong>方案分析:</strong></p><ul><li>读取路径:读取 Redis 缓存的库存信息，能够提供快速的读取响应。</li><li>写入路径:更新 Redis 中的库存数量后，使用消息队列或其他异步机制将更新同步到 MySQL</li></ul><p><strong>如何保障一致性:<strong>（</strong>保证的最终一致性）</strong></p><ul><li>数据最终一致性:Redis 作为前端实时数据的缓存，MySQL作为后端数据的持久化存储，采用异步更新策略时，一致性无法保证是强一致性，但可以通过使用消息队列等手段来保证最终一致性。异步写入MySQL时，如果操作失败，可以通过重试机制或补偿机制恢复一致性。</li></ul><p><strong>3.双写操作</strong></p><p>双写操作是指在更新数据时，同时写入 MySQL 和 Redis，以确保两者数据一致。具体来说，当应用程序执行写操作时，会先更新 MySQL 数据库，然后同步更新 Redis 缓存。为了避免脏数据或一致性问题，可以采用<strong>先更新数据库，再删除缓存</strong>的策略，这样下次读取时 Redis 会重新从 MySQL 加载最新数据。为了提升性能和可靠性，可以通过<strong>消息队列</strong>异步处理双写操作，或者使用<strong>分布式锁</strong>来保证写操作的原子性。</p><p><strong>4.数据回写的方案</strong></p><p>数据回写方案是指在缓存失效或数据不一致时，通过回写机制将数据从 MySQL 同步到 Redis。例如，当 Redis 中某个缓存数据失效时，应用程序会从 MySQL 中读取最新数据并写回 Redis，确保缓存数据的准确性。这种方案通常结合<strong>缓存穿透保护</strong>和<strong>缓存预热</strong>策略，进一步优化系统性能和数据一致性。</p><h2 id="08-过期删除策略"><a href="#08-过期删除策略" class="headerlink" title="08 过期删除策略"></a>08 过期删除策略</h2><p><img src="/assets/image-20250324114340437.png" alt="image-20250324114340437"></p><p><img src="/assets/image-20250324114407724.png" alt="image-20250324114407724"></p><h2 id="09-数据淘汰策略"><a href="#09-数据淘汰策略" class="headerlink" title="09 数据淘汰策略"></a>09 数据淘汰策略</h2><p><img src="/assets/image-20250324114608956.png" alt="image-20250324114608956"></p><p>Redis 提供了多种数据淘汰策略，用于在内存不足时决定哪些数据需要被移除。常见的策略包括：<strong>noeviction</strong>（默认策略，不淘汰数据，直接返回错误）、<strong>allkeys-lru</strong>（从所有键中移除最近最少使用的数据）、<strong>volatile-lru</strong>（从设置了过期时间的键中移除最近最少使用的数据）、<strong>allkeys-random</strong>（随机移除所有键中的数据）、<strong>volatile-random</strong>（随机移除设置了过期时间的键中的数据）以及 <strong>volatile-ttl</strong>（优先移除剩余生存时间最短的数据）。选择哪种策略取决于具体业务需求，例如如果需要优先保留热点数据，可以选择 LRU 策略；如果需要公平性，可以选择随机策略。合理配置淘汰策略可以有效管理内存资源，提升 Redis 的性能和稳定性。</p><h2 id="10-哨兵机制"><a href="#10-哨兵机制" class="headerlink" title="10 哨兵机制"></a>10 哨兵机制</h2><blockquote><p>Redis 如何实现服务高可用?<br>要想设计一个高可用的 Redis 服务，一定要从 Redis 的多服务节点来考虑，比如 Redis 的主从复制、哨兵模式、切片集群。</p></blockquote><p><img src="/assets/image-20250324111347614.png" alt="image-20250324111347614"></p><blockquote><p>Redis 哨兵模式通过引入哨兵节点来监控主节点和从节点的健康状态，哨兵会定期向主从节点发送 <strong>PING</strong> 命令来检测它们的响应情况，确保系统正常运行。当主节点出现故障时，哨兵会自动触发故障转移流程，从从节点中选举一个新的主节点，并通过 <strong>写同步</strong> 机制保证数据一致性，从而实现高可用性和自动恢复服务。这种架构解决了主从模式中需要手动恢复故障的问题，极大地提升了 Redis 的可靠性和稳定性。</p><p><strong>具体流程</strong></p><ol><li><strong>哨兵</strong>：它就像个“保安”，负责监控主节点和从节点的状态，发现问题就立刻处理。</li><li><strong>主节点</strong>：负责处理写操作，同时把数据同步给从节点。</li><li><strong>从节点</strong>：负责处理读操作，数据是从主节点同步过来的。</li><li><strong>故障转移</strong>：如果主节点挂了，哨兵会从从节点里选一个当新的主节点，保证服务不中断。</li></ol></blockquote><h2 id="11-主从复制"><a href="#11-主从复制" class="headerlink" title="11 主从复制"></a>11 主从复制</h2><p><img src="/assets/image-20250324111216396.png" alt="image-20250324111216396"></p><h2 id="12-了解redis么？"><a href="#12-了解redis么？" class="headerlink" title="12 -了解redis么？"></a>12 -了解redis么？</h2><p><strong>Redis 简介与使用场景</strong></p><p>在这一章中，我们主要学习 Redis。Redis 可以显著提升应用程序中许多功能的性能。因此，学完 Redis 后，我们可以利用它来开发对性能要求较高的功能。此外，我们还可以用它重构现有的一部分功能，从而提升这些功能的性能。</p><p><strong>Redis 的概念</strong></p><p>Redis 是一款基于键值对的 NoSQL 数据库。它的值支持多种数据结构。首先，我们来了解什么是 NoSQL 数据库。</p><ul><li><strong>NoSQL 数据库</strong>：NoSQL 是指非关系型数据库的统称，除了像 MySQL、Oracle 这类关系型数据库之外的其他数据库，都称为 NoSQL 数据库。NoSQL 是 “Not Only SQL” 的缩写，意思是“不仅仅是 SQL”。这是因为其他类型的数据库存储数据的方式多种多样，不仅仅依赖于 SQL。例如，有的数据库按照键值对存储，有的按照列存储，有的按照文档或图形存储，形式各异。</li><li><strong>Redis 的存储方式</strong>：Redis 采用键值对的方式存储数据。它的键（Key）是字符串类型，而值（Value）支持多种数据结构，包括字符串、哈希、列表、集合和有序集合等。这些数据结构在后续课程中会详细讲解。</li></ul><p><strong>Redis 的高性能</strong></p><p>Redis 之所以能够以极高的性能存储数据，是因为它将所有数据存储在内存中。内存的读写速度远快于硬盘，因此 Redis 的速度非常快。</p><p><strong>数据持久化</strong></p><p>虽然 Redis 将数据存储在内存中，但如果服务器关闭，数据是否会丢失呢？这一点无需担心。Redis 在将数据存储到内存的同时，还可以通过快照（RDB）或日志（AOF）的形式将数据持久化到硬盘上，从而保证数据的安全性。</p><ul><li><strong>快照（RDB）</strong>：快照是将当前内存中的数据直接保存到硬盘上。它的优点是数据体积小，恢复速度快，但缺点是存储时会阻塞其他操作，影响性能。因此，快照适合每隔几小时进行一次数据备份。</li><li><strong>日志（AOF）</strong>：日志是将每次执行的 Redis 命令以追加的形式保存到硬盘上。它的优点是实时性好，适合实时存储，但缺点是日志文件体积较大，恢复速度较慢。通常，可以将 RDB 和 AOF 结合使用，以兼顾性能和安全性。</li></ul><p><strong>Redis 的优势</strong></p><p>Redis 是一款非常好用的工具，具有以下优势：</p><ol><li><strong>性能优异</strong>：由于数据存储在内存中，读写速度非常快。</li><li><strong>数据结构丰富</strong>：支持多种数据结构，满足不同的业务需求。</li><li><strong>易于使用</strong>：Redis 的学习和使用非常简单。</li></ol><p><strong>Redis 的使用场景</strong></p><p>Redis 在以下场景中表现尤为出色：</p><ol><li><strong>缓存</strong>：将频繁访问的数据缓存到内存中，显著提升访问速度。</li><li><strong>排行榜</strong>：例如热门帖子排行榜，Redis 可以高效地处理排名和访问。</li><li><strong>计数器</strong>：例如帖子浏览量的统计，Redis 可以快速处理频繁的计数操作。</li><li><strong>社交网络功能</strong>：例如点赞、关注等功能，Redis 可以高效地存储和处理这些数据。</li><li><strong>消息队列</strong>：虽然 Redis 不是专门的消息队列工具，但对于要求不高的场景，Redis 也能满足需求。如果对消息队列要求较高，可以使用更专业的工具，例如 Kafka。</li></ol><hr><p>以上就是 Redis 的简介及其主要使用场景。通过学习和使用 Redis，我们可以显著提升应用程序的性能，并优化现有功能。</p><h2 id="13-redis命令行常用命令"><a href="#13-redis命令行常用命令" class="headerlink" title="13 - redis命令行常用命令"></a>13 - redis命令行常用命令</h2><p>通用指令：<br>select 0&#x2F;1&#x2F;2，换库<br>flushdb，清空<br>keys，看有哪些key，比如keys <em>，查看所有key；keys test</em>，正则匹配看test开头的key<br>type&#x2F;exists&#x2F;del key，查看key类型、是否存在、删除<br>expire key time，设置过期时间<br>操作字符串：<br>set key value<br>get key<br>incr&#x2F;decr key<br>操作hash表<br>hset key field value<br>hget key field<br>操作list<br>lpush&#x2F;rpop listname，左进、右出，也可以左出右进<br>llen listname，长度<br>lindex&#x2F;lrange listname，下标访问&#x2F;区间访问<br>操作set<br>sadd setname item1 item2 …， 添加元素<br>scard setname，大小<br>spop setname，随机弹出，可用于抽奖<br>smembers setname，显示全部元素<br>操作ordered set<br>zadd setname score1 item1 score2 item2 …，添加元素<br>zcard setname，大小<br>zscore setname item，查分<br>zrank setname item，查元素的大小顺序</p><h2 id="14-还了解其他分布式缓存数据库么"><a href="#14-还了解其他分布式缓存数据库么" class="headerlink" title="14 -还了解其他分布式缓存数据库么"></a>14 -还了解其他分布式缓存数据库么</h2><p>下面简单聊聊常见的分布式缓存技术选型。</p><p>分布式缓存的话，比较老牌同时也是使用的比较多的还是 <strong>Memcached</strong> 和 <strong>Redis</strong>。不过，现在基本没有看过还有项目使用 <strong>Memcached</strong> 来做缓存，都是直接用 <strong>Redis</strong>。</p><p>Memcached 是分布式缓存最开始兴起的那会，比较常用的。后来，随着 Redis 的发展，大家慢慢都转而使用更加强大的 Redis 了。</p><p>有一些大厂也开源了类似于 Redis 的分布式高性能 KV 存储数据库，例如，腾讯开源的 <a href="https://github.com/Tencent/Tendis"><strong>Tendis</strong></a>。Tendis 基于知名开源项目 <a href="https://github.com/facebook/rocksdb">RocksDB</a> 作为存储引擎 ，100% 兼容 Redis 协议和 Redis4.0 所有数据模型。关于 Redis 和 Tendis 的对比，腾讯官方曾经发过一篇文章：<a href="https://mp.weixin.qq.com/s/MeYkfOIdnU6LYlsGb24KjQ">Redis vs Tendis：冷热混合存储版架构揭秘</a>，可以简单参考一下。</p><p>不过，从 Tendis 这个项目的 Github 提交记录可以看出，Tendis 开源版几乎已经没有被维护更新了，加上其关注度并不高，使用的公司也比较少。因此，不建议你使用 Tendis 来实现分布式缓存。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 就业 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql面试题</title>
      <link href="/2025/04/11/2025_04/02%20mysql/"/>
      <url>/2025/04/11/2025_04/02%20mysql/</url>
      
        <content type="html"><![CDATA[<h1 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h1><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="01-什么时索引？为什么要使用索引？"><a href="#01-什么时索引？为什么要使用索引？" class="headerlink" title="01 什么时索引？为什么要使用索引？"></a>01 什么时索引？为什么要使用索引？</h3><ul><li><p>官方介绍索引是帮助MySQL<strong>高效获取数据</strong>的<strong>数据结构</strong>。更通俗的说，数据库索引好比是一本书前面的目录，能加快数据库的查询速度。</p></li><li><p>一般来说索引本身也很大，不可能全部存储在内存中，因此<strong>索引往往是存储在磁盘上的文件中的</strong>（可能存储在单独的索引文件中，也可能和数据一起存储在数据文件中）。</p></li><li><p><strong>我们通常所说的索引，包括聚集索引、覆盖索引、组合索引、前缀索引、唯一索引等，没有特别说明，默认都是使用B+树结构组织（多路搜索树，并不一定是二叉的）的索引。</strong></p></li></ul><h3 id="02-常见的索引类型？"><a href="#02-常见的索引类型？" class="headerlink" title="02 常见的索引类型？"></a>02 常见的索引类型？</h3><ul><li><strong>主键索引</strong></li></ul><p>索引列中的值必须是唯一的，不允许有空值。</p><ul><li><strong>普通索引</strong></li></ul><p>MySQL中基本索引类型，没有什么限制，允许在定义索引的列中插入重复值和空值。</p><ul><li><strong>唯一索引</strong></li></ul><p>索引列中的值必须是唯一的，但是允许为空值。</p><ul><li><strong>全文索引</strong></li></ul><p>只能在文本类型CHAR,VARCHAR,TEXT类型字段上创建全文索引。字段长度比较大时，如果创建普通索引，在进行like模糊查询时效率比较低，这时可以创建全文索引。 <del>MyISAM和</del>InnoDB中都可以使用全文索引。</p><ul><li><strong>空间索引</strong></li></ul><p>MySQL在5.7之后的版本支持了空间索引，而且支持OpenGIS几何数据模型。MySQL在空间索引这方面遵循OpenGIS几何数据模型规则。</p><ul><li><strong>前缀索引</strong></li></ul><p>在文本类型如CHAR,VARCHAR,TEXT类列上创建索引时，可以指定索引列的长度，但是数值类型不能指定。</p><p><strong>其他（按照索引列数量分类）</strong></p><ol><li><p>单列索引</p></li><li><p>组合索引</p></li></ol><p>组合索引的使用，需要遵循<strong>最左前缀匹配原则（最左匹配原则）</strong>。一般情况下在条件允许的情况下使用组合索引替代多个单列索引使用。</p><blockquote><p>最左前缀匹配原则和联合索引的<strong>索引存储结构和检索方式</strong>是有关系的。</p><p>在组合索引树中，最底层的叶子节点按照第一列a列从左到右递增排列，但是b列和c列是无序的，b列只有在a列值相等的情况下小范围内递增有序，而c列只能在a，b两列相等的情况下小范围内递增有序。</p></blockquote><h3 id="03-什么是聚簇索引-什么是非聚簇索引？"><a href="#03-什么是聚簇索引-什么是非聚簇索引？" class="headerlink" title="03 什么是聚簇索引?什么是非聚簇索引？"></a>03 什么是聚簇索引?什么是非聚簇索引？</h3><ul><li><strong>聚簇索引（Clustered Index）</strong>：数据行的物理顺序与索引顺序相同的索引。</li><li><strong>非聚簇索引（Non-Clustered Index）</strong>：数据行的物理顺序与索引顺序不同的索引。</li></ul><p>聚簇索引、非聚簇索引和主键索引的主要区别在于它们的<strong>存储方式、数据组织结构以及查询效率</strong>。‌</p><ul><li>‌聚簇索引‌（Clustered Index）：</li></ul><blockquote><ul><li><p>聚簇索引实际上并不是一种单独的索引类型，而是一种数据存储方式。在InnoDB存储引擎中，聚簇索引的叶子节点包含了完整的记录行，这意味着表的数据行都存放在索引树的叶子页中。</p></li><li><p>由于聚簇索引决定了表中数据的物理存储顺序，因此一张表只能有一个聚簇索引。InnoDB的聚簇索引实际上是将索引和数据保存在同一个B-Tree中，如果没有定义主键，InnoDB会选择一个合适的列作为聚簇索引，如果找不到合适的列，会使用一列隐藏的列DB_ROW_ID作为聚簇索引‌.</p></li></ul></blockquote><ul><li>非聚簇索引‌（ n-clustered Index）：</li></ul><blockquote><p>非聚簇索引，也称为二级索引或辅助索引，其叶子节点仅包含主键值，而不包含完整的记录信息。<strong>通过非聚簇索引查找记录时，需要先通过非聚簇索引找到主键值，然后再通过主键值到聚簇索引中找到对应的记录行，这个过程称为回表查询。</strong>由于非聚簇索引的逻辑顺序与磁盘上行的物理存储顺序不同，因此一个表中可以拥有多个非聚簇索引。非聚簇索引的叶子节点中保存的不是指向行的物理指针，而是行的主键值，这有助于减少移动数据或分裂时维护非聚簇索引的开销‌</p></blockquote><ul><li>主键索引</li></ul><blockquote><p>主键索引是一种特殊的聚簇索引，它确保了数据的唯一性。在关系数据库中，主键是唯一标识表中每一行的列。当为表设置主键时，MySQL会自动为该主键创建一个聚簇索引。因此，主键索引既是聚簇索引的一种，也是数据库表中数据组织的核心‌。</p><p>我们常说的<strong>聚簇索引不一定是主键索引，而主键索引一定是聚簇索引。</strong></p><p>可以这样理解，就是在聚簇索引上建立的索引，都是非聚簇索引（也称为二级索引或辅助索引）。因为一个表中只能有一个聚簇索引，其他都是非聚簇索引。</p></blockquote><p><strong>引擎上的区别</strong></p><p><code>InnoDB</code></p><p>使用的是聚簇索引，比如若使用“where id&#x3D;5“的条件查找主键，则按照B+树的检索算法，即可查找到对应的叶子节点，之后获得行数据。</p><p>若对employee_name 列进行条件搜索，则需要两个步骤：</p><ol><li>在辅助索引B+树中检索非主键列（eg：employee_name ），到达其叶子节点获取对应的主键。</li><li>用主键在主索引B+树种再执行一次B+树检索操作，最终到达叶子节点获取整行数据。（重点在于通过其他键需要建立辅助索引）</li></ol><p>聚簇索引默认是主键，若表中无定义主键，InnoDB会选择一唯一且非空的索引代替。若无这样的索引，InnoDB会隐式定义一个主键（类似 oracle中的Rowld，使用一列隐藏的列DB_ROW_ID作为聚簇索引‌)作为聚簇索引。</p><p>若已设了主键为聚簇索引又希望再单独设置聚簇索引，必须先删除原主键，然后添加，最后恢复设置主键即可。</p><p><code>MyISAM</code></p><p>便用的是非聚簇索引，只是存储的内容不同，主键索引B+树的节点存储了主键， 辅助键索引IB+树存储了辅助键。</p><p>表数据存储在独立的地方（MYN文件），这两颗B+树的叶子节点都使用一个地址指向真正的表数据，对于表数据来说，这两个键没有任何差别。<br>由于索引树是独立的，通过辅助键检索无需访问主键的索引树。</p><p><strong>实例演示：</strong></p><ol><li><strong>聚簇索引的使用</strong>：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE employees (</span><br><span class="line">    employee_id INT PRIMARY KEY,</span><br><span class="line">    employee_name VARCHAR(100),</span><br><span class="line">    department_name VARCHAR(100)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在这个例子中，<code>employee_id</code>是聚簇索引，因为它直接存储了数据行。</p><ol start="2"><li><strong>非聚簇索引的使用</strong>：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE INDEX idx_department ON employees (department_name);</span><br></pre></td></tr></table></figure><p><code>idx_department</code>是非聚簇索引，因为它指向数据行的位置。</p><blockquote><h5 id="常见问题解答"><a href="#常见问题解答" class="headerlink" title="常见问题解答"></a>常见问题解答</h5><ul><li><strong>Q</strong>: 为什么聚簇索引通常比非聚簇索引更快？<br><strong>A</strong>: 聚簇索引的数据存储与索引结构结合在一起，减少了额外的数据查找步骤。</li><li><strong>Q</strong>: 我应该在什么情况下使用非聚簇索引？<br><strong>A</strong>: 当你需要基于非主键列进行频繁查询时，非聚簇索引是一个好的选择。</li></ul></blockquote><h3 id="04-什么是回表？"><a href="#04-什么是回表？" class="headerlink" title="04 什么是回表？"></a>04 什么是回表？</h3><p>MySQL中的索引有很多中不同的分类方式，可以按照数据结构分，可以按照逻辑角度分，也可以按照物理存储分，其中，按照物理存储方式，可以分为聚簇索引和非聚簇索引。</p><p>我们日常所说的<strong>主键索引</strong>，其实就是聚簇索引(ClusteredIndex); 主键索引之外，其他的都称之为非主键索引,非主键索引也被称为二级索引(SecondaryIndex)，或者叫作辅助索引。</p><p>对于主键索引和非主键索引，使用的数据结构都是 B+Tree，唯一的区别在于叶子结点中存储的内容不同:</p><ul><li>主键索引的叶子结点存储的是一行完整的数据。</li><li>非主键索引的叶子结点存储的则是主键值。</li></ul><p>这就是两者最大的区别。</p><p>所以，当我们需要查询的时候:</p><ol><li><p>如果是通过主键索引来查询数据，例如<code> select * from user where id=100</code>，那么此时只需要搜索主键索引的 B+Tree 就可以找到数据。</p></li><li><p>如果是通过非主键索引来查询数据，例如<code>select * from user where username=&#39;javaboy&#39;</code>，那么此时需要先搜索 username 这一列索引的 B+Tfee，搜索完成后得到主键的值，然后再去搜索主键索引的 B+Tree,就可以获取到一行完整的数据。</p></li></ol><p><strong>对于第二种查询方式而言，一共搜索了两棵 B+Tree，第一次搜索 B+Tree 拿到主键值后再去搜索主键索引的B+Tree，这个过程就是所谓的回表。</strong></p><p>从上面的分析中我们也能看出，通过非主键索引查询要扫描两棵 B+Tree，而通过主键索引查询只需要扫描一棵B+Tree，所以如果条件允许，还是建议在查询中优先选择通过主键索引进行搜索。</p><h3 id="05-覆盖索引？"><a href="#05-覆盖索引？" class="headerlink" title="05 覆盖索引？"></a>05 覆盖索引？</h3><p><strong>覆盖索引是一种避免回表查询的优化策略:只需要在一棵索引树上就能获取SQL所需的所有列数据，无需回表速度更快。</strong></p><p>具体的实现方式:</p><blockquote><p>将被查询的字段建立普通索引或者联合索引，这样的话就可以直接返回索引中的的数据，不需要再通过聚集索引去定位行记录，避免了回表的情况发生。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN SELECT user name,user age,user level FROM usersWHERE user name =tom&#x27;AND user_age =17;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20250322182804330.png" alt="image-20250322182804330"></p><ul><li>覆盖索引的定义与注意事项:<br>如果一个索引包含了 所有需要査询的字段的值 (不需要回表)，这个索引就是覆盖索引</li><li>MySQL只能使用B+Tree索引做覆盖索引(因为只有B+树能存储索引列值)</li><li>在explain的Extra列,如果出现<code>Using index</code> 表示 使用到了覆盖索引,所取的数据完全在索引中就能拿到</li></ul><h3 id="06-索引的创建原则"><a href="#06-索引的创建原则" class="headerlink" title="06 索引的创建原则"></a>06 索引的创建原则</h3><p>在进行索引设计的时候，应该保证索引字段占用的空间越小越好，这只是一个大的方向，还有一些细节点需要注意下:</p><ol><li><p>适合索引的列是出现在where字句中的列，或者连接子句中指定的列</p></li><li><p>基数较小的表，索引效果差，没必要创建索引</p></li></ol><blockquote><p>基数比较小，比如dv-distinct value，状态列，只有1234四种状态，此时用索引不会增加效率</p></blockquote><ol start="3"><li>在选择索引列的时候，越短越好，可以指定某些列的一部分，没必要用全部字段的值</li></ol><blockquote><p>假设有一个表 <code>users</code>，其中有一个字段 <code>email</code>，类型是 <code>VARCHAR(255)</code>。</p><h4 id="直接索引整个字段"><a href="#直接索引整个字段" class="headerlink" title="直接索引整个字段"></a><strong>直接索引整个字段</strong></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> INDEX idx_email <span class="keyword">ON</span> users(email);</span><br></pre></td></tr></table></figure><p>这个索引会很大，因为每个邮箱地址都很长。</p><h4 id="只索引前-10-个字符"><a href="#只索引前-10-个字符" class="headerlink" title="只索引前 10 个字符"></a><strong>只索引前 10 个字符</strong></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> INDEX idx_email_prefix <span class="keyword">ON</span> users(email(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><p>这个索引只存储邮箱的前 10 个字符，索引会小很多，查询速度也会更快。</p></blockquote><ol start="4"><li>不要给表中的每一个字段都创建索引，并不是索引越多越好</li></ol><blockquote><h3 id="为什么不要给每个字段都创建索引？"><a href="#为什么不要给每个字段都创建索引？" class="headerlink" title="为什么不要给每个字段都创建索引？"></a><strong>为什么不要给每个字段都创建索引？</strong></h3><ol><li><strong>写操作变慢</strong><br>每次插入、更新或删除数据时，数据库需要更新所有索引，写操作会变慢。</li><li><strong>浪费空间</strong><br>每个索引都会占用磁盘空间，索引太多会浪费存储资源。</li><li><strong>查询不一定更快</strong><br>索引太多会让数据库的查询优化器难以选择，反而可能降低查询效率。</li><li><strong>有些字段不需要索引</strong><br>比如性别（只有男&#x2F;女）或者很少用于查询的字段，创建索引没有意义。</li></ol></blockquote><ol start="5"><li>定义有外键的数据列一定要创建索引</li></ol><blockquote><ol><li><strong>提高关联查询性能</strong><br>外键通常用于表之间的关联查询（如 <code>JOIN</code>）。如果没有索引，数据库需要全表扫描来查找匹配的记录，效率很低。</li><li><strong>保证数据一致性</strong><br>外键约束会检查父表和子表的数据一致性。如果没有索引，每次插入或更新子表时，数据库需要扫描父表，影响性能。</li><li><strong>避免死锁</strong><br>在并发操作中，外键列没有索引可能导致锁冲突和死锁问题。索引可以减少锁的竞争，提高并发性能。</li></ol><p>例子：假设有两个表：</p><ul><li><pre><code>orders<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  (订单表)</span><br><span class="line"></span><br><span class="line">  - `order_id` (主键)</span><br><span class="line">  - `customer_id` (外键，关联 `customers` 表)</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  customers</span><br></pre></td></tr></table></figure>(客户表)- `customer_id` (主键)</code></pre></li></ul><p>如果 <code>orders</code> 表的 <code>customer_id</code> 没有索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> orders <span class="keyword">JOIN</span> customers <span class="keyword">ON</span> orders.customer_id <span class="operator">=</span> customers.customer_id;</span><br></pre></td></tr></table></figure><p>数据库需要扫描整个 <code>orders</code> 表来查找匹配的 <code>customer_id</code>，性能会很差。</p><p>如果为 <code>customer_id</code> 创建索引：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> INDEX idx_customer_id <span class="keyword">ON</span> orders(customer_id);</span><br></pre></td></tr></table></figure><p>数据库可以快速定位匹配的记录，查询性能显著提升。</p></blockquote><p>6.更新频繁的字段不要有索引</p><blockquote><p>如果字段更新频繁，索引的维护成本会很高，导致写操作变慢。频繁更新索引会增加锁的竞争，可能导致并发性能下降，甚至引发死锁。</p></blockquote><p>7.创建索引的列不要过多，可以创建组合索引，但是组合索引的列的个数不建议太多</p><blockquote><p>每个索引都会占用磁盘空间。如果索引列过多，索引会变得非常大，浪费存储资源。组合索引的列数越多，索引的选择性越低（即索引值重复的可能性越大），查询效率会下降。</p></blockquote><p>8.大文本、大对象不要创建索引</p><blockquote><p>大文本和大对象字段通常用于存储描述性内容，很少用于查询条件。为它们创建索引往往没有实际意义。通常包含大量数据。如果为它们创建索引，索引会变得非常大，浪费存储资源。</p></blockquote><h3 id="07-什么情况下不适合添加索引？"><a href="#07-什么情况下不适合添加索引？" class="headerlink" title="07 什么情况下不适合添加索引？"></a>07 什么情况下不适合添加索引？</h3><ol><li><strong>表数据太少的数据表不适合建立索引</strong>。</li><li><strong>经常增、删、改的表不适合建立索引</strong>，因为索引需要动态维护，增加索引会加大数据表的维护难度。</li><li><strong>对于区分度不高（字段值的唯一性不高）的字段，不适合建立索引</strong>。例如性别字段，由于这些列的取值很少，正常只有男、女。在查询的结果中，结果集的数据行占了表中数据行的最大比例，即需要在表中搜索的数据行的比例很大。增加索引，并不能明显加快检索速度。</li><li><strong>定义为 <code>text</code>、<code>bit</code> 数据类型的列不适合建立索引</strong>，因为这些列的数据量要么相当大，要么取值很少。</li><li><strong>WHERE 条件中用不到的字段不适合创建索引</strong>。</li><li><strong>频繁更新的字段不适合创建索引</strong>，因为每次更新不单单是更新了记录，还会更新索引，加重 IO 负担。</li><li><strong>在查询中很少使用的列不适合创建索引</strong>。因为这些列很少使用到，因此有索引或者无索引，并不能提高查询速度。相反，由于增加了索引，反而降低了数据表的维护速度和增大了空间消耗。</li></ol><blockquote><p><strong>哪些情况适合创建索引？</strong></p><ol><li><strong>频繁作为查询条件的字段（用在 WHERE 子句中的列）适合建立索引</strong>，可以加快查询的速度。</li><li><strong>表与表连接用于多表联合查询的约束条件的字段适合建立索引</strong>。</li><li><strong>查询中排序的字段适合建立索引</strong>。因为索引已经排序，这样查询时可以利用索引的排序，加快排序速度。</li><li><strong>查询中用于统计或者分组的字段适合建立索引</strong>。</li><li><strong>经常需要根据范围进行搜索的列上适合建立索引</strong>，因为索引已经排序，其指定的范围是连续的。</li></ol></blockquote><h3 id="08-什么情况下索引会失效？"><a href="#08-什么情况下索引会失效？" class="headerlink" title="08 什么情况下索引会失效？"></a>08 什么情况下索引会失效？</h3><p><strong>1. 对索引字段进行了运算或者使用了函数</strong></p><blockquote><p><strong>原因：</strong><br>如果对索引字段进行了运算（如 <code>WHERE age + 1 &gt; 30</code>）或使用了函数（如 <code>WHERE UPPER(name) = &#39;JOHN&#39;</code>），数据库无法直接使用索引，因为索引存储的是原始值，而不是运算或函数处理后的值。</p><p><strong>例子：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 索引失效</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> <span class="keyword">YEAR</span>(create_time) <span class="operator">=</span> <span class="number">2023</span>;</span><br></pre></td></tr></table></figure></blockquote><p><strong>2. 查询中的数据类型和字段类型不一致</strong></p><blockquote><p><strong>原因：</strong><br>如果查询条件中的数据类型与索引字段的类型不一致（如字段是 <code>VARCHAR</code>，但查询条件是数字），数据库可能无法使用索引，因为它需要进行隐式类型转换。</p><p><strong>例子：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 索引失效</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> phone <span class="operator">=</span> <span class="number">123456789</span>; <span class="comment">-- phone 是 VARCHAR 类型</span></span><br></pre></td></tr></table></figure></blockquote><p><strong>3. 违反了索引的最左匹配原则</strong></p><blockquote><p><strong>原因：</strong><br>对于组合索引，查询条件必须从索引的最左列开始，否则索引无法发挥作用。如果跳过了最左列，索引会失效。</p><p><strong>例子：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 组合索引 (name, age)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> age <span class="operator">=</span> <span class="number">30</span>; <span class="comment">-- 索引失效，因为跳过了 name</span></span><br></pre></td></tr></table></figure></blockquote><p><strong>4. 全表扫描更快</strong></p><blockquote><p><strong>原因：</strong><br>在某些情况下，数据库优化器会认为全表扫描比使用索引更快（比如表中数据量很小，或者索引的选择性很低），因此会选择不使用索引。</p><p><strong>例子：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 如果表只有 10 行数据，数据库可能选择全表扫描</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> gender <span class="operator">=</span> <span class="string">&#x27;male&#x27;</span>; <span class="comment">-- gender 字段选择性低</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="09-SQL中的like，-在查询字符串前面-后面是否会走索引？为什么？"><a href="#09-SQL中的like，-在查询字符串前面-后面是否会走索引？为什么？" class="headerlink" title="09 SQL中的like，%在查询字符串前面&#x2F;后面是否会走索引？为什么？"></a>09 SQL中的like，%在查询字符串前面&#x2F;后面是否会走索引？为什么？</h3><ol><li><strong><code>%</code> 在查询字符串前面（如 <code>%John</code>）</strong><br>​<strong>不会走索引</strong>，因为索引是按照字段值的前缀组织的（如 B+Tree 索引），<code>%</code> 在前面时无法利用索引的前缀匹配特性，数据库只能进行全表扫描。</li><li><strong><code>%</code> 在查询字符串后面（如 <code>John%</code>）</strong><br>​<strong>会走索引</strong>，因为 <code>%</code> 在后面时可以利用索引的前缀匹配特性，数据库可以快速定位到符合条件的记录。</li><li><strong><code>%</code> 在查询字符串中间（如 <code>%John%</code>）</strong><br>​<strong>不会走索引</strong>，因为 <code>%</code> 在中间时无法利用索引的前缀匹配特性，数据库只能进行全表扫描。</li><li><strong>无 <code>%</code> 的精确匹配（如 <code>John</code>）</strong><br>​<strong>会走索引</strong>，因为精确匹配可以直接利用索引进行查找，效率最高。</li></ol><blockquote><p><code>LIKE</code> 查询是否会走索引，取决于 <code>%</code> 的位置。如果 <code>%</code> 在查询字符串前面（如 <code>%John</code>）或中间（如 <code>%John%</code>），索引不会被使用，数据库会进行全表扫描；如果 <code>%</code> 在查询字符串后面（如 <code>John%</code>），索引会被使用，因为可以利用索引的前缀匹配特性。”</p></blockquote><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><h3 id="01-MySQL事务特性-ACID"><a href="#01-MySQL事务特性-ACID" class="headerlink" title="01 MySQL事务特性(ACID)"></a>01 MySQL事务特性(ACID)</h3><p>MySQL 的事务是数rrr据库操作的基本单位，它确保一组操作要么全部成功，要么全部失败，从而保证数据的一致性和完整性。</p><p><strong>1. 原子性（Atomicity）</strong></p><ul><li><strong>定义</strong>：事务是一个不可分割的操作单元，要么全部执行成功，要么全部失败回滚。</li><li><strong>作用</strong>：确保事务中的操作要么全部生效，要么全部不生效，不会出现部分成功、部分失败的情况。</li><li><strong>实现方式</strong>：通过 <strong>Undo Log</strong>（回滚日志）实现，如果事务失败，MySQL 会利用 Undo Log 回滚所有操作。</li></ul><blockquote><p><strong>例子</strong>：<br>转账操作中，A 向 B 转账 100 元，必须同时完成 A 账户扣款和 B 账户加款。如果其中一步失败，整个操作会回滚。</p></blockquote><p><strong>2. 一致性（Consistency）</strong></p><ul><li><strong>定义</strong>：事务执行前后，数据库必须保持一致性状态，即数据必须符合所有定义的约束（如唯一性、外键等）。</li><li><strong>作用</strong>：确保数据库从一个有效状态转换到另一个有效状态。</li><li><strong>实现方式</strong>：通过 <strong>约束</strong>（如主键、外键、唯一性等）和 <strong>原子性</strong> 共同保证。</li></ul><blockquote><p><strong>例子</strong>：<br>转账操作中，A 和 B 的账户总额在事务执行前后必须保持一致。</p></blockquote><hr><p><strong>3. 隔离性（Isolation）</strong></p><ul><li><strong>定义</strong>：多个并发事务之间是相互隔离的，一个事务的操作不会被其他事务干扰。</li><li><strong>作用</strong>：防止并发事务导致的数据不一致问题。</li><li><strong>实现方式</strong>：通过 <strong>锁机制</strong> 和 <strong>MVCC（多版本并发控制）</strong> 实现。</li><li>隔离级别<ul><li><strong>读未提交（Read Uncommitted）</strong>：最低级别，事务可以读取未提交的数据。</li><li><strong>读已提交（Read Committed）</strong>：事务只能读取已提交的数据。</li><li><strong>可重复读（Repeatable Read）</strong>：MySQL 默认级别，确保同一事务中多次读取的数据一致。</li><li><strong>串行化（Serializable）</strong>：最高级别，事务完全串行执行。</li></ul></li></ul><blockquote><p><strong>例子</strong>：<br>事务 A 和事务 B 同时操作同一行数据，隔离性确保它们不会互相干扰。</p></blockquote><hr><p><strong>4. 持久性（Durability）</strong></p><ul><li><strong>定义</strong>：事务一旦提交，对数据的修改就是永久性的，即使系统崩溃也不会丢失。</li><li><strong>作用</strong>：确保数据的可靠性。</li><li><strong>实现方式</strong>：通过 <strong>Redo Log（重做日志）</strong> 实现，事务提交时，修改会先写入 Redo Log，再写入磁盘。</li></ul><blockquote><p><strong>例子</strong>：<br>转账操作提交后，即使数据库崩溃，数据也不会丢失。</p></blockquote><h3 id="02-事务的并发问题？"><a href="#02-事务的并发问题？" class="headerlink" title="02 事务的并发问题？"></a>02 事务的并发问题？</h3><blockquote><p>事务并发引起的三大问题</p><ul><li><p><strong>脏读</strong>：一个事务会读取到另一个事务未提交的数据。(<strong>读取到未提交数据</strong>)</p><p>例子：事务A修改了数据但还未提交，事务B读取到了事务A修改的数据。然后事务A因为某些错误回滚了，这个时候事务B读取到的数据就是脏的，这就是脏读。</p></li><li><p><strong>不可重复读</strong>：在同一事务内，事务两次读取到的数据是不一样的。(<strong>原数据中同一条数据被修改或被删除</strong>)</p><p>例子：事务A读取了一条数据之后，事务B修改了这条数据并提交了事务，然后事务A再次读取这条数据，就会发现两次结果不一致。这就是不可重复读。</p></li><li><p><strong>幻读</strong>：事务中的同一个查询在不同的时间产生不同的行集，这个就是幻读问题。(<strong>数据总条数新增</strong>)</p><p>例子：事务A使用一定的条件查询，然后事务B增加了符合条件的记录，当事务A再次查询的时候，发现两次查询的结果集不一样，好像产生了幻觉。这就是幻读。</p></li></ul><p>不可重复读和幻读，都是读取到其他事务<strong>已经提交</strong>的数据。而脏读是读取到其他事务还<strong>未提交</strong>的数据</p></blockquote><h3 id="03-MySQL可重复读级别下如何解决幻读问题"><a href="#03-MySQL可重复读级别下如何解决幻读问题" class="headerlink" title="03 MySQL可重复读级别下如何解决幻读问题"></a>03 MySQL可重复读级别下如何解决幻读问题</h3><p>MySQL<code>InnoDB </code>引擎的默认隔离级别虽然是「可重复读」，但是它很大程度上避免幻读现象（并不是完全解决了），解决的方案有两种：</p><ul><li><p>针对快照读（普通 select 语句），是通过 MVCC方式解决了幻读，因为可重复读隔离级别下，事务执行过程中看到的数据，一直跟这个事务启动时看到的数据是一致的，即使中途有其他事务插入了一条数据，是查询不出来这条数据的，所以就很好了避免幻读问题。</p></li><li><p>针对当前读（select … for update 等语句），是通过 next-key lock（记录锁+间隙锁）方式解决了幻读，因为当执行 select … for update 语句的时候，会加上 next-key lock，如果有其他事务在 next-key lock 锁范围内插入了一条记录，那么这个插入语句就会被阻塞，无法成功插入，所以就很好了避免幻读问题。</p></li></ul><p>这两个解决方案是很大程度上解决了幻读现象，但是还是有个别的情况造成的幻读现象是无法解决的。</p><p>——————————————幻读—————————————</p><p>同一个查询在不同的时间产生不同的结果集时，事务中就会出现所谓的幻象问题。例如，如果 SELECT 执行了两次，但第二次返回了第一次没有返回的行，则该行是“幻像”行。</p><p>举个例子，假设一个事务在 T1 时刻和 T2 时刻分别执行了下面查询语句，途中没有执行其他任何语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM t_test WHERE id &gt; 100;</span><br></pre></td></tr></table></figure><p>只要 T1 和 T2 时刻执行产生的结果集是不相同的，那就发生了幻读的问题，比如：</p><ul><li>T1 时间执行的结果是有 5 条行记录，而 T2 时间执行的结果是有 6 条行记录，那就发生了幻读的问题。</li><li>T1 时间执行的结果是有 5 条行记录，而 T2 时间执行的结果是有 4 条行记录，也是发生了幻读的问题。</li></ul><p>—————————————————–&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;————————————————</p><p><strong>快照读是如何避免幻读</strong></p><p>可重复读隔离级是由 MVCC（多版本并发控制）实现的，实现的方式是开始事务后（执行 begin 语句后），在执行第一个查询语句后，会创建一个 Read View，后续的查询语句利用这个 Read View，通过这个 Read View 就可以在 undo log 版本链找到事务开始时的数据，所以事务过程中每次查询的数据都是一样的，即使中途有其他事务插入了新纪录，是查询不出来这条数据的，所以就很好了避免幻读问题。</p><p><strong>当前读是如何避免幻读</strong></p><blockquote><p>当前读通过 <strong>锁机制</strong> 来避免幻读，具体实现如下：</p><ol><li><strong>Next-Key Lock（临键锁）</strong><br>MySQL 的 InnoDB 引擎使用 ​<strong>Next-Key Lock</strong>，它是 ​<strong>记录锁（Record Lock）​</strong> 和 ​<strong>间隙锁（Gap Lock）​</strong> 的组合。<ul><li><strong>记录锁</strong>：锁定当前记录。</li><li><strong>间隙锁</strong>：锁定记录之间的间隙，防止其他事务插入新记录。</li></ul></li><li><strong>锁定范围</strong><br>当执行当前读（如 <code>SELECT ... FOR UPDATE</code> 或 <code>SELECT ... LOCK IN SHARE MODE</code>）时，MySQL 会对查询范围内的记录和间隙加锁，防止其他事务插入新记录。</li></ol></blockquote><h3 id="04-MVCC解决了什么问题？"><a href="#04-MVCC解决了什么问题？" class="headerlink" title="04 MVCC解决了什么问题？"></a>04 MVCC解决了什么问题？</h3><p><strong>1.什么是MVCC？</strong></p><p>MVCC全称是【Multi-Version ConCurrency Control】，即多版本控制协议。</p><p>多版本控制（Multiversion Concurrency Control）: 指的是一种提高并发的技术。最早的数据库系统，只有读读之间可以并发，读写，写读，写写都要阻塞。引入多版本之后，只有写写之间相互阻塞，其他三种操作都可以并行，这样大幅度提高了<code>InnoDB</code>的并发度。在内部实现中，<code>InnoDB</code>通过<code>undo log</code>保存每条数据的多个版本，并且能够找回数据历史版本提供给用户读，每个事务读到的数据版本可能是不一样的。在同一个事务中，用户只能看到该事务创建快照之前已经提交的修改和该事务本身做的修改。</p><p>MVCC只在 Read Committed 和 Repeatable Read两个隔离级别下工作。其他两个隔离级别和MVCC不兼容，Read Uncommitted总是读取最新的记录行，不需要MVCC的支持；Serializable 则会对所有读取的记录行都加锁，单靠MVCC无法完成。</p><p>MySQL的<code>InnoDB</code>存储引擎默认事务隔离级别是RR(可重复读)，是通过 “行级锁+MVCC”一起实现的，正常读的时候不加锁，写的时候加锁。而 MCVV 的实现依赖：隐藏字段、Read View、Undo log。</p><p><strong>2.MVCC解决了什么问题</strong></p><p>在并发事务下，可能会产生如下问题：</p><p>1.脏读 ：当前事务读取到其它事务未提交的数据。<br>2.脏写 ： 事务B提交后，将事务A提交的数据覆盖。<br>3.不可重复读：在同一个事务中，不同时间段执行相同的查询语句，得到的结果集不相同。<br>4.幻读：事务A读取到了事务B新增的数据。</p><p>MVCC可重复读模式下，解决了事务的脏读、脏写、不可重复读等问题，但是还是存在幻读问题，幻读问题可以使用间隙锁进行解决。</p><h3 id="05-MVCC什么原理？"><a href="#05-MVCC什么原理？" class="headerlink" title="05 MVCC什么原理？"></a>05 MVCC什么原理？</h3><p><strong>MVCC全称是【Multi-Version ConCurrency Control】，即多版本控制协议。是事务隔离级别的无锁实现方式，用于提高事务的并发性能</strong></p><p>Mysql中的innoDB中就是使用这种方法来提高读写事务的并发性能、原因是MVCC是一种不采用锁来控制事务的方式，是一种非堵塞、同时还可以解决脏读，幻读，不可重复读等事务隔离问题，但不能解决更新丢失问题。</p><p>总之：就是MVCC是通过保存数据的历史版本，根据比较版本号来处理数据是否显示，从而达到读取数据的时候不需要加锁就可以保证事务隔离性的效果。</p><p><strong>MVCC的实现原理是依靠</strong>：记录中的3个隐含字段、undo log日志、Read View实现的。</p><p>1、对于 InnoDB ，聚簇索引记录中包含 3 个隐藏的列：</p><p>ROW ID：隐藏的自增 ID，如果表没有主键，InnoDB 会自动按 ROW ID 产生一个聚集索引树。<br>事务 ID：记录最后一次修改该记录的事务 ID。<br>回滚指针：指向这条记录的上一个版本。<br>2、undo log日志:<br>insert undo log：事务进行插入操作时产生、在事务回滚时需要，提交事务后可以被立即丢</p><p>update undo log：进行update、delete时产生的undo log、不仅在回滚事务时需要、在快照读时也需要。所以不能随便删除，只有在快速读或事务回滚不涉及该日志时，对应的日志才会被purge线程统一清除（purge类似jvm中的gc垃圾回收器）</p><p>3、Read View(读视图)<br>        read view读视图就是在进行快照读时会产生一个read view视图、在该事务执行的快照读的那一刻，会生成数据库系统当前的一个快照，记录并维护系统当前活跃事务的ID(当每个事务开启时，都会被分配一个ID, 这个ID是递增的，所以最新的事务，ID值越大)。</p><p><strong>判断是否可读</strong></p><p>小于最小活动事务ID，可读。<br>大于最大活动事务ID，可读。<br>之间，在集合中，不可读，不在集合中，可读。<br><strong>ReadView生成时机</strong></p><p>READ COMMITTED —— 每次读取数据前都生成一个ReadView。<br>REPEATABLE READ —— 在第一次读取数据时生成一个ReadView。<br><strong>4:总结出 MVCC 实现的原理大致是：</strong><br>        InnoDB 每一行数据都有一个指向上一个版本数据在undo log日志里的位置指针。如果要执行更新操作，会将原记录放入 undo log 中，并通过隐藏的回滚指针指向 undo log 中的原记录。其它事务此时需要查询时，就是查询 undo log 中这行数据的最后一个历史版本。</p><p>MVCC 最大的好处是读不加锁，读写不冲突，极大地增加了 MySQL 的并发性。通过 MVCC，保证了事务的隔离性。</p><h2 id="mysql的锁机制"><a href="#mysql的锁机制" class="headerlink" title="mysql的锁机制"></a>mysql的锁机制</h2>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 就业 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring面试题</title>
      <link href="/2025/04/11/2025_04/01%20spring/"/>
      <url>/2025/04/11/2025_04/01%20spring/</url>
      
        <content type="html"><![CDATA[<h1 id="牛客论坛01-Spring常见面试题"><a href="#牛客论坛01-Spring常见面试题" class="headerlink" title="牛客论坛01-Spring常见面试题"></a>牛客论坛01-Spring常见面试题</h1><h2 id="Spring中的IoC和AOP是什么？它们的作用是什么？"><a href="#Spring中的IoC和AOP是什么？它们的作用是什么？" class="headerlink" title="Spring中的IoC和AOP是什么？它们的作用是什么？"></a>Spring中的IoC和AOP是什么？它们的作用是什么？</h2><blockquote><p><strong>IoC（Inversion of Control:控制反转）</strong> 是一种设计思想，而不是一个具体的技术实现。IoC 的思想就是将原本在程序中手动创建对象的控制权，交由 Spring 框架来管理。不过， IoC 并非 Spring 特有，在其他语言中也有应用。所以说，控制反转是一种思想，目的是为了<strong>降低了代码耦合度，提升了系统的灵活性和可维护性</strong>。</p><p>在<strong>没有IoC容器</strong>的情况下，比如类A通过<code>new</code>关键字直接实例化类B，对象创建和依赖关系由开发者手动控制，代码耦合度高，难以维护和扩展。而在<strong>有IoC容器</strong>的情况下，IoC容器负责实例化类A和类B，并管理它们的依赖关系，主函数只需从容器中获取所需对象，无需手动创建。</p><p>所谓控制，就是指的是对象的创建（实例化，管理什么的），反转指的是将控制权交给外部框架（spring框架，IoC容器）。IoC 容器就像是一个工厂一样，当我们需要创建一个对象的时候，只需要配置好配置文件&#x2F;注解即可，完全不用考虑对象是如何被创建出来的。在实际项目中一个 Service 类可能依赖了很多其他的类，假如我们需要实例化这个 Service，你可能要每次都要搞清这个 Service 所有底层类的构造函数，这可能会把人逼疯。如果利用 IoC 的话，你只需要配置好，然后在需要的地方引用就行了，这大大增加了项目的可维护性且降低了开发难度。</p><p>其实在spring中IoC就是一个实现IoC的载体，是一个Map，其中存放着各种对象，早期是通过XML来配置的Bean，后面SpringBoot注解配置更好，只需加上 <code>@Autowired</code> 或 <code>@Resource</code>，Spring 就会自动注入依赖对象慢慢流行起来。</p><hr><p>AOP是面向切面编程，能够将那些与业务无关，却为业务模块所共同调用的逻辑或责任（例如事务处理、日志管理、权限控制等）封装起来，便于减少系统的重复代码，降低模块间的耦合度，并有利于未来的可拓展性和可维护性。Spring AOP 就是基于动态代理的，如果要代理的对象，实现了某个接口，那么 Spring AOP 会使用 JDK 动态代理，去创建代理对象，而对于没有实现接口的对象，就无法进行代理了，这时候 Spring AOP 会使用 <strong>Cglib</strong> 生成一个被代理对象的子类来作为代理。</p></blockquote><h2 id="Spring-MVC"><a href="#Spring-MVC" class="headerlink" title="Spring MVC"></a>Spring MVC</h2><p>其流程大概是以下几个步骤：</p><p><img src="https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/de6d2b213f112297298f3e223bf08f28.png" alt="img"></p><p><strong>流程说明（重要）：</strong></p><ol><li>客户端（浏览器）发送请求， <code>DispatcherServlet</code>拦截请求。（dis po cher servlet）</li><li><code>DispatcherServlet</code> 根据请求信息调用 <code>HandlerMapping</code> 。<code>HandlerMapping</code> 根据 URL 去匹配查找能处理的 <code>Handler</code>（也就是我们平常说的 <code>Controller</code> 控制器） ，并会将请求涉及到的拦截器和 <code>Handler</code> 一起封装。</li><li><code>DispatcherServlet</code> 调用 <code>HandlerAdapter</code>适配器执行 <code>Handler</code> 。</li><li><code>Handler</code> 完成对用户请求的处理后，会返回一个 <code>ModelAndView</code> 对象给<code>DispatcherServlet</code>，<code>ModelAndView</code> 顾名思义，包含了数据模型以及相应的视图的信息。<code>Model</code> 是返回的数据对象，<code>View</code> 是个逻辑上的 <code>View</code>。</li><li><code>ViewResolver</code> 会根据逻辑 <code>View</code> 查找实际的 <code>View</code>。</li><li><code>DispaterServlet</code> 把返回的 <code>Model</code> 传给 <code>View</code>（视图渲染）。</li><li>把 <code>View</code> 返回给请求者（浏览器）</li></ol><p>上述流程是传统开发模式（JSP，Thymeleaf 【time leaf】等）的工作原理。然而现在主流的开发方式是前后端分离，这种情况下 Spring MVC 的 <code>View</code> 概念发生了一些变化。由于 <code>View</code> 通常由前端框架（Vue, React 等）来处理，后端不再负责渲染页面，而是只负责提供数据，因此：</p><ul><li>前后端分离时，后端通常不再返回具体的视图，而是返回<strong>纯数据</strong>（通常是 JSON 格式），由前端负责渲染和展示。</li><li><code>View</code> 的部分在前后端分离的场景下往往不需要设置，Spring MVC 的控制器方法只需要返回数据，不再返回 <code>ModelAndView</code>，而是直接返回数据，Spring 会自动将其转换为 JSON 格式。相应的，<code>ViewResolver</code> 也将不再被使用。</li></ul><p>怎么做到呢？</p><ul><li>使用 <code>@RestController</code> 注解代替传统的 <code>@Controller</code> 注解，这样所有方法默认会返回 JSON 格式的数据，而不是试图解析视图。</li><li>如果你使用的是 <code>@Controller</code>，可以结合 <code>@ResponseBody</code> 注解来返回 JSON。</li></ul><blockquote><p>“在传统 Spring MVC 中，<code>DispatcherServlet</code> 拦截请求后，通过 <code>HandlerMapping</code> 查找 <code>Controller</code>，执行处理并返回 <code>ModelAndView</code>，最后由 <code>ViewResolver</code> 解析视图并渲染返回。而在前后端分离模式下，后端通过 <code>@RestController</code> 或 <code>@ResponseBody</code> 直接返回 JSON 数据，由前端负责渲染，<code>ViewResolver</code> 和视图渲染流程不再需要。这种模式更符合现代开发需求，提升了开发效率和系统灵活性。”</p></blockquote><h2 id="Spring-Spring-MVC-SpringBoot直接有什么关系？"><a href="#Spring-Spring-MVC-SpringBoot直接有什么关系？" class="headerlink" title="Spring, Spring MVC, SpringBoot直接有什么关系？"></a>Spring, Spring MVC, SpringBoot直接有什么关系？</h2><blockquote><p>Spring 是一个开源的 Java 企业级开发框架，主要提供 IoC（控制反转）和 AOP（面向切面编程）功能，简化 Java 开发。Spring MVC 是 Spring 框架中的一个子模块，专门用于构建 Web 应用，它基于 MVC（Model-View-Controller）设计模式，提供了强大的请求处理、数据绑定、视图解析等功能，适用于开发传统的 Java Web 应用。而 Spring Boot 是在 Spring 基础上发展而来的，它简化了 Spring 的配置，提供了一套开箱即用的默认配置，并且内置了 Tomcat 等 Web 服务器，让开发者可以快速构建独立运行的 Spring 应用，而无需手动配置 XML 或复杂的 Bean 管理。简单来说，Spring 是一个大框架，Spring MVC 负责 Web 层，而 Spring Boot 进一步简化了 Spring 的使用，提升了开发效率。</p></blockquote><h2 id="Spring框架中用了哪些设计模式？"><a href="#Spring框架中用了哪些设计模式？" class="headerlink" title="Spring框架中用了哪些设计模式？"></a>Spring框架中用了哪些设计模式？</h2><p><strong>工厂设计模式</strong> : Spring 使用工厂模式通过 <code>BeanFactory</code>、<code>ApplicationContext</code> 创建 bean 对象。</p><p><strong>代理设计模式</strong> : Spring AOP 功能的实现。</p><p><strong>单例设计模式</strong> : Spring 中的 Bean 默认都是单例的。</p><p><strong>模板方法模式</strong> : Spring 中 <code>jdbcTemplate</code>、<code>hibernateTemplate</code> 等以 Template 结尾的对数据库操作的类，它们就使用到了模板模式。</p><p><strong>包装器设计模式</strong> : 我们的项目需要连接多个数据库，而且不同的客户在每次访问中根据需要会去访问不同的数据库。这种模式让我们可以根据客户的需求能够动态切换不同的数据源。</p><p><strong>观察者模式:</strong> Spring 事件驱动模型就是观察者模式很经典的一个应用。</p><p><strong>适配器模式</strong> : Spring AOP 的增强或通知(Advice)使用到了适配器模式、spring MVC 中也是用到了适配器模式适配<code>Controller</code>。</p><h2 id="什么是spring的bean？"><a href="#什么是spring的bean？" class="headerlink" title="什么是spring的bean？"></a>什么是spring的bean？</h2><blockquote><p>Bean 代指的就是那些被 IoC 容器所管理的对象。</p><p>我们需要告诉 IoC 容器帮助我们管理哪些对象，这个是通过配置元数据来定义的。配置元数据可以是 XML 文件、注解或者 Java 配置类。</p></blockquote><h2 id="Bean的注解有哪些？"><a href="#Bean的注解有哪些？" class="headerlink" title="Bean的注解有哪些？"></a>Bean的注解有哪些？</h2><blockquote><p><code>@Component</code>：通用的注解，可标注任意类为 <code>Spring</code> 组件。如果一个 Bean 不知道属于哪个层，可以使用<code>@Component</code> 注解标注。</p><p><code>@Repository</code> : 对应持久层即 Dao 层，主要用于数据库相关操作。</p><p><code>@Service</code> : 对应服务层，主要涉及一些复杂的逻辑，需要用到 Dao 层。</p><p><code>@Controller</code> : 对应 Spring MVC 控制层，主要用于接受用户请求并调用 <code>Service</code> 层返回数据给前端页面。</p></blockquote><h2 id="spring的事务"><a href="#spring的事务" class="headerlink" title="spring的事务"></a>spring的事务</h2><p><strong>事务是逻辑上的一组操作，要么都执行，要么都不执行。</strong></p><h3 id="Spring-事务传播机制有哪些"><a href="#Spring-事务传播机制有哪些" class="headerlink" title="Spring 事务传播机制有哪些"></a>Spring 事务传播机制有哪些</h3><p>propagation 代表事务的传播行为，默认值为 <code>Propagation.REQUIRED</code>，其他的属性信息如下</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/e12eec102bf605fe084a3eb2aa0a8855.png" alt="image.png"></p><h3 id="Transactional的其他属性有哪些？"><a href="#Transactional的其他属性有哪些？" class="headerlink" title="@Transactional的其他属性有哪些？"></a>@Transactional的其他属性有哪些？</h3><p><strong>timeout 属性</strong></p><p>timeout ：事务的超时时间，默认值为 -1。如果超过该时间限制但事务还没有完成，则自动回滚事务。</p><p><strong>readOnly 属性</strong></p><p>readOnly ：指定事务是否为只读事务，默认值为 false；为了忽略那些不需要事务的方法，比如读取数据，可以设置 read-only 为 true。<br><strong>isolation 属性</strong></p><p>isolation ：事务的隔离级别，默认值为Isolation.DEFAULT</p><p>Isolation.DEFAULT：使用底层数据库默认的隔离级别。<br>Isolation.READ_UNCOMMITTED：读未提交<br>Isolation.READ_COMMITTED：读已提交<br>Isolation.REPEATABLE_READ：可重复读<br>Isolation.SERIALIZABLE：串行化<strong>rollbackFor 属性</strong></p><p>rollbackFor ：用于指定能够触发事务回滚的异常类型，可以指定多个异常类型。</p><p><strong>noRollbackFor属性</strong></p><p>noRollbackFor：抛出指定的异常类型，不回滚事务，也可以指定多个异常类型。</p><h2 id="MyBatis中的-和-的区别是什么？如何防止SQL注入？"><a href="#MyBatis中的-和-的区别是什么？如何防止SQL注入？" class="headerlink" title="MyBatis中的#{}和${}的区别是什么？如何防止SQL注入？"></a>MyBatis中的#{}和${}的区别是什么？如何防止SQL注入？</h2><blockquote><p>在 MyBatis 中，<code>#&#123;&#125;</code> 和 <code>$&#123;&#125;</code> 是两种不同的参数占位符，它们的主要区别在于处理方式和安全性。<code>#&#123;&#125;</code> 是预编译占位符，MyBatis 会将其替换为 <code>?</code>，并通过 <code>PreparedStatement</code> 设置参数值，这种方式会对参数值进行转义，从而有效防止 SQL 注入，适合用于传递参数值，例如 <code>WHERE id = #&#123;id&#125;</code>。而 <code>$&#123;&#125;</code> 是字符串替换，MyBatis 会直接将值拼接到 SQL 语句中，这种方式不会对参数值进行转义，因此存在 SQL 注入风险，通常用于动态拼接表名、列名等场景，例如 <code>ORDER BY $&#123;columnName&#125;</code>。</p><p>为了防止 SQL 注入，推荐优先使用 <code>#&#123;&#125;</code>，因为它能够自动处理参数值的转义，确保安全性。如果必须使用 <code>$&#123;&#125;</code>，应确保拼接的值是可信的，例如动态表名或列名，而不是用户输入的直接拼接。此外，还可以通过以下方式进一步增强安全性：严格校验用户输入，确保其符合预期格式；使用 MyBatis 的动态 SQL 标签（如 <code>&lt;if&gt;</code>、<code>&lt;choose&gt;</code>）生成安全的 SQL 语句，避免手动拼接 SQL；遵循最小权限原则，限制数据库用户的权限，避免使用高权限账号执行 SQL 操作。通过这些方法，可以有效防止 SQL 注入，确保应用的安全性。</p></blockquote><h2 id="Transactional失效场景与解决办法"><a href="#Transactional失效场景与解决办法" class="headerlink" title="@Transactional失效场景与解决办法"></a>@Transactional失效场景与解决办法</h2><p><strong><a href="https://blog.csdn.net/qq_57581439/article/details/132086303?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522f2084811286d77b37215da15ae86a796%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=f2084811286d77b37215da15ae86a796&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-132086303-null-null.142%5Ev102%5Epc_search_result_base4&utm_term=@Transactional&spm=1018.2226.3001.4187">链接</a></strong></p><p>1、@Transactional 应用在非 public <strong>修饰的方法上</strong></p><p>2、@Transactional 注解属性 propagation 设置错误</p><p>3、@Transactional 注解属性 rollbackFor 设置错误</p><p>4、同一个类中方法调用，导致@Transactional失效</p><p>6、数据库引擎不支持事务</p><h2 id="同一Service内方法A（无-Transactional）调用方法B（有-Transactional）是否生效？"><a href="#同一Service内方法A（无-Transactional）调用方法B（有-Transactional）是否生效？" class="headerlink" title="同一Service内方法A（无@Transactional）调用方法B（有@Transactional）是否生效？"></a>同一Service内方法A（无@Transactional）调用方法B（有@Transactional）是否生效？</h2><p>好的，面试官！我来具体回答这个问题。</p><p>在同一 Service 内，如果方法 A（没有 <code>@Transactional</code>）调用方法 B（有 <code>@Transactional</code>），那么方法 B 的事务<strong>不会生效</strong>。原因是 Spring 的事务管理是基于代理机制实现的，当方法 A 直接调用方法 B 时，实际上是目标对象内部的方法调用，而不是通过代理对象调用，因此事务拦截器不会起作用。</p><h3 id="为什么不会生效？"><a href="#为什么不会生效？" class="headerlink" title="为什么不会生效？"></a>为什么不会生效？</h3><p>• Spring 的事务是通过 AOP 动态代理实现的，代理对象会在方法调用前后添加事务管理的逻辑。<br>• 当方法 A 调用方法 B 时，是直接调用目标对象的方法，而不是通过代理对象调用，所以事务拦截器不会生效。</p><h3 id="如何解决？"><a href="#如何解决？" class="headerlink" title="如何解决？"></a>如何解决？</h3><ol><li><strong>将方法 A 和方法 B 拆分到不同的类中</strong>：通过代理对象调用方法 B，确保事务生效。</li><li><strong>使用 <code>AopContext.currentProxy()</code> 获取当前代理对象</strong>：在方法 A 中通过代理对象调用方法 B。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((YourService) AopContext.currentProxy()).methodB();</span><br></pre></td></tr></table></figure></li><li><strong>在方法 A 上添加 <code>@Transactional</code> 注解</strong>：让整个调用链处于事务管理之下。</li></ol><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>同一 Service 内方法 A 调用方法 B 时，方法 B 的事务不会生效，因为直接调用绕过了代理机制。需要通过拆分类、使用代理对象或在方法 A 上加事务注解来解决。</p><p>以上就是我的回答，谢谢！</p><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>超文本传输协议，用于传输HTML等内容的应用层协议，规定了浏览器和服务器之间如何通信的，以及通信时的数据格式。</p><p>好的，面试官！我来回答这个问题。</p><hr><h3 id="1-HTTP-报文结构及内容类型标识？"><a href="#1-HTTP-报文结构及内容类型标识？" class="headerlink" title="1. HTTP 报文结构及内容类型标识？"></a><strong>1. HTTP 报文结构及内容类型标识？</strong></h3><p>HTTP 报文分为<strong>请求报文</strong>和<strong>响应报文</strong>，结构如下：</p><h4 id="请求报文"><a href="#请求报文" class="headerlink" title="请求报文"></a><strong>请求报文</strong></h4><ol><li><strong>请求行</strong>：包含请求方法（如 <code>GET</code>、<code>POST</code>）、请求 URL 和 HTTP 版本。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /index.html HTTP/1.1</span><br></pre></td></tr></table></figure></li><li><strong>请求头</strong>：包含客户端信息、请求内容类型等。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Host: www.example.com</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure></li><li><strong>请求体</strong>：可选，用于传递数据（如 <code>POST</code> 请求中的表单或 JSON 数据）。</li></ol><h4 id="响应报文"><a href="#响应报文" class="headerlink" title="响应报文"></a><strong>响应报文</strong></h4><ol><li><strong>状态行</strong>：包含 HTTP 版本、状态码和状态描述。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br></pre></td></tr></table></figure></li><li><strong>响应头</strong>：包含服务器信息、响应内容类型等。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 1234</span><br></pre></td></tr></table></figure></li><li><strong>响应体</strong>：可选，包含返回的数据（如 HTML 页面或 JSON 数据）。</li></ol><h4 id="内容类型标识"><a href="#内容类型标识" class="headerlink" title="内容类型标识"></a><strong>内容类型标识</strong></h4><p>• 通过 <code>Content-Type</code> 头字段标识报文体的格式，例如：<br>  • <code>text/html</code>：HTML 文档<br>  • <code>application/json</code>：JSON 数据<br>  • <code>application/x-www-form-urlencoded</code>：表单数据<br>  • <code>multipart/form-data</code>：文件上传</p><hr><h3 id="2-如何判断请求体格式？"><a href="#2-如何判断请求体格式？" class="headerlink" title="2. 如何判断请求体格式？"></a><strong>2. 如何判断请求体格式？</strong></h3><p>判断请求体格式主要通过 <code>Content-Type</code> 头字段：</p><ol><li><strong>检查 <code>Content-Type</code> 头字段</strong>：例如：<br>• <code>application/json</code>：请求体是 JSON 格式。<br>• <code>application/x-www-form-urlencoded</code>：请求体是键值对形式的表单数据。<br>• <code>multipart/form-data</code>：请求体包含文件上传。</li><li><strong>解析请求体</strong>：根据 <code>Content-Type</code> 的值，使用相应的解析方式：<br>• JSON 格式：使用 JSON 解析库（如 <code>Jackson</code>、<code>Gson</code>）解析。<br>• 表单数据：通过框架（如 Spring MVC）自动解析为 <code>Map</code> 或对象。<br>• 文件上传：通过 <code>MultipartFile</code> 处理。</li></ol><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><p>• 如果 <code>Content-Type</code> 是 <code>application/json</code>，请求体可能是：<br>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;John&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><br>• 如果 <code>Content-Type</code> 是 <code>application/x-www-form-urlencoded</code>，请求体可能是：<br>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=John&amp;age=30</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 就业 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>仿牛客论坛项目——相关功能介绍</title>
      <link href="/2025/04/11/2025_04/00%20%E9%A1%B9%E7%9B%AE/"/>
      <url>/2025/04/11/2025_04/00%20%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="项目相关功能介绍："><a href="#项目相关功能介绍：" class="headerlink" title="项目相关功能介绍："></a>项目相关功能介绍：</h1><h2 id="介绍一下项目："><a href="#介绍一下项目：" class="headerlink" title="介绍一下项目："></a>介绍一下项目：</h2><p>这个项目的整体结构来源于牛客网，主要使用了Springboot、Mybatis、MySQL、Redis、Kafka、等工具。主要实现了用户的注册、登录、发帖、点赞、系统通知、按热度排序、搜索等功能。另外引入了redis数据库来提升网站的整体性能，实现了用户凭证的存取、点赞关注的功能。基于 Kafka 实现了系统通知：当用户获得点赞、评论后得到通知。利用定时任务定期计算帖子的分数，并在页面上展现热帖排行榜。</p><h2 id="一、-发送邮件功能："><a href="#一、-发送邮件功能：" class="headerlink" title="一、 发送邮件功能："></a>一、 发送邮件功能：</h2><h3 id="01-你如何在-Spring-Boot-项目中实现发送邮件的功能？"><a href="#01-你如何在-Spring-Boot-项目中实现发送邮件的功能？" class="headerlink" title="01 你如何在 Spring Boot 项目中实现发送邮件的功能？"></a>01 <strong>你如何在 Spring Boot 项目中实现发送邮件的功能？</strong></h3><blockquote><p>“在 Spring Boot 项目中，我通过 Spring Email 技术实现了发送邮件的功能。首先，我导入了 <code>spring-boot-starter-mail</code> 依赖，然后在配置文件中设置了新浪邮箱的 SMTP 服务参数，包括主机名、端口、用户名、密码和协议，并启用了 SSL 安全连接。接着，我创建了一个 <code>MailClient</code> 工具类，封装了发送邮件的逻辑，使用 <code>JavaMailSender</code> 组件来发送邮件。对于 HTML 格式的邮件，我使用了 Thymeleaf 模板引擎，通过模板生成动态内容并发送。最后，我编写了测试类，验证了邮件发送功能是否正常工作。”</p></blockquote><h3 id="02-如何配置邮箱服务？"><a href="#02-如何配置邮箱服务？" class="headerlink" title="02 如何配置邮箱服务？"></a>02 如何配置邮箱服务？</h3><blockquote><p>选择了新浪邮箱作为邮件服务商，并在邮箱设置中开启了 SMTP 服务。在 Spring Boot 项目中，我通过配置文件设置了邮箱的 SMTP 参数，包括主机名（如 <code>smtp.sina.com</code>）、端口（如 465）、用户名、密码和协议（比如<code>spring.mail.protocol设置参数为smtps，spring.mail.properties.mail.smtp.ssl.enable=true</code>）。启用 SSL 是为了确保邮件发送的安全性，防止信息泄露。</p></blockquote><h3 id="03-你如何发送-HTML-格式的邮件？"><a href="#03-你如何发送-HTML-格式的邮件？" class="headerlink" title="03 你如何发送 HTML 格式的邮件？"></a>03 你如何发送 HTML 格式的邮件？</h3><blockquote><p>为了发送 HTML 格式的邮件，我使用了 Thymeleaf 模板引擎。首先，我创建了一个 HTML 模板文件，放置在 <code>templates/mail</code> 目录下。然后，我在代码中使用 <code>TemplateEngine</code> 处理模板，传入动态变量并生成最终的 HTML 内容。最后，我调用 <code>MailClient</code> 的 <code>send</code> 方法，将生成的 HTML 内容作为邮件正文发送。</p></blockquote><h2 id="二、注册功能"><a href="#二、注册功能" class="headerlink" title="二、注册功能"></a>二、注册功能</h2><h3 id="01-注册功能的开发流程吗？"><a href="#01-注册功能的开发流程吗？" class="headerlink" title="01 注册功能的开发流程吗？"></a>01 注册功能的开发流程吗？</h3><blockquote><ol><li><strong>访问注册页面</strong>：用户访问注册页面，前端通过简单的请求加载页面。我使用 <code>LoginController</code> 处理这个请求，返回注册页面的模板路径。</li><li><strong>提交注册数据</strong>：用户填写表单并提交，后端接收数据并进行验证。我在 <code>LoginController</code> 中定义了一个方法，处理提交的注册数据。</li><li><strong>数据验证</strong>：检查用户名、密码、邮箱是否为空，以及是否已存在。我使用了 <code>commons-lang</code> 工具包进行空值判断，并通过数据库查询验证用户名和邮箱的唯一性。</li><li><strong>生成激活信息</strong>：生成随机字符串作为激活码，并对密码进行 MD5 加密。我创建了一个 <code>Utils</code> 工具类，提供了生成随机字符串和 MD5 加密的方法。</li><li><strong>保存用户数据</strong>：将用户信息插入数据库，设置初始状态（如未激活）。我使用 MyBatis 将用户数据插入到 <code>user</code> 表中。</li><li><strong>发送激活邮件</strong>：使用 Thymeleaf 模板引擎生成 HTML 邮件，通过 Spring Email 技术发送激活链接。我创建了一个 <code>MailClient</code> 工具类，封装了邮件发送的逻辑。</li><li><strong>激活账号</strong>：用户点击激活链接后，后端验证激活码是否匹配。如果匹配，更新用户状态为已激活；如果不匹配，返回错误信息。我在 <code>LoginController</code> 中定义了一个方法，处理激活请求。</li></ol></blockquote><h3 id="02-数据验证与错误处理"><a href="#02-数据验证与错误处理" class="headerlink" title="02 数据验证与错误处理"></a>02 数据验证与错误处理</h3><blockquote><p>在注册功能中，我进行了以下数据验证和错误处理：</p><ol><li><strong>前端验证</strong>：使用 HTML5 的 <code>required</code> 属性和 JavaScript 进行初步验证，确保必填项不为空。</li><li><strong>后端验证</strong>：在业务层检查用户名、密码、邮箱是否为空，以及是否已存在。我使用了 <code>commons-lang</code> 工具包进行空值判断，并通过数据库查询验证用户名和邮箱的唯一性。</li><li><strong>错误处理</strong>：如果验证失败，返回错误信息，前端显示错误提示。例如，用户名已存在时，提示用户更换用户名。</li><li><strong>默认值保留</strong>：在错误页面中，保留用户已输入的值，提升用户体验。我通过 Thymeleaf 的 <code>th:value</code> 属性，将用户输入的值回显到表单中。</li></ol></blockquote><h3 id="03-邮件发送与激活功能如何实现的？"><a href="#03-邮件发送与激活功能如何实现的？" class="headerlink" title="03 邮件发送与激活功能如何实现的？"></a>03 邮件发送与激活功能如何实现的？</h3><blockquote><ol><li><strong>生成激活信息</strong>：在用户注册时，生成随机字符串作为激活码，并对密码进行 MD5 加密。我创建了一个 <code>Utils</code> 工具类，提供了生成随机字符串和 MD5 加密的方法。</li><li><strong>发送邮件</strong>：使用 Thymeleaf 模板引擎生成 HTML 邮件，包含激活链接。通过 Spring Email 技术发送邮件。我创建了一个 <code>MailClient</code> 工具类，封装了邮件发送的逻辑。</li><li><strong>激活账号</strong>：用户点击激活链接后，后端验证激活码是否匹配。如果匹配，更新用户状态为已激活；如果不匹配，返回错误信息。我在 <code>LoginController</code> 中定义了一个方法，处理激活请求。</li><li><strong>结果处理</strong>：根据激活结果，跳转到登录页面或首页(比如激活成功返回登录页面，要是重复激活或者激活失败返回到首页)，并显示相应的提示信息。</li></ol></blockquote><h3 id="04-如何使用模板引擎实现的代码复用？"><a href="#04-如何使用模板引擎实现的代码复用？" class="headerlink" title="04 如何使用模板引擎实现的代码复用？"></a>04 如何使用模板引擎实现的代码复用？</h3><blockquote><p>我使用 Thymeleaf 模板引擎实现页面复用：</p><ol><li><strong>代码复用</strong>：将公共部分（如页头、页脚）提取为单独的模板文件，通过 <code>th:replace</code> 属性在多个页面中复用。例如，我在 <code>header.html</code> 中定义了页头代码，并在注册页面和登录页面中复用。</li><li><strong>动态渲染</strong>：在模板中使用 Thymeleaf 的表达式和标签，动态渲染页面内容。例如，根据用户输入显示错误信息。</li><li><strong>路径管理</strong>：使用 <code>th:href</code> 和 <code>th:src</code> 标签管理静态资源的路径，确保页面代码整洁且易于维护。”</li></ol></blockquote><h2 id="三、-会话管理"><a href="#三、-会话管理" class="headerlink" title="三、 会话管理"></a>三、 会话管理</h2><h3 id="01-解释HTTP协议的无状态性，并说明为什么在Web开发中需要会话管理？"><a href="#01-解释HTTP协议的无状态性，并说明为什么在Web开发中需要会话管理？" class="headerlink" title="01 解释HTTP协议的无状态性，并说明为什么在Web开发中需要会话管理？"></a>01 解释HTTP协议的无状态性，并说明为什么在Web开发中需要会话管理？</h3><blockquote><p>HTTP协议是无状态的，这意味着同一个连接中的多次请求之间没有关联，服务器不会记住之前的请求。这种设计使得HTTP简单且可扩展，但在实际开发中，特别是需要用户登录和保持用户状态的场景下，无状态性就带来了问题。比如，用户登录后，服务器需要记住用户的身份，以便后续请求能够识别用户并提供个性化服务。为了解决这个问题，我们引入了会话管理技术，如Cookies和Session，通过它们来在多次请求之间保持用户的会话状态，从而实现业务连续性。</p></blockquote><h3 id="02-请解释Cookie和Session的区别，并说明它们各自的适用场景？"><a href="#02-请解释Cookie和Session的区别，并说明它们各自的适用场景？" class="headerlink" title="02 请解释Cookie和Session的区别，并说明它们各自的适用场景？"></a>02 请解释Cookie和Session的区别，并说明它们各自的适用场景？</h3><blockquote><p>Cookie和Session都是用于会话管理的技术，但它们的存储位置和使用场景有所不同。Cookie是存储在客户端（浏览器）的一小块数据，服务器通过响应头将Cookie发送给浏览器，浏览器在后续请求中自动携带这些数据。Cookie适合存储少量非敏感数据，比如用户的偏好设置或跟踪信息。Session则是存储在服务器端的数据，服务器通过一个唯一的Session ID来识别用户，Session ID通常通过Cookie传递给服务器。Session适合存储敏感或大量数据，比如用户的登录信息或购物车内容，因为数据存储在服务器端，安全性更高。</p></blockquote><h3 id="03-在分布式部署中，如何解决Session不共享的问题？"><a href="#03-在分布式部署中，如何解决Session不共享的问题？" class="headerlink" title="03 在分布式部署中，如何解决Session不共享的问题？"></a>03 在分布式部署中，如何解决Session不共享的问题？</h3><blockquote><p>在分布式部署中，用户的请求可能被分发到不同的服务器上，导致Session数据无法共享。为了解决这个问题，有几种常见的解决方案：</p><ol><li><strong>粘性Session</strong>：通过负载均衡器将同一个用户的请求始终分发到同一个服务器上，确保Session数据一致。</li><li><strong>同步Session</strong>：当一个服务器创建或更新Session时，将Session数据同步到其他服务器上。</li><li><strong>共享Session</strong>：使用一个独立的服务器（如Redis）来存储所有Session数据，其他服务器通过访问这个共享服务器来获取Session数据。</li><li><strong>数据库存储</strong>：将Session数据存储在数据库中，所有服务器都可以访问数据库来获取Session数据，实现数据共享。</li></ol></blockquote><h3 id="04-为什么在分布式系统中推荐使用Redis来存储Session数据？"><a href="#04-为什么在分布式系统中推荐使用Redis来存储Session数据？" class="headerlink" title="04 为什么在分布式系统中推荐使用Redis来存储Session数据？"></a>04 为什么在分布式系统中推荐使用Redis来存储Session数据？</h3><blockquote><p>在分布式系统中，Redis被广泛用于存储Session数据，主要因为它具有以下优点：</p><ol><li><strong>高性能</strong>：Redis是一个内存数据库，读写速度非常快，能够满足高并发的需求。</li><li><strong>数据共享</strong>：Redis可以作为所有服务器的共享存储，确保Session数据在不同服务器之间保持一致。</li><li><strong>持久化</strong>：Redis支持数据持久化，即使服务器重启，Session数据也不会丢失。</li><li><strong>灵活性</strong>：Redis支持多种数据结构，可以根据需求灵活存储和管理Session数据。</li></ol></blockquote><h3 id="05-在Java中，如何创建一个Session并存储用户数据？"><a href="#05-在Java中，如何创建一个Session并存储用户数据？" class="headerlink" title="05 在Java中，如何创建一个Session并存储用户数据？"></a>05 在Java中，如何创建一个Session并存储用户数据？</h3><blockquote><p>在Java中，创建Session并存储用户数据非常简单。首先，通过<code>HttpServletRequest</code>对象获取Session对象，如果Session不存在，服务器会自动创建一个新的Session。然后，可以通过<code>session.setAttribute(&quot;key&quot;, value)</code>方法将数据存储在Session中。l例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession(); <span class="comment">// 获取或创建Session</span></span><br><span class="line">session.setAttribute(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;JohnDoe&quot;</span>); <span class="comment">// 存储用户数据</span></span><br></pre></td></tr></table></figure><p>在后续的请求中，可以通过<code>session.getAttribute(&quot;key&quot;)</code>方法来读取存储的数据。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) session.getAttribute(<span class="string">&quot;username&quot;</span>); <span class="comment">// 读取用户数据</span></span><br></pre></td></tr></table></figure><p>这种方式使得在多次请求之间保持用户状态变得非常简单和高效。</p></blockquote><h2 id="四、验证码生成"><a href="#四、验证码生成" class="headerlink" title="四、验证码生成"></a>四、验证码生成</h2><h3 id="01-验证码功能实现介绍"><a href="#01-验证码功能实现介绍" class="headerlink" title="01 验证码功能实现介绍"></a>01 验证码功能实现介绍</h3><p>验证码生成是为了在登录页面中实现随机验证码功能，防止机器人暴力破解或恶意登录。通过要求用户输入验证码，可以有效区分人类用户和自动化程序，提升系统的安全性。课程推荐使用现成的工具<code>capture</code>，它能够快速生成验证码图片，并且配置灵活，适合在Web开发中使用。</p><hr><h3 id="02-capture工具介绍"><a href="#02-capture工具介绍" class="headerlink" title="02 capture工具介绍"></a>02 capture工具介绍</h3><p><code>capture</code>是一个用于在服务端内存中生成验证码的工具。它能够生成包含随机字符的图片，并且支持配置图片的宽度、高度、字符数量、字符范围、字体颜色、干扰线等参数，满足不同的需求。</p><h3 id="03-capture工具的使用步骤"><a href="#03-capture工具的使用步骤" class="headerlink" title="03 capture工具的使用步骤"></a>03 capture工具的使用步骤</h3><ol><li><p><strong>导入capture包</strong>：通过Maven依赖将<code>capture</code>工具导入到项目中，确保相关依赖下载完成。</p></li><li><p><strong>编写配置类</strong>：在Spring框架下，编写一个配置类，通过<code>@Configuration</code>注解标记为配置类，并通过<code>@Bean</code>注解将<code>capture</code>的核心对象<code>Producer</code>接口实例化并注入到Spring容器中。</p></li><li><p><strong>生成验证码</strong>：通过<code>Producer</code>接口的<code>createText</code>方法生成随机字符，并通过<code>createImage</code>方法根据字符生成验证码图片。</p><blockquote><p><code>Producer</code>接口有两个核心方法：</p><ul><li><code>createText</code>：生成随机的验证码字符。</li><li><code>createImage</code>：根据生成的字符创建验证码图片，图片可以配置尺寸、颜色、干扰线等参数。</li></ul></blockquote></li><li><p>生成的验证码字符需要存储在服务端的<code>Session</code>中，以便在用户提交表单时进行比对验证。<code>Session</code>是一种跨请求的存储机制，适合存储敏感信息，如验证码、用户登录状态等。</p></li><li><p>在登录页面中，验证码图片的访问路径指向一个动态生成验证码的接口（如<code>/capture</code>）。通过JavaScript实现验证码的刷新功能，用户点击刷新按钮时，调用<code>refreshCaptcha</code>方法重新加载验证码图片。</p></li><li><p>在Spring框架中，可以通过配置类将<code>capture</code>工具的核心对象<code>Producer</code>注入到Spring容器中。然后在Controller中编写接口，通过<code>Producer</code>生成验证码图片，并通过<code>HttpServletResponse</code>对象将图片输出到浏览器。</p></li></ol><h3 id="04-请解释验证码的作用以及为什么在登录页面中使用验证码？"><a href="#04-请解释验证码的作用以及为什么在登录页面中使用验证码？" class="headerlink" title="04 请解释验证码的作用以及为什么在登录页面中使用验证码？"></a>04 请解释验证码的作用以及为什么在登录页面中使用验证码？</h3><p><strong>答案：</strong><br>验证码的作用是区分人类用户和自动化程序，防止机器人暴力破解或恶意登录。在登录页面中使用验证码，可以增加攻击者的难度，确保只有真实用户才能完成登录操作，从而提升系统的安全性。</p><h3 id="05-请描述如何使用capture工具生成验证码，并说明其核心步骤。"><a href="#05-请描述如何使用capture工具生成验证码，并说明其核心步骤。" class="headerlink" title="05 请描述如何使用capture工具生成验证码，并说明其核心步骤。"></a>05 请描述如何使用<code>capture</code>工具生成验证码，并说明其核心步骤。</h3><p><strong>答案：</strong><br>使用<code>capture</code>工具生成验证码的核心步骤如下：</p><ol><li><strong>导入capture包</strong>：通过Maven依赖将<code>capture</code>工具导入到项目中。</li><li><strong>编写配置类</strong>：在Spring框架下，通过<code>@Configuration</code>和<code>@Bean</code>注解将<code>capture</code>的<code>Producer</code>接口实例化并注入到Spring容器中。</li><li><strong>生成验证码</strong>：通过<code>Producer</code>接口的<code>createText</code>方法生成随机字符，并通过<code>createImage</code>方法生成验证码图片，最后将图片输出到浏览器。</li></ol><hr><h3 id="06-在生成验证码时，如何确保验证码的字符能够被后续请求验证？"><a href="#06-在生成验证码时，如何确保验证码的字符能够被后续请求验证？" class="headerlink" title="06 在生成验证码时，如何确保验证码的字符能够被后续请求验证？"></a>06 在生成验证码时，如何确保验证码的字符能够被后续请求验证？</h3><p><strong>答案：</strong><br>生成的验证码字符需要存储在服务端的<code>Session</code>中。当用户提交表单时，服务器可以从<code>Session</code>中获取之前生成的验证码字符，与用户输入的验证码进行比对，从而完成验证。</p><hr><h3 id="07-在分布式系统中，如何确保验证码的字符能够在不同服务器之间共享？"><a href="#07-在分布式系统中，如何确保验证码的字符能够在不同服务器之间共享？" class="headerlink" title="07 在分布式系统中，如何确保验证码的字符能够在不同服务器之间共享？"></a>07 在分布式系统中，如何确保验证码的字符能够在不同服务器之间共享？</h3><p><strong>答案：</strong><br>在分布式系统中，可以通过将验证码字符存储在共享的数据库（如Redis）中，确保所有服务器都能访问到相同的验证码数据。这种方式解决了<code>Session</code>不共享的问题，同时保证了验证码的一致性。</p><hr><h3 id="08-如何实现验证码的动态刷新功能？"><a href="#08-如何实现验证码的动态刷新功能？" class="headerlink" title="08 如何实现验证码的动态刷新功能？"></a>08 如何实现验证码的动态刷新功能？</h3><p><strong>答案：</strong><br>通过JavaScript实现验证码的动态刷新功能。在登录页面中，为验证码图片设置一个动态的访问路径（如<code>/capture</code>），并通过JavaScript的<code>refreshCaptcha</code>方法重新加载验证码图片。每次点击刷新按钮时，调用该方法生成新的验证码并更新页面。</p><h2 id="五、登录，退出功能实现"><a href="#五、登录，退出功能实现" class="headerlink" title="五、登录，退出功能实现"></a>五、登录，退出功能实现</h2><h3 id="01-请描述登录功能的实现流程？"><a href="#01-请描述登录功能的实现流程？" class="headerlink" title="01 请描述登录功能的实现流程？"></a>01 请描述登录功能的实现流程？</h3><p><strong>答</strong>：<br>登录功能分为两个阶段：首次请求时返回登录页面，用户填写表单后提交二次请求。服务端首先校验验证码，从Session中取出生成的验证码与用户输入比对。验证码通过后，再检查用户是否存在、账号是否激活，最后对密码进行MD5加盐哈希，与数据库中存储的哈希值匹配。若全部通过，生成一个唯一UUID作为<code>tijcket</code>，记录到<code>login_ticket</code>表中，状态设为有效（<code>status=0</code>），并设置过期时间（例如12小时）。同时，将<code>ticket</code>通过Cookie下发到客户端，路径设置为根目录，后续请求自动携带该Cookie以维持登录状态。</p><hr><h3 id="02-为什么选择数据库存储登录凭证而不是Session？"><a href="#02-为什么选择数据库存储登录凭证而不是Session？" class="headerlink" title="02 为什么选择数据库存储登录凭证而不是Session？"></a>02 为什么选择数据库存储登录凭证而不是Session？</h3><p><strong>答</strong>：<br>Session在分布式场景中需要额外处理多节点同步问题（如Redis共享Session），而数据库存储<code>ticket</code>天然支持中心化查询，任何服务节点都可直接验证登录状态。此外，数据库允许精确控制凭证有效期（如“记住我”功能需长期凭证），而Session默认过期时间较为固定。从扩展性来看，未来若需改用Redis等高性能存储，只需调整数据访问层，业务逻辑无需改动。</p><hr><h3 id="03-数据库表login-ticket的设计思路是什么？"><a href="#03-数据库表login-ticket的设计思路是什么？" class="headerlink" title="03 数据库表login_ticket的设计思路是什么？"></a><strong>03 数据库表<code>login_ticket</code>的设计思路是什么？</strong></h3><p><strong>答</strong>：<br>该表包含五个核心字段：</p><ul><li><code>id</code>：自增主键，唯一标识每条凭证记录。</li><li><code>user_id</code>：外键关联用户表，指向所属用户。</li><li><code>ticket</code>：唯一字符串（UUID），用于客户端Cookie和服务端验证。</li><li><code>status</code>：标识凭证状态（0有效，1失效），避免物理删除，便于审计和排查问题。</li><li><code>expired</code>：TIMESTAMP类型，记录凭证过期时间，由服务端根据业务需求动态计算（如默认12小时或“记住我”的100天）。</li></ul><p>通过<code>status</code>和<code>expired</code>字段组合，可高效筛选有效凭证，避免全表扫描。</p><hr><h3 id="04-验证码的作用是什么？如何防止验证码被绕过？"><a href="#04-验证码的作用是什么？如何防止验证码被绕过？" class="headerlink" title="04 验证码的作用是什么？如何防止验证码被绕过？"></a>04 验证码的作用是什么？如何防止验证码被绕过？</h3><p><strong>答</strong>：<br>验证码主要用于防御暴力破解和机器自动登录。实现时，服务端生成验证码图片并将文本存入Session，用户提交登录请求后，立即从Session中移除验证码文本，确保单次有效性。此外，服务端会对登录接口进行限流，例如同一IP在1分钟内失败超过5次，则锁定该账号15分钟，并通过Redis记录失败次数，防止恶意尝试。</p><hr><h3 id="05-退出功能如何确保用户完全登出？"><a href="#05-退出功能如何确保用户完全登出？" class="headerlink" title="05 退出功能如何确保用户完全登出？"></a>05 退出功能如何确保用户完全登出？</h3><p><strong>答</strong>：<br>用户点击退出时，服务端执行两步操作：</p><ol><li><strong>失效凭证</strong>：根据Cookie中的<code>ticket</code>更新<code>login_ticket</code>表，将<code>status</code>设为1（失效）。</li><li><strong>清除Cookie</strong>：返回响应时设置同名Cookie，<code>Max-Age=0</code>，覆盖浏览器原有Cookie，触发客户端立即删除。<br>双管齐下确保服务端不再认可该凭证，且客户端无法再次携带它发起请求</li></ol><hr><h3 id="06-如果用户同时在多设备登录，系统如何处理？"><a href="#06-如果用户同时在多设备登录，系统如何处理？" class="headerlink" title="06. 如果用户同时在多设备登录，系统如何处理？"></a>06. 如果用户同时在多设备登录，系统如何处理？</h3><p><strong>答</strong>：<br>设计上允许同一用户生成多个有效<code>ticket</code>，每条记录对应不同设备。退出时仅失效当前设备的<code>ticket</code>，其他设备仍保持登录状态。若需强制所有设备下线，可在用户修改密码时批量将其所有<code>ticket</code>标记为失效。</p><hr><h3 id="07-MyBatis中注解和XML配置如何选择？"><a href="#07-MyBatis中注解和XML配置如何选择？" class="headerlink" title="07. MyBatis中注解和XML配置如何选择？"></a>07. MyBatis中注解和XML配置如何选择？</h3><p><strong>答</strong>：<br>注解适合简单SQL（如<code>@Select(&quot;SELECT * FROM user WHERE id=#&#123;id&#125;&quot;)</code>），开发效率高；XML则便于管理复杂SQL（如动态条件拼接、关联查询）。项目中<code>login_ticket</code>的增删改查使用注解实现，而用户分页查询等复杂逻辑通过XML配置，保持代码整洁性和可维护性。</p><h2 id="六、登录退出功能的实现"><a href="#六、登录退出功能的实现" class="headerlink" title="六、登录退出功能的实现"></a>六、登录退出功能的实现</h2><blockquote><p>Spring框架中如何通过拦截器（Interceptor）统一管理用户登录状态，并实现页面动态显示登录信息的功能。</p><p>每个页面的头部需要根据用户是否登录来展示不同内容（比如已登录显示头像，未登录显示注册入口）。为了避免在每个Controller重复编写登录校验代码，引入了拦截器。拦截器会在请求到达Controller前统一处理登录凭证（如从Cookie中提取ticket），验证用户身份，并将用户信息暂存到线程安全的存储中（如ThreadLocal），供后续流程使用，但是由于Web应用需要同时处理多个请求，每个请求对应独立线程。视频中通过<code>ThreadLocal</code>实现用户数据的线程隔离，确保不同请求间的用户信息互不干扰。例如，用户A的登录数据不会与用户B的数据冲突，即使两者同时发起请求。在请求处理完成后（Controller执行后），拦截器的<code>postHandle</code>方法会将用户信息添加到模型（Model）中，前端模板（如Thymeleaf）通过判断Model中的数据动态渲染页面。例如，如果用户已登录，模板会显示用户头像和昵称；未登录则展示登录按钮。</p></blockquote><p>应用了Spring Email和SpringMvc中的Interceptor（拦截器），其中拦截器能拦截所有请求，能解决通用的问题，涉及的面比较广、影响的请求比较多要重点关注。权限模块主要开发了注册、登录、退出、状态（在每个页面上怎么去显示登录用户的头像、用户名等）、设置（用户头像、修改密码等）、授权（不同类型的用户访问不同的功能，使用Security实现的）、会话管理（重点需要了解Cookie、session、项目中为什么不用session(主要是考虑分布式部署Session的问题)、不用session是如何解决的问题（把数据存在Redis中，使用了ThreadLocal））等功能。</p><h3 id="01-请说明如何利用拦截器实现登录信息的统一处理？"><a href="#01-请说明如何利用拦截器实现登录信息的统一处理？" class="headerlink" title="01 请说明如何利用拦截器实现登录信息的统一处理？"></a>01 请说明如何利用拦截器实现登录信息的统一处理？</h3><p><strong>答</strong>：<br>在项目中，我通过Spring拦截器统一处理登录状态，避免在每个Controller重复校验用户。具体来说，拦截器会在每个请求开始时，从Cookie中提取登录凭证（ticket），然后查询数据库验证凭证是否有效。如果有效，就将用户信息存储到当前线程的独立变量中（比如用ThreadLocal），这样后续业务逻辑可以直接获取用户数据。最后在请求结束时清理这些数据，确保线程安全。整个过程对业务代码无侵入，且集中管理登录状态，减少了代码冗余。</p><hr><h3 id="02-为什么选择ThreadLocal存储用户数据？如何避免内存泄漏？"><a href="#02-为什么选择ThreadLocal存储用户数据？如何避免内存泄漏？" class="headerlink" title="02 为什么选择ThreadLocal存储用户数据？如何避免内存泄漏？"></a>02 为什么选择ThreadLocal存储用户数据？如何避免内存泄漏？</h3><p><strong>答</strong>：<br>因为每个请求对应一个独立线程，ThreadLocal可以为每个线程创建用户数据的副本，不同线程之间互不干扰，天然支持高并发场景。例如，用户A和用户B同时登录，他们的数据会分别存在各自的线程中，不会互相覆盖。<br>为了避免内存泄漏，我们会在请求处理完成后主动清理ThreadLocal中的数据。通常是在拦截器的最终阶段（如afterCompletion方法）调用remove()方法，确保线程池复用时不会残留旧数据。</p><hr><h3 id="03-拦截器的三个核心方法分别是什么？它们的执行顺序是怎样的？"><a href="#03-拦截器的三个核心方法分别是什么？它们的执行顺序是怎样的？" class="headerlink" title="03 拦截器的三个核心方法分别是什么？它们的执行顺序是怎样的？"></a>03 拦截器的三个核心方法分别是什么？它们的执行顺序是怎样的？</h3><p><strong>答</strong>：<br>拦截器的三个方法是：</p><ol><li><strong>preHandle</strong>：在Controller处理请求前执行，比如这里我们用它校验用户登录状态。</li><li><strong>postHandle</strong>：在Controller处理完请求后、返回视图前执行，此时我们可以将用户数据添加到模型（Model）中，供前端页面展示。</li><li><strong>afterCompletion</strong>：在整个请求完成（包括视图渲染）后执行，用于资源清理，比如移除ThreadLocal中的数据。<br>它们的执行顺序是：preHandle → Controller → postHandle → 视图渲染 → afterCompletion。</li></ol><hr><h3 id="04-如果拦截器误拦截了静态资源（如CSS、JS文件），如何解决？"><a href="#04-如果拦截器误拦截了静态资源（如CSS、JS文件），如何解决？" class="headerlink" title="04 如果拦截器误拦截了静态资源（如CSS、JS文件），如何解决？"></a>04 如果拦截器误拦截了静态资源（如CSS、JS文件），如何解决？</h3><p><strong>答</strong>：<br>在配置拦截器时，可以通过排除路径（excludePathPatterns）指定不拦截的静态资源。例如，将<code>/*.css</code>、<code>/*.js</code>添加到排除列表中，这样拦截器会跳过对这些路径的处理。这样做既能保证业务请求被拦截处理，又避免影响静态资源的正常加载。</p><hr><h3 id="05-用户未登录和已登录时，页面头部如何动态显示不同内容？"><a href="#05-用户未登录和已登录时，页面头部如何动态显示不同内容？" class="headerlink" title="05 用户未登录和已登录时，页面头部如何动态显示不同内容？"></a><strong>05 用户未登录和已登录时，页面头部如何动态显示不同内容？</strong></h3><p><strong>答</strong>：<br>在拦截器中，我们会将用户信息存入Model，前端页面（如Thymeleaf或Freemarker）根据Model中是否有用户数据做条件判断。如果用户已登录，页面渲染时显示头像、用户名等；如果未登录，则展示登录和注册链接。这种逻辑完全由模板引擎处理，后端只需提供数据，实现了前后端解耦。</p><hr><h3 id="06-如何确保用户凭证（ticket）的安全性？"><a href="#06-如何确保用户凭证（ticket）的安全性？" class="headerlink" title="06 如何确保用户凭证（ticket）的安全性？"></a>06 如何确保用户凭证（ticket）的安全性？</h3><p><strong>答</strong>：<br>首先，凭证（ticket）本身是随机生成的唯一字符串，难以伪造。其次，我们通过Cookie下发凭证时会设置HttpOnly属性，防止JavaScript恶意窃取。同时，服务端每次收到请求都会校验ticket的有效性，包括检查状态是否失效、是否过期。即使凭证被截获，攻击者也无法在过期后使用，且服务端可以主动使token失效（如用户主动退出时）。</p><h2 id="七、头像上传功能如何实现的"><a href="#七、头像上传功能如何实现的" class="headerlink" title="七、头像上传功能如何实现的"></a>七、头像上传功能如何实现的</h2><p><strong>面试官</strong>：能说一下如何实现头像上传功能吗？</p><p><strong>我</strong>：好的，头像上传功能主要分为前端和后端两部分实现。</p><p>首先，<strong>前端</strong>会设计一个表单，设置 <code>enctype=&quot;multipart/form-data&quot;</code>，确保可以上传文件。用户通过 <code>&lt;input type=&quot;file&quot;&gt;</code> 选择图片后，可以用 <code>FileReader</code> 实现图片预览，提升用户体验。然后通过 <code>AJAX</code> 或 <code>Fetch API</code> 将文件异步上传到服务器，避免页面刷新。</p><p><strong>后端</strong>部分，我会用 <code>MultipartFile</code>（如果是 Spring Boot）接收上传的文件。文件存储有两种方式：一是保存到服务器的指定目录，生成唯一的文件名（比如 UUID + 时间戳）避免冲突；二是上传到云存储（如 AWS S3 或阿里云 OSS），提高文件的可靠性和访问效率。文件存储成功后，我会把路径保存到用户表的 <code>avatar</code> 字段中，方便后续展示。</p><p>在前端展示时，通过 <code>&lt;img&gt;</code> 标签加载用户头像，<code>src</code> 属性指向后端返回的路径或 URL。如果用户没上传头像，就显示默认头像。</p><p>此外，我会做一些优化，比如限制文件大小和格式，防止恶意文件上传；如果项目需要，还可以加入图片裁剪功能，确保头像显示比例一致。</p><p>总的来说，通过前后端配合，头像上传功能可以高效实现，同时兼顾用户体验和安全性。</p><h2 id="八、登录状态检查"><a href="#八、登录状态检查" class="headerlink" title="八、登录状态检查"></a>八、登录状态检查</h2><p>在面试中，你可以这样回答关于如何实现检查登录状态的问题：</p><hr><h3 id="01-你能解释一下如何实现检查登录状态的功能吗？"><a href="#01-你能解释一下如何实现检查登录状态的功能吗？" class="headerlink" title="01 你能解释一下如何实现检查登录状态的功能吗？"></a>01 你能解释一下如何实现检查登录状态的功能吗？</h3><p><strong>你</strong>：当然可以。实现检查登录状态的功能主要是为了确保用户在访问某些敏感或需要权限的功能时，必须处于登录状态。我们通过以下几个步骤来实现这一功能：</p><ol><li><p><strong>自定义注解</strong>：<br>• 首先，我们定义了一个自定义注解 <code>@LoginRequired</code>，用于标记那些需要登录才能访问的方法。这个注解通过 <code>@Target(ElementType.METHOD)</code> 指定它只能用在方法上，并通过 <code>@Retention(RetentionPolicy.RUNTIME)</code> 确保它在运行时有效。</p></li><li><p><strong>拦截器</strong>：<br>• 我们实现了一个拦截器 <code>LoginRequiredInterceptor</code>，它实现了 <code>HandlerInterceptor</code> 接口。在 <code>preHandle</code> 方法中，我们检查当前请求的目标方法是否带有 <code>@LoginRequired</code> 注解。<br>• 如果方法带有该注解，我们进一步检查用户是否已经登录。我们通过 <code>Holder</code> 类（通常是一个单例或上下文对象）来获取当前用户信息。如果用户未登录（即 <code>Holder.getUser() == null</code>），我们拒绝该请求，并通过 <code>response.sendRedirect</code> 将用户重定向到登录页面。</p></li><li><p><strong>注解应用</strong>：<br>• 在需要登录才能访问的方法上，我们添加 <code>@LoginRequired</code> 注解。例如，用户设置和上传头像的方法都需要登录才能访问，因此我们在这些方法上添加了该注解。</p></li><li><p><strong>拦截器配置</strong>：<br>• 最后，我们将拦截器配置到 Spring MVC 的拦截器链中，确保它能够拦截所有请求，并根据注解进行相应的处理。</p></li></ol><p>通过这种方式，我们确保了只有登录的用户才能访问特定的功能，从而提高了系统的安全性。</p><h3 id="02-你能详细解释一下拦截器是如何工作的吗？"><a href="#02-你能详细解释一下拦截器是如何工作的吗？" class="headerlink" title="02 你能详细解释一下拦截器是如何工作的吗？"></a>02 你能详细解释一下拦截器是如何工作的吗？</h3><p><strong>你</strong>：当然可以。拦截器是 Spring MVC 提供的一种机制，允许我们在请求处理的不同阶段插入自定义逻辑。具体来说，<code>LoginRequiredInterceptor</code> 的工作流程如下：</p><ol><li><p><strong>preHandle</strong>：<br>• 在请求到达控制器之前，<code>preHandle</code> 方法会被调用。我们在这个方法中检查请求的目标方法是否带有 <code>@LoginRequired</code> 注解。<br>• 如果方法带有该注解，我们进一步检查用户是否已经登录。如果用户未登录，我们返回 <code>false</code>，并重定向用户到登录页面，阻止请求继续处理。</p></li><li><p><strong>postHandle</strong>：<br>• 在控制器处理完请求之后，视图渲染之前，<code>postHandle</code> 方法会被调用。我们在这个方法中可以进行一些后处理操作，但在这个场景中我们不需要使用它。</p></li><li><p><strong>afterCompletion</strong>：<br>• 在请求处理完成之后，无论成功与否，<code>afterCompletion</code> 方法都会被调用。我们在这个方法中可以进行一些清理操作，但在这个场景中我们也不需要使用它。</p></li></ol><p>通过这种方式，拦截器能够在请求处理的不同阶段插入自定义逻辑，确保只有登录的用户才能访问特定的功能。</p><h3 id="03-你提到使用自定义注解，你能解释一下如何定义和使用它吗？"><a href="#03-你提到使用自定义注解，你能解释一下如何定义和使用它吗？" class="headerlink" title="03 你提到使用自定义注解，你能解释一下如何定义和使用它吗？"></a>03 你提到使用自定义注解，你能解释一下如何定义和使用它吗？</h3><p><strong>你</strong>：当然可以。自定义注解 <code>@LoginRequired</code> 的定义和使用如下：</p><ol><li><p><strong>定义注解</strong>：<br>• 我们使用 <code>@Target(ElementType.METHOD)</code> 指定该注解只能用在方法上。<br>• 使用 <code>@Retention(RetentionPolicy.RUNTIME)</code> 确保该注解在运行时有效，这样我们才能在运行时通过反射读取它。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> LoginRequired &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>使用注解</strong>：<br>• 在需要登录才能访问的方法上，我们添加 <code>@LoginRequired</code> 注解。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@LoginRequired</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">userSetting</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 用户设置逻辑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>读取注解</strong>：<br>• 在拦截器中，我们通过反射读取方法上的 <code>@LoginRequired</code> 注解。如果方法带有该注解，我们进一步检查用户是否已经登录。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">LoginRequired</span> <span class="variable">loginRequired</span> <span class="operator">=</span> method.getAnnotation(LoginRequired.class);</span><br><span class="line"><span class="keyword">if</span> (loginRequired != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="comment">// 检查用户是否登录</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>通过这种方式，我们能够灵活地标记哪些方法需要登录才能访问，并在拦截器中统一处理这些方法的访问控制。</p><h2 id="九、敏感词过滤"><a href="#九、敏感词过滤" class="headerlink" title="九、敏感词过滤"></a>九、敏感词过滤</h2><h3 id="01-如何实现的敏感词过滤功能"><a href="#01-如何实现的敏感词过滤功能" class="headerlink" title="01 如何实现的敏感词过滤功能"></a>01 如何实现的敏感词过滤功能</h3><p><strong>回答</strong>：<br>在实现敏感词过滤功能时，我使用了<strong>前缀树（Trie树）​</strong>数据结构来高效地存储和检索敏感词。具体步骤如下：</p><ol><li><strong>定义前缀树</strong>：我定义了一个前缀树结构，每个节点包含一个字符和一个标记，用于表示该节点是否是一个敏感词的结尾。</li><li><strong>初始化前缀树</strong>：我从配置文件中读取敏感词列表，并将这些敏感词逐个插入到前缀树中。每个敏感词的字符会被逐层插入到树中，形成树的分支。</li><li><strong>敏感词过滤算法</strong>：我使用了三个指针来遍历用户输入的字符串。指针一指向前缀树的当前节点，指针二指向字符串的起始位置，指针三指向字符串的当前位置。通过遍历字符串，逐个字符在前缀树中查找匹配。如果找到匹配的字符，则继续向下查找；如果未找到匹配，则跳过该字符。当检测到一个完整的敏感词时，将其替换为预定义的符号（如“***”），并继续遍历剩余的字符串。</li><li><strong>处理特殊符号</strong>：为了防止用户在敏感词中插入特殊符号（如“开*票”）来绕过过滤，算法会跳过这些特殊符号，继续检测后续字符。</li></ol><p>通过这种方式，我实现了一个高效且可靠的敏感词过滤功能，能够有效地检测并替换用户输入中的敏感词汇。</p><h3 id="02-视频功能实现的功能"><a href="#02-视频功能实现的功能" class="headerlink" title="02 视频功能实现的功能"></a>02 视频功能实现的功能</h3><p>在视频中，主要讲解的是如何实现一个<strong>敏感词过滤</strong>的功能。这个功能的核心目的是在用户输入的内容中检测并替换掉敏感词汇，以确保内容的合法性和安全性。具体实现步骤如下：</p><ol><li><strong>定义前缀树（Trie树）数据结构</strong>：<ul><li>前缀树是一种树形数据结构，用于高效地存储和检索字符串。每个节点代表一个字符，从根节点到某个节点的路径表示一个字符串。</li><li>在前缀树中，根节点不包含任何字符，其他每个节点包含一个字符。通过从根节点到某个节点的路径，可以拼接出一个完整的字符串。</li></ul></li><li><strong>初始化前缀树</strong>：<ul><li>从配置文件中读取敏感词列表，并将这些敏感词逐个插入到前缀树中。每个敏感词的字符会被逐层插入到树中，形成树的分支。</li><li>在插入过程中，如果某个字符已经存在于树中，则直接复用该节点，避免重复创建。</li></ul></li><li><strong>敏感词过滤算法</strong>：<ul><li>使用三个指针来遍历用户输入的字符串：<ul><li><strong>指针一</strong>：指向前缀树的当前节点，用于在树中查找匹配的字符。</li><li><strong>指针二</strong>：指向字符串的起始位置，用于标记疑似敏感词的开始。</li><li><strong>指针三</strong>：指向字符串的当前位置，用于遍历字符串。</li></ul></li><li>算法通过遍历字符串，逐个字符在前缀树中查找匹配。如果找到匹配的字符，则继续向下查找；如果未找到匹配，则跳过该字符。</li><li>当检测到一个完整的敏感词时，将其替换为预定义的符号（如“***”），并继续遍历剩余的字符串。</li></ul></li><li><strong>处理特殊符号</strong>：<ul><li>为了防止用户在敏感词中插入特殊符号（如“开*票”）来绕过过滤，算法会跳过这些特殊符号，继续检测后续字符。</li></ul></li></ol><h2 id="十、-发布帖子"><a href="#十、-发布帖子" class="headerlink" title="十、 发布帖子"></a>十、 发布帖子</h2><h3 id="01-如何实现的发布帖子？"><a href="#01-如何实现的发布帖子？" class="headerlink" title="01 如何实现的发布帖子？"></a>01 如何实现的发布帖子？</h3><h3 id="面试回答话术"><a href="#面试回答话术" class="headerlink" title="面试回答话术"></a><strong>面试回答话术</strong></h3><p>发布帖子是简单的增删改，调用底层mapper来添加帖子，只需要判断当前用户是否登录，index页面也会做判断，当前没有用户登录时，不会显示发布新帖按钮</p><p>“在实现发布帖子功能时，我主要分为前端页面设计、异步请求发送、后端数据处理和数据库操作四个部分来实现。下面我详细说明一下：</p><ol><li><strong>前端页面设计</strong>：<ul><li>我在首页设计了一个‘我要发布’按钮，点击后会弹出一个模态框。模态框中包含两个输入框，分别用于输入帖子标题和内容。底部有一个‘发布’按钮，点击后触发异步请求。</li></ul></li><li><strong>异步请求发送</strong>：<ul><li>使用 jQuery 的 <code>$.post()</code> 方法发送异步请求。请求的 URL 是 <code>/community/discuss/add</code>，请求参数是用户输入的标题和内容，格式为 JSON 对象。在回调函数中，我处理服务器返回的 JSON 数据，并根据返回的 <code>code</code> 值动态提示用户发布结果。</li></ul></li><li><strong>后端数据处理</strong>：<ul><li>后端使用 Spring Boot 框架处理请求。在 <code>DiscussPostController</code> 中，我定义了一个 <code>addDiscussPost</code> 方法，使用 <code>@PostMapping</code> 注解标记为 POST 请求，并通过 <code>@ResponseBody</code> 返回 JSON 格式数据。</li><li>首先，我验证用户是否登录。如果未登录，返回 403 状态码和提示信息。如果已登录，构造 <code>DiscussPost</code> 对象，设置标题、内容、用户 ID 和创建时间等字段，然后调用 <code>DiscussPostService</code> 的 <code>addDiscussPost</code> 方法保存帖子。</li><li>在 <code>DiscussPostService</code> 中，我对标题和内容进行了敏感词过滤（使用 <code>SensitiveFilter</code>）和 HTML 标签转义（使用 <code>HtmlUtils.escape</code>），确保数据的安全性和合规性。</li></ul></li><li><strong>数据库操作</strong>：<ul><li>在 <code>DiscussPostMapper</code> 中，我定义了 <code>insertDiscussPost</code> 方法，使用 MyBatis 的 <code>@Insert</code> 注解编写 SQL 语句，将帖子数据插入 <code>discuss_post</code> 表。</li></ul></li><li><strong>前端处理返回结果</strong>：<ul><li>在异步请求的回调函数中，我解析服务器返回的 JSON 数据。如果 <code>code</code> 为 0，提示用户发布成功并刷新页面；如果 <code>code</code> 为 403，提示用户未登录；其他情况则提示发布失败的具体原因。</li></ul></li></ol><h2 id="十一、帖子详情、显示评论"><a href="#十一、帖子详情、显示评论" class="headerlink" title="十一、帖子详情、显示评论"></a>十一、帖子详情、显示评论</h2><h3 id="01-请描述一下你实现的“帖子详情”功能。"><a href="#01-请描述一下你实现的“帖子详情”功能。" class="headerlink" title="01 请描述一下你实现的“帖子详情”功能。"></a><strong>01 请描述一下你实现的“帖子详情”功能。</strong></h3><p><strong>我的回答：</strong></p><p>“帖子详情”功能是用户在浏览帖子列表时，点击某个帖子的标题后，能够跳转到一个展示该帖子详细信息的页面。这个页面上会完整展示帖子的标题、作者、发布时间、正文等内容。</p><p>在实现这个功能时，我按照以下步骤进行开发：</p><ol><li><strong>数据访问层</strong>：<ul><li>在<code>Mapper</code>接口中增加了一个根据帖子ID查询帖子详情的方法<code>selectDiscussPostById</code>，并在对应的<code>XML</code>配置文件中编写了SQL查询语句，通过<code>WHERE id = #&#123;id&#125;</code>条件来获取指定帖子的详细信息。</li></ul></li><li><strong>业务逻辑层</strong>：<ul><li>在<code>Service</code>层中，我增加了一个<code>findDiscussPostById</code>方法，直接调用<code>Mapper</code>层的方法来获取帖子数据。由于这里没有复杂的业务逻辑，所以实现起来比较简单。</li></ul></li><li><strong>表现层</strong>：<ul><li>在<code>Controller</code>层中，我增加了一个处理帖子详情请求的方法<code>getDiscussPost</code>，通过<code>@RequestMapping</code>注解定义了访问路径，并使用<code>@PathVariable</code>注解获取帖子ID。然后调用<code>Service</code>层的方法查询帖子数据，并将结果通过<code>Model</code>对象传递给前端页面。</li><li>为了在页面上展示作者信息，我还通过<code>UserService</code>查询了帖子的作者信息，并将作者数据一并传递给前端。</li></ul></li><li><strong>前端页面</strong>：<ul><li>在帖子列表页面上，我为每个帖子的标题添加了一个超链接，点击后会跳转到帖子详情页。链接的路径通过<code>Thymeleaf</code>模板引擎动态生成，确保能够正确传递帖子ID。</li><li>在帖子详情页面上，我使用<code>Thymeleaf</code>的<code>th:text</code>和<code>th:src</code>等标签动态渲染帖子的标题、作者头像、用户名、发布时间、正文等内容。</li></ul></li><li><strong>优化与扩展</strong>：<ul><li>考虑到性能问题，我计划在后续引入<code>Redis</code>缓存，将频繁访问的帖子数据和用户信息缓存起来，减少数据库查询的开销。</li><li>目前帖子详情页还没有展示回复功能，后续会结合“帖子回复”模块的开发，进一步完善帖子详情页的功能。</li></ul></li></ol><blockquote><p>帖子详情是指点击首页的贴名后会跳转到该帖子的详情页，详情页会显示帖子内容，以及该帖子的评论和回复，当点击贴名发送请求时，会把所点击的帖子id传到controller中，随后调用mapper找出该帖子，传回到controller中，设置分页信息，根据帖子id查询评论列表，由于在页面中要显示该评论的作者，以及该评论和回复的各种信息，因此遍历评论列表，通过每条评论的id查询每条评论下是否有回复列表，添加帖子中controller传回页面携带的数据中除了基本的帖子信息，也有一个List，{comments}，是Map&lt;String，Object&gt;类型，存放的是评论列表，每条记录中map里存放的是该评论的内容，作者等信息，还有回复列表，回复列表结构和评论列表一样，是list，类型为Map&lt;String，Object&gt;,每条map存放的是回复的相关信息。回复列表比评论列表多一个参数:目标对象，指的是当前回复回复的对象是谁。</p></blockquote><h2 id="十二、添加评论"><a href="#十二、添加评论" class="headerlink" title="十二、添加评论"></a>十二、添加评论</h2><p>添加评论比较重要的一点是确定好targetId目标对象id以及entityType，评论类型。如果评论是回复人的，需要设置targetId，不过targetId是当用户输入完回复信息后发送请求时直接封装到comment对象中，对象中也封装有entityType评论类型，entityId评论id。</p><h2 id="十三、私信列表和私信详情"><a href="#十三、私信列表和私信详情" class="headerlink" title="十三、私信列表和私信详情"></a>十三、私信列表和私信详情</h2><h3 id="1-私信列表"><a href="#1-私信列表" class="headerlink" title="1.私信列表"></a>1.私信列表</h3><p>私信列表是指打开首页并登录后显示的消息，在消息页面中，显示的是消息列表，需要查询数据库中的消息列表，并且需要显示当前用户的所有未读消息数。点开消息后，出现的是当前用户与目标用户以往发送的私信，并且当用户有未读消息时，需要提示当前未读消息数，当用户打开后未读消息数清0。</p><p>私信列表就是简单的调用底层mapper，查询属于该用户的私信时做判断，fromId&#x3D;&#x3D;userId || toId &#x3D;&#x3D; userId,并且查询私信列表时，只需要查询该用户根据conversation_id分组后最新的一条数据，具体的私信内容在在点开私信详情后在显示。在查询私信列表时并将该用户每条私信列表的未读数量和私信数量传入前台页面。</p><h3 id="2-私信详情"><a href="#2-私信详情" class="headerlink" title="2.私信详情"></a>2.私信详情</h3><p>私信详情就是点开某条具体的私信后显示当前用户和目标对象所进行的所有私信记录，查询出当前conversationId所有私信信息后，为每条消息设置信息，fromUser，主要作用是显示发送该消息的用户的头像。</p><h2 id="十四、项目中的redis如何使用的？"><a href="#十四、项目中的redis如何使用的？" class="headerlink" title="十四、项目中的redis如何使用的？"></a>十四、项目中的redis如何使用的？</h2><h3 id="01-使用场景"><a href="#01-使用场景" class="headerlink" title="01 使用场景"></a>01 使用场景</h3><p><strong>缓存点赞和关注：</strong></p><p>在项目中，点赞是非常频繁的操作，如果将点赞的信息存入到数据库中，在用户量不高或者低并发的情况下，不会有情况，但如果用户多或者操作非常频繁时就会大大增大系统的压力，因此需要将点赞信息存入redis中，在nosql中存取数据比在关系型数据库中存取数据快的多。</p><blockquote><p>1.<strong>点赞</strong></p><p>编写likeService，点赞的逻辑是当用户点赞后，首先通过entityType，entityId，userId获取entityLikeKey和userLikeKey。entityLikeKey存放的是为该实体点赞的用户，userLikeKey存放的是该userId所获得的所有赞个数。当有用户为帖子或者评论点赞时，将entityType，entityId，userId传到controller层执行点赞操作，首先判断该用户是否为这个实体点过赞，如果之前点过，这次操作应该是取消点赞，同时将实体所属用户所获得的赞减一。如果没点过赞，将userId存到实体所获赞的set集合中，并将实体所属用户所获得的赞加一。这里entityuserId是指实体所属用户id，userId是当前登录的用户</p><p><strong>2.缓存实体赞</strong></p><p>在页面显示时，也要显示当前实体所获得的赞。并且每当当前用户打开帖子时，都要判断当前用户对这个帖子以及对所有评论的点赞状态，只需要查询实体点赞列表中是否存在当前用户id即可。（如何实现见03）</p><p><strong>3.我收到的赞</strong></p><p>我收到的赞用于打开个人主页后需要在页面显示该用户所有的赞，因为在点赞中已经设置点赞后将用户赞加一，所有只需要调用方法查询该用户key下的数值是多少就行。</p></blockquote><p> 1）Redis缓存用户点赞数用String类型，以用户ID为key，点赞时，自增，取消赞时，自减；缓存实体点赞数，set类型，用户给实体点赞时添加进列表，取消赞时则移除，最后用size统计；</p><p>​    2）缓存粉丝列表，使用zset，存入粉丝的id和关注的时间戳，使用zCard获得粉丝数量。利用reverseRange的时间戳反向排序，按关注时间加载粉丝列表。</p><p><strong>优化登录：</strong></p><p> 1）使用Redis缓存用户信息。将user缓存到Redis中，获取user时，先从Redis获取。取不到时，则从数据库中查询，再缓存到Redis中。因为很多界面都要用到user信息，并发时，频繁的访问数据库，会导致数据库崩溃。变更数据库时，先更新数据库，再清空缓存；</p><p>2）使用Redis缓存验证码 。原本添加到session中，减轻服务器压力。将验证码存到Redis中，方便查询检验；</p><ul><li><p>-验证码需要频繁的访问与刷新，对性能要求很高；</p></li><li><p>-验证码不需要永久存储，通常在很短的时间内就会失效；</p></li><li><p>-分布式部署时，存在session共享问题；</p></li></ul><p>3）登录凭证：原本添加到MySQL中，为减轻每次登录都去查询数据库的压力，将登录凭证ticket缓存在Redis中，防止每次都要进行数据库的查询，提高并发能力。退出登录时，原本要修改数据库中的登录凭证，现在只需要修改Redis即可。</p><p><strong>关注：</strong></p><p>实现关注功能时，我使用 Redis 来存储关注关系，设计了两类 Key：<code>following:userId:entityType</code> 存储用户关注的实体，<code>follower:entityType:entityId</code> 存储实体的粉丝。通过 Redis 的 ZSet 存储数据，Score 为时间戳，方便按时间排序。关注操作时，将实体 ID 添加到用户的关注目标 Key，同时将用户 ID 添加到实体的粉丝 Key，并使用 Redis 的事务确保数据一致性；取消关注时则移除相应数据。这种设计高效、可靠，支持多种实体类型，并且通过 Redis 的事务机制保证了操作的原子性。</p><h4 id="统计统计网站UA和DAU"><a href="#统计统计网站UA和DAU" class="headerlink" title="统计统计网站UA和DAU"></a><strong>统计统计网站UA和DAU</strong></h4><p>（见下面）</p><blockquote><p>使用Redis的高级数据结构：<br>HyperLogLog：超级日志，统计独立整数个数。统计UA（独立访问）时，以日期为 rediskey ，将客户端IP add 到HyperLogLog中（redisTemplate.opsForHyperLogLog().add(redisKey, i);）<br>Bitmap：位图，比如365天的签到，只需要３６５／８个字节的大小。统计DAU（日活跃用户）时，以日期为 rediskey ，以用户ID作为位（在数据中的位置），用 or 操作，既可以方便的统计一段时间内的注册用户访问人数。</p></blockquote><h3 id="02-redis的key怎么设计（怎样存储的点赞、关注、缓存用户数据）？"><a href="#02-redis的key怎么设计（怎样存储的点赞、关注、缓存用户数据）？" class="headerlink" title="02 redis的key怎么设计（怎样存储的点赞、关注、缓存用户数据）？"></a>02 redis的key怎么设计（怎样存储的点赞、关注、缓存用户数据）？</h3><p>redis的key是String类型的，编写了一个工具类来生成redis的key。key由多个单词拼接而成，中间采用冒号隔开，有的单词是固定的，有些单词是动态的。</p><p>点赞使用set类型存储，key为点赞对象，set中保存点赞人的ID<br>关注使用zSet类型存储，key为被关注者，set保存关注者以及关注时间为score<br>缓存用户数据使用Value类型，key为用userID得到的key，value为user对象（设置过期时间，且数据修改时需要清除缓存）</p><p> 验证码是与user相关的，但是这里我们不能直接传入userId,因为还未登录，我们不知道用户是谁。这里传入了一个字符串owner，这是在用户访问登录页面的时候，给他发一个凭证（随机字符串），存到cookie里，用的时候从cookie内将这个owner取出来，在得到rediskey，然后获取验证码，与输入的验证码进行对比。</p><h3 id="03-缓存点赞数如何实现"><a href="#03-缓存点赞数如何实现" class="headerlink" title="03 缓存点赞数如何实现"></a>03 缓存点赞数如何实现</h3><p>帖子和评论的赞一起存，统称为实体的赞。还需要统计用户的赞（用户的帖子和评论收到的赞的总和）。因为如果统计用户所有帖子和评论的赞得到用户获得的赞太麻烦，所以这里以用户ID采用rediskey工具拼接为key记录点赞数量（这就会涉及到事务操作。用户的帖子或者评论的点赞数增加了对应的用户的赞要增加）。</p><p>具体实现：使用redis来存储点赞数，首先需要构造redis的key，</p><p>点赞使用set类型存储，key为点赞对象，set中保存点赞人的ID</p><p>点赞的时候需要判断用户是否已经点赞：通过redistemplate.opsforSet().ismember方法 如果已经点过赞了就要把点赞记录删除 否则添加数据。 这里用到了事务操作 重写了execute方法</p><p>项目中的redis在存储用户信息时，是只读模式。</p><h3 id="04-如何解决缓存和数据库的数据不一致问题？"><a href="#04-如何解决缓存和数据库的数据不一致问题？" class="headerlink" title="04 如何解决缓存和数据库的数据不一致问题？"></a>04 如何解决缓存和数据库的数据不一致问题？</h3><p> 缓存和数据库的数据不一致一般是由两个原因导致的，提供了相应的解决方案。</p><ul><li>删除缓存值或更新数据库失败而导致数据不一致，可以使用重试机制确保删除或更新操作成功。</li><li>在删除缓存值、更新数据库的这两步操作中，有其他线程的并发读操作，导致其他线程读取到旧值，应对方案是延迟双删。</li></ul><p>重试机制：具体来说，可以把要删除的缓存值或者是要更新的数据库值暂存到消息队列中。当应用没有能够成功地删除缓存值或者是更新数据库值时，可以从消息队列中重新读取这些值，然后再次进行删除或更新。如果能够成功地删除或更新，我们就要把这些值从消息队列中去除，以免重复操作，此时，我们也可以保证数据库和缓存的数据一致了。否则的话，我们还需要再次进行重试。如果重试超过的一定次数，还是没有成功，我们就需要向业务层发送报错信息了 。</p><p>延迟双删： 一般<strong>应用于先删除缓存，再更新数据库的</strong>多线程并发访问的情况。这是因为，先更新数据库值，再删除缓存值的情况下，如果线程 A 删除了数据库中的值，但还没来得及删除缓存值，线程 B 就开始读取数据了，那么此时，线程 B 查询缓存时，发现缓存命中，就会直接从缓存中读取旧值。不过，在这种情况下，如果其他线程并发读缓存的请求不多，那么，就不会有很多请求读取到旧值。而且，线程 A 一般也会很快删除缓存值，这样一来，其他线程再次读取时，就会发生缓存缺失，进而从数据库中读取最新值。所以，这种情况对业务的影响较小。<br>总结：</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/91383fbd6159fa4e6e47560870e18f54.png" alt="img"></p><h3 id="05-为什么使用了先删数据库再删缓存保证数据同步？"><a href="#05-为什么使用了先删数据库再删缓存保证数据同步？" class="headerlink" title="05 为什么使用了先删数据库再删缓存保证数据同步？"></a>05 为什么使用了先删数据库再删缓存保证数据同步？</h3><blockquote><p>在我的项目中，缓存和数据库的同步策略采用了“先更新数据库，再删除缓存”的方式，而不是“先删缓存再更新数据库”，主要是基于以下几点考虑：</p></blockquote><blockquote><p><strong>1. 避免数据不一致</strong><br>如果先删缓存，再更新数据库，在删除缓存后、更新数据库前，可能会有其他请求读取数据。由于缓存为空，这些请求会从数据库中读取旧数据并重新加载到缓存中。即使数据库更新完成，缓存中仍然是旧数据，导致缓存与数据库不一致。而在我的项目中，数据一致性是核心需求，因此优先保证数据库更新成功后再删除缓存。</p></blockquote><blockquote><p><strong>2. 减少缓存穿透风险</strong><br>先删缓存后，如果更新数据库的时间较长，在这段时间内可能会有大量请求直接穿透缓存，直接访问数据库，导致数据库压力骤增。我的项目是一个高并发系统，数据库的性能至关重要，因此需要避免这种风险。</p></blockquote><blockquote><p><del><strong>3. 简化并发控制</strong></del><br><del>在高并发场景下，如果先删缓存再更新数据库，可能会出现多个请求同时删除缓存并更新数据库的情况，导致数据竞争。而在我的项目中，通过“先更新数据库，再删除缓存”的方式，可以确保数据库更新成功后，缓存被删除，后续请求会重新加载最新数据，避免并发问题。</del></p></blockquote><blockquote><p><strong>4. 保证事务性</strong><br>我的项目中，数据库更新是一个事务性操作，确保数据更新的原子性。如果先删缓存，再更新数据库，在数据库更新失败的情况下，缓存已经被删除，会导致数据不一致。而“先更新数据库，再删除缓存”可以确保数据库更新成功后，缓存被删除，即使缓存删除失败，也可以通过重试机制保证最终一致性。</p></blockquote><blockquote><p><strong>5. 性能优化</strong><br>先更新数据库，再删除缓存，可以确保在数据库更新成功后，缓存被及时删除，减少缓存与数据库的同步延迟，提高系统的响应速度。这对于我的项目来说，是一个重要的性能优化点。</p></blockquote><blockquote><p>综上所述，在我的项目中，“先更新数据库，再删除缓存”的策略能够更好地保障数据一致性，减少缓存穿透风险，简化并发控制，并优化系统性能，因此选择了这种方案。</p></blockquote><h2 id="十五、项目中哪用了kafka？"><a href="#十五、项目中哪用了kafka？" class="headerlink" title="十五、项目中哪用了kafka？"></a>十五、项目中哪用了kafka？</h2><h3 id="01-怎么用了？"><a href="#01-怎么用了？" class="headerlink" title="01 怎么用了？"></a>01 怎么用了？</h3><blockquote><p>当有点赞，评论，关注请求时，会发送系统通知点赞，评论，关注的对象。在处理系统信息时，使用到了Kafka，具体来说，先定义了生产者类和消费者类，其中生产者被点赞&#x2F;评论&#x2F;关注功能对应的Controller使用，产生消息。而消费者负责消息（message）到来时，把消息存到数据库内。</p><p><strong>1. 生产者侧：用户触发事件，发消息到 Kafka</strong><br>比如用户A评论了用户B的帖子，后端会生成一条JSON消息，内容包含通知类型、发送人、接收人、帖子ID这些关键信息。然后通过Kafka生产者把这条消息发到对应的Topic里，比如评论通知单独一个Topic，点赞另一个。这里有个细节，我按接收人的用户ID做了分区，保证同一个用户的通知按顺序处理，避免乱序问题。</p><p><strong>3. 消费者侧：异步处理，存库+推送给用户</strong><br>消费者服务一直监听Kafka的Topic，拉取到新消息后，主要做两件事：</p><ul><li><strong>存数据库</strong>：把通知内容存到MySQL的<code>message</code>表，同时用Redis记录用户的未读通知数（比如小红点）。</li><li><strong>实时推送</strong>：如果用户在线，通过WebSocket立刻推前端；如果离线，等下次登录再拉取。</li></ul></blockquote><h3 id="02-生产者消费者模型"><a href="#02-生产者消费者模型" class="headerlink" title="02 生产者消费者模型"></a>02 生产者消费者模型</h3><blockquote><p><strong>生产者消费者模型</strong></p><p>Kafka 的生产者-消费者模型是一种高效的消息传递机制，生产者负责将消息发布到指定的 Kafka 主题（Topic），而消费者则从这些主题订阅并消费消息。Kafka 通过分区（Partition）和消费者组（Consumer Group）的设计，实现了高吞吐量和可扩展性。生产者可以异步发送消息，并支持消息确认机制，确保数据可靠性；消费者组内的多个消费者可以并行处理消息，Kafka 会为每个消费者分配特定的分区，保证消息的顺序性。这种模型解耦了生产者和消费者，适用于日志收集、实时数据处理和事件驱动架构等场景</p></blockquote><p><strong>kafka入门</strong></p><p>Apache Kafka是一个分布式流平台。一个分布式的流平台应该包含3点关键的能力：</p><p><strong>·kafka特点</strong></p><p><strong>-高吞吐量：</strong>处理TB级的海量数据</p><p>-消息持久化：持久化，将数据存储到硬盘上，而不仅仅存储在内存中，长久保存消息，存到硬盘中的读取速度远远小于内存，读写硬盘的效率高低取决于读取硬盘的方式，硬盘的顺序读写的效率是很高的，kafka保证对硬盘消息的读写都是顺序的；</p><p><strong>-高可靠性：</strong>kafka是分布式部署，一台服务器挂了，还有别的，有容错机制</p><p><strong>-高拓展性：</strong>集群的服务器不够时，可以扩展服务器，只需简单的配置</p><p><strong>·kafka术语</strong></p><p>消息模型：发布-订阅模型，消费者订阅了某一主题（topic）后，生产者采用类似广播的方式，将消息通过主题传递给所有的订阅者。<br>Topic：主题，类似于文件夹，用来存放不同的数据。<br>Partition：主题分区，同一主题的不同分区可以存放在不同的Broker上面，保证并发能力和负载均衡。<br>Offset：消息在Partition中的存放位置。<br>Broker：可以理解为kafka集群里面的一台或多台服务器，它本身是没有复制的，上面可能运行着topic1的leader， topic2的follower等等。</p><h3 id="02-消息队列放到内存还是磁盘？放磁盘为什么还这么快？"><a href="#02-消息队列放到内存还是磁盘？放磁盘为什么还这么快？" class="headerlink" title="02 消息队列放到内存还是磁盘？放磁盘为什么还这么快？"></a><strong>02 消息队列放到内存还是磁盘？放磁盘为什么还这么快？</strong></h3><p>Kafka的消息是保存或缓存在磁盘上的，一般认为在磁盘上读写数据是会降低性能的，因为寻址会比较消耗时间，但是实际上，Kafka的特性之一就是高吞吐率。</p><p>从数据写入和读取两方面分析，为什么Kafka速度这么快</p><p>写入数据：磁盘读写的快慢取决于你怎么使用它，也就是顺序读写或者随机读写。在<strong>顺序读写</strong>的情况下，磁盘的顺序读写速度和内存持平。因为硬盘是机械结构，每次读写都会寻址-&gt;写入，其中寻址是一个“机械动作”，它是最耗时的。所以硬盘最讨厌随机I&#x2F;O，最喜欢顺序I&#x2F;O。为了提高读写硬盘的速度，Kafka就是使用顺序I&#x2F;O。</p><p>即便是顺序写入硬盘，硬盘的访问速度还是不可能追上内存。所以Kafka的数据并不是实时的写入硬盘 ，它充分利用了现代操作系统分页存储来利用内存提高I&#x2F;O效率。</p><p>读取数据：实现了零拷贝，</p><p>传统数据读取的问题：传统的数据读取需要经过多次数据拷贝：</p><ol><li>从磁盘读取数据到内核缓冲区。</li><li>从内核缓冲区拷贝到用户空间缓冲区。</li><li>从用户空间缓冲区拷贝到内核的网络缓冲区。</li><li>从网络缓冲区发送到网络设备。</li></ol><p><strong>Kafka 的优化</strong>：Kafka 使用零拷贝技术（如 <code>sendfile</code> 系统调用），直接将数据从磁盘文件传输到网络设备，跳过了用户空间的拷贝。这样减少了 CPU 和内存的开销，提高了数据读取的效率。</p><h2 id="十六、Elasticsearch"><a href="#十六、Elasticsearch" class="headerlink" title="十六、Elasticsearch"></a>十六、Elasticsearch</h2><h3 id="01-Elasticsearch是什么"><a href="#01-Elasticsearch是什么" class="headerlink" title="01 Elasticsearch是什么"></a>01 Elasticsearch是什么</h3><p>Elasticsearch是由 ]ava语言开发<strong>基于Lucene</strong>的一款开源的搜索、聚合分析和存储引学。同时它也可以称作是一种<strong>非关系型文档数据库</strong>。（文档型数据库，它以 <strong>文档</strong> 为基本单位存储数据。文档通常采用 JSON、BSON 或 XML 等格式，每个文档是一个自包含的数据单元，包含键值对、嵌套对象或数组等结构。文档型数据库的核心思想是将数据以更自然的方式存储，而不是强制将其拆分为表和行。）</p><p>其具备天生分布式、高性能，高可用，易拓展，易维护，跨平台的特性，广泛应用于，海量数据的全文检索，搜索引擎，站内搜索等，还有日志系统ELK的使用也可以参与。</p><blockquote><p><del>概念：ES是一个基于lucene构建的，分布式的，RESTful的开源全文搜索引擎。</del><br><del>存储原理：数据按照Index – Type – Document – 字段四级存储，其中Index对应数据库，Type对应表，Document为搜索的原子单位，包含一个或多个容器，基于JSON表示。字段是指JSON中的每一项组成，类似于数据库中的行&#x2F;列。Mapping是文档分析过滤后的结果，根据用户自定义，将某些文字过滤掉，类似于表结构定义DDL？？。同时ES也和分布式数据库一样，支持shard的replication。</del><br>功能：<br>1、分布式的搜索引擎和数据分析引擎<br>2、全文检索，结构化检索，数据分析。<br>3、对海量数据进行近实时的处理<br>特点：<br>1、可以作为分布式集群处理PB级别的数据，也可单机使用。<br>2、不是特有技术，而是将分布式+全文搜索（lucene) + 数据分析合并在一起。<br>3、操作简单，作为传统数据库的补充，提供了数据库所不具备的很多功能。</p></blockquote><h3 id="02-ES中的mapping是什么，ES的数据类型有哪些？"><a href="#02-ES中的mapping是什么，ES的数据类型有哪些？" class="headerlink" title="02 ES中的mapping是什么，ES的数据类型有哪些？"></a>02 ES中的mapping是什么，ES的数据类型有哪些？</h3><p>ES中的mapping有点类似于与RDB中“表结构”的概念，在MySQL中，表结构里包含了字段名称，字段的类型还有索引信息等。在Mapping里也包含了一些属性，比如字段名称、类型、字段使用的分词器、是否评分、是否创建索引等属性，并且在ES中一个字段可以有多个类型。<del>分词器、评分等念在后面的课程讲解。</del></p><p><strong>常见类型：</strong></p><ol><li><p><strong>数字类型：</strong>long integer  short   byte  double   float  half_float   scaled_float  unsigned_long</p></li><li><p><strong>Keyword类型：</strong>适用于索引结构化的字段，可以用于过滤、排序、聚合。keyword类型的字段只能通过精确值(exact value)搜索到。id应该用keyword。keyword字段通常用于排序，汇总和Term查询，例如term</p></li></ol><p>还有两个不常见的类型：</p><ul><li>constant_keyword:<strong>始终包含相同值的关键字字段</strong></li><li>wildcard:可针对类似grep的<strong>通配符查询</strong>优化日志行和类似的关键字值</li></ul><ol start="3"><li><strong>dates(时间类型)：</strong></li></ol><p>包括date和date_nanos</p><ol start="4"><li><strong>alias：</strong>为现有字段定义别名</li><li><u>**text:**当一个字段是要被全文搜索的，比如Email内容、产品描述，这些字段应该使用text类型，设置text类型以后，字段内容会被分析，在生成倒排索引以前，字符串会被分析器分成一个一个词项。text类型的字段不用于排序，很少用于聚合。主要原因如下：</u></li></ol><ul><li><u><strong>分词问题</strong>：text 字段的内容会被分词，排序和聚合需要直接访问字段的原始值，而分词后的值无法直接用于这些操作。</u></li><li><u><strong>内存占用高</strong>：如果为 text 字段创建正排索引（用于排序和聚合），会占用大量堆空间，尤其是高基数字段（字段值非常多且不重复）。这会导致内存压力增加，甚至可能引发性能问题。</u></li><li><u><strong>加载成本高</strong>：加载正排索引是一个昂贵的操作，尤其是在字段值非常多的情况下，这会导致查询延迟增加，影响用户体验。</u></li><li><u><strong>生命周期长</strong>：正排索引一旦加载到内存中，就会在整个段的生命周期内驻留在内存中，即使不再使用，也不会被立即释放，进一步加剧内存压力。</u></li></ul><p>为了解决这个问题，通常的做法是：</p><ul><li>如果字段的值是短文本且不需要分词（如标签、状态码等），可以将其映射为 keyword 类型，keyword 类型字段会创建正排索引，支持排序和聚合。</li><li>如果需要同时支持全文搜索和排序&#x2F;聚合，可以使用多字段映射（Multi-fields），例如将一个字段同时映射为 text 和 keyword 类型，分别用于全文搜索和排序&#x2F;聚合。</li></ul><p>通过这种方式，Elasticsearch 在保证全文搜索性能的同时，避免了不必要的资源消耗。”</p><blockquote><h3 id="追问场景示例"><a href="#追问场景示例" class="headerlink" title="追问场景示例"></a><strong>追问场景示例</strong></h3><p><strong>面试官</strong>：你能举一个实际项目中如何使用多字段映射的例子吗？<br><strong>候选人</strong>：<br>“在电商项目中，我们有一个商品描述字段 <code>description</code>，需要同时支持全文搜索和排序。我们使用了多字段映射，将 <code>description</code> 字段映射为 text 和 keyword 类型：</p><ul><li><code>description</code> 字段用于全文搜索，支持分词和模糊查询。</li><li><code>description.keyword</code> 字段用于排序和聚合，存储原始值，支持精确匹配。</li></ul><p>例如，用户可以通过 <code>description</code> 字段搜索包含‘舒适’关键词的商品，同时通过 <code>description.keyword</code> 字段对商品描述进行字母顺序排序。这种方式既满足了全文搜索的需求，又支持了排序和聚合操作。”</p></blockquote><h3 id="03-项目中哪里使用到了ES-如何使用"><a href="#03-项目中哪里使用到了ES-如何使用" class="headerlink" title="03 项目中哪里使用到了ES,如何使用"></a>03 项目中哪里使用到了ES,如何使用</h3><p>在进行帖子搜索时，使用到了ES。可用Repository和Template两种方式，由于Repository搜索到的结果（直接返回的post类，方便）没有高亮标签（why），所以使用了template方式重写了mapResults函数，获得了带有高亮标签的post。<br>使用消息队列（kafka）的方式，实现发帖&#x2F;删帖后ES数据库的自动更新。<br>搜索：定义SearchQuery，确定搜素内容，排序方式，高亮等。接着使用elasticTemplate.queryForPage方法，需要重写mapResults函数，得到高亮数据。</p><h2 id="十七、面经"><a href="#十七、面经" class="headerlink" title="十七、面经"></a>十七、面经</h2><h3 id="01-如何分析优化SQL执行效率？"><a href="#01-如何分析优化SQL执行效率？" class="headerlink" title="01 如何分析优化SQL执行效率？"></a>01 如何分析优化SQL执行效率？</h3><ol><li><p><strong>使用 <code>EXPLAIN</code> 分析执行计划</strong>：通过 <code>EXPLAIN</code> 命令查看 SQL 语句的执行计划，重点关注是否使用了索引、是否有全表扫描、连接类型（如 JOIN）是否高效等。通过分析执行计划，可以找到 SQL 的性能瓶颈。</p></li><li><p><strong>优化索引</strong>：确保查询条件中的字段有合适的索引，尤其是高频查询的字段。避免在索引列上使用函数或计算，这会导致索引失效。同时，注意避免创建过多索引，因为索引会增加写操作的开销。</p></li><li><p><strong>避免全表扫描</strong>：全表扫描会显著降低查询性能，应尽量通过索引或优化查询条件来避免。例如，使用 <code>WHERE</code> 条件筛选数据，或通过分页查询减少返回的数据量。</p></li><li><p><strong>优化查询语句</strong>：</p><ul><li>避免使用 <code>SELECT *</code>，只查询需要的字段，减少数据传输量。</li><li>减少子查询的使用，尽量用 JOIN 替代。</li><li>避免在 <code>WHERE</code> 条件中使用 <code>OR</code>，尤其是在不同字段上，这可能导致索引失效。</li></ul></li><li><p><strong>利用缓存</strong>：对于高频查询且数据变化不频繁的场景，可以使用 Redis 等缓存技术，减少数据库的访问压力。</p></li></ol><h3 id="02-EXPLAIN-中-type-字段的可能值及含义？"><a href="#02-EXPLAIN-中-type-字段的可能值及含义？" class="headerlink" title="02 EXPLAIN 中 type 字段的可能值及含义？"></a>02 <strong><code>EXPLAIN</code> 中 <code>type</code> 字段的可能值及含义？</strong></h3><p><code>type</code> 字段表示 MySQL 访问表的方式，常见的值及其含义如下：</p><ul><li><strong>system</strong>：表只有一行数据（系统表），是性能最高的访问方式。</li><li><strong>const</strong>：通过主键或唯一索引查询，返回一行数据。</li><li><strong>eq_ref</strong>：使用唯一索引进行关联查询，返回一行数据。</li><li><strong>ref</strong>：使用非唯一索引进行查询，返回多行数据。</li><li><strong>range</strong>：使用索引进行范围查询（如 <code>BETWEEN</code>、<code>&gt;</code>、<code>&lt;</code>）。</li><li><strong>index</strong>：全索引扫描，遍历整个索引树。</li><li><strong>ALL</strong>：全表扫描，性能最差，应尽量避免。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 就业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 就业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕业设计01_爬虫完结（爬取boss直聘数据）</title>
      <link href="/2025/02/07/2025_02/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E7%88%AC%E8%99%AB%E5%AE%8C%E7%BB%93/"/>
      <url>/2025/02/07/2025_02/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E7%88%AC%E8%99%AB%E5%AE%8C%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>爬虫部分没有记录笔记，爬虫中遇见的反爬中的问题见博客中的《Boss直聘反爬解决方法》</p><h2 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h2><p>本项目采用<code>Django</code>框架，先创建一个新应用</p><p>输入<code>python manage.py startapp myApp</code>，创建一个新的 Django 应用（App）</p><p>生成的目录结构通常如下：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">myApp/</span><br><span class="line">    __init__.py <span class="comment"># 这是一个空文件，用于告诉 Python 这个目录是一个 Python 包。</span></span><br><span class="line">    admin.py <span class="comment"># 用于注册模型到 Django 的管理后台。</span></span><br><span class="line">    apps.py <span class="comment"># 包含应用的配置信息。</span></span><br><span class="line">    migrations/ <span class="comment"># 用于存放数据库迁移文件。</span></span><br><span class="line">        __init__.py</span><br><span class="line">    models.py <span class="comment"># 用于定义数据库模型。</span></span><br><span class="line">    tests.py <span class="comment"># 用于编写应用的测试用例。</span></span><br><span class="line">    views.py <span class="comment"># 用于编写视图函数或类。</span></span><br></pre></td></tr></table></figure><h2 id="定义数据库模型"><a href="#定义数据库模型" class="headerlink" title="定义数据库模型"></a>定义数据库模型</h2><ol><li>在 <code>models.py</code> 文件中，定义了三个 <code>Django</code> 模型：<code>JobInfo</code>、<code>User</code> 和 <code>History</code>。这些模型对应于数据库中的表，每个模型的字段对应于表中的列。通过定义模型，实际上是在定义数据库中的表结构 Django 会根据这些模型自动生成相应的数据库表。</li></ol><p><strong>有以下好处：</strong></p><ul><li><strong>数据持久化</strong>：这些模型将用于在数据库中存储和管理数据。例如，可以通过 <code>JobInfo</code> 模型来存储和查询岗位信息，通过 <code>User</code> 模型来管理用户信息。</li><li><strong>数据关系</strong>：通过外键（如 <code>History</code> 模型中的 <code>job</code> 和 <code>user</code>），可以在不同的模型之间建立关系，从而实现复杂的数据查询和操作。</li><li><strong>数据库迁移</strong>：在定义好模型后，可以使用 Django 的迁移工具（<code>python manage.py makemigrations</code> 和 <code>python manage.py migrate</code>）来创建或更新数据库表结构。</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JobInfo</span>(models.Model):</span><br><span class="line">    <span class="built_in">id</span> = models.AutoField(<span class="string">&#x27;id&#x27;</span>, primary_key=<span class="literal">True</span>)</span><br><span class="line">    title = models.CharField(<span class="string">&quot;岗位名字&quot;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    address = models.CharField(<span class="string">&#x27;省会&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">type</span> = models.CharField(<span class="string">&#x27;职业&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    educational = models.CharField(<span class="string">&#x27;学历&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    workExperience = models.CharField(<span class="string">&#x27;工作经验&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    workTag = models.CharField(<span class="string">&#x27;工作标签&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    salary = models.CharField(<span class="string">&#x27;薪资&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    salaryMonth = models.CharField(<span class="string">&#x27;年终奖&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    companyTags = models.CharField(<span class="string">&#x27;公司福利&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    hrWork = models.CharField(<span class="string">&#x27;人事职位&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    hrName = models.CharField(<span class="string">&#x27;人事名字&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    pratice = models.BooleanField(<span class="string">&#x27;是否为实习单位&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    companyTitle = models.CharField(<span class="string">&#x27;公司名称&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    companyAvatar = models.CharField(<span class="string">&#x27;公司头像&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    companyNature = models.CharField(<span class="string">&#x27;公司性质&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    companyStatus = models.CharField(<span class="string">&#x27;公司状态&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    companyPeople = models.CharField(<span class="string">&#x27;公司人数&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    detailUrl = models.CharField(<span class="string">&#x27;详情地址&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    companyUrl = models.CharField(<span class="string">&#x27;公司详情地址 &#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    companyUrl = models.CharField(<span class="string">&#x27;公司详情地址&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    createTime = models.DateTimeField(<span class="string">&#x27;创建时间&#x27;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    dist = models.CharField(<span class="string">&#x27;行政区&#x27;</span>, max_length=<span class="number">25</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        db_table = <span class="string">&quot;jobInfo&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(models.Model):</span><br><span class="line">    <span class="built_in">id</span> = models.AutoField(<span class="string">&#x27;id&#x27;</span>, primary_key=<span class="literal">True</span>)</span><br><span class="line">    username = models.CharField(<span class="string">&#x27;用户名&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    password = models.CharField(<span class="string">&#x27;密码&#x27;</span>, max_length=<span class="number">25</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    educational = models.CharField(<span class="string">&#x27;学历&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    workExpirence = models.CharField(<span class="string">&#x27;工作经验&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    address = models.CharField(<span class="string">&#x27;意向城市&#x27;</span>, max_length=<span class="number">255</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    work = models.CharField(<span class="string">&#x27;意向岗位&#x27;</span>, max_length=<span class="number">25</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    avatar = models.FileField(<span class="string">&#x27;用户头像&#x27;</span>, upload_to=<span class="string">&quot;avatar&quot;</span>, default=<span class="string">&quot;avatar/default.png&quot;</span>)</span><br><span class="line">    createTime = models.DateTimeField(<span class="string">&#x27;创建时间&#x27;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        db_table = <span class="string">&quot;user&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">History</span>(models.Model):</span><br><span class="line">    <span class="built_in">id</span> = models.AutoField(<span class="string">&#x27;id&#x27;</span>, primary_key=<span class="literal">True</span>)</span><br><span class="line">    job = models.ForeignKey(JobInfo, on_delete=models.CASCADE)</span><br><span class="line">    user = models.ForeignKey(User, on_delete=models.CASCADE)</span><br><span class="line">    count = models.IntegerField(<span class="string">&quot;点击次数&quot;</span>, default=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        db_table = <span class="string">&quot;histroy&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在<code>graduationdesign</code>中的<code>settings.py</code>的<code>INSTALLED_APPS </code>中添加应用——<code>myApp</code>，然后进行数据库的迁移，在 mysql 数据库中生成相关的表</li></ol><p>用以下指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><ol start="3"><li>修改爬虫代码，添加保存数据库中的功能，然后向数据库中存入数据</li></ol><h2 id="爬boss直聘原码（附带存入数据库）"><a href="#爬boss直聘原码（附带存入数据库）" class="headerlink" title="爬boss直聘原码（附带存入数据库）"></a>爬boss直聘原码（附带存入数据库）</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.service <span class="keyword">import</span> Service</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> django</span><br><span class="line"></span><br><span class="line">os.environ.setdefault(<span class="string">&#x27;DJANGO_SETTINGS_MODULE&#x27;</span>, <span class="string">&#x27;graduationdesign.settings&#x27;</span>)</span><br><span class="line">django.setup()</span><br><span class="line"><span class="keyword">from</span> myApp.models <span class="keyword">import</span> JobInfo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">spider</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, <span class="built_in">type</span>, page</span>):</span><br><span class="line">        <span class="variable language_">self</span>.<span class="built_in">type</span> = <span class="built_in">type</span>  <span class="comment"># 岗位关键字</span></span><br><span class="line">        <span class="variable language_">self</span>.page = <span class="built_in">int</span>(page)  <span class="comment"># 页码数（当前页码数）</span></span><br><span class="line">        <span class="variable language_">self</span>.spiderUrl = <span class="string">&quot;https://www.zhipin.com/web/geek/job?query=%s&amp;city=100010000&amp;page=%s&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.brower = <span class="variable language_">self</span>.startBrower()  <span class="comment"># 只初始化一次浏览器实例</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">startBrower</span>(<span class="params">self</span>):</span><br><span class="line">        service = Service(<span class="string">&quot;./chromedriver.exe&quot;</span>)</span><br><span class="line">        options = webdriver.ChromeOptions()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 浏览器的复用（防止反爬）</span></span><br><span class="line">        <span class="comment"># 打开cmd 输入   chrome.exe -remote-debugging-port=9222</span></span><br><span class="line">        options.add_experimental_option(<span class="string">&#x27;debuggerAddress&#x27;</span>, <span class="string">&#x27;localhost:9222&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 方法二：使用过手机热点，每次重新打开手机热点，IP地址也不一样</span></span><br><span class="line">        <span class="comment"># options.add_experimental_option(&quot;excludeSwitches&quot;, [&#x27;enable-automation&#x27;])</span></span><br><span class="line">        brower = webdriver.Chrome(service=service, options=options)</span><br><span class="line">        <span class="keyword">return</span> brower</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">self, page</span>):  <span class="comment"># page为总共要爬取的page总数</span></span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.page &gt; page: <span class="keyword">return</span></span><br><span class="line">        <span class="comment"># brower = self.startBrower()</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;正在爬取的页面路径：&quot;</span> + <span class="variable language_">self</span>.spiderUrl % (<span class="variable language_">self</span>.<span class="built_in">type</span>, <span class="variable language_">self</span>.page))</span><br><span class="line">        <span class="variable language_">self</span>.brower.get(<span class="variable language_">self</span>.spiderUrl % (<span class="variable language_">self</span>.<span class="built_in">type</span>, <span class="variable language_">self</span>.page))</span><br><span class="line">        time.sleep(<span class="number">15</span>)</span><br><span class="line">        job_list = <span class="variable language_">self</span>.brower.find_elements(by=By.XPATH, value=<span class="string">&#x27;//ul[@class=&quot;job-list-box&quot;]/li&#x27;</span>)  <span class="comment"># value参数使用XPATH语法</span></span><br><span class="line">        <span class="keyword">for</span> index, job <span class="keyword">in</span> <span class="built_in">enumerate</span>(job_list):</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                jobData = []</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;正在爬取第%d个数据&quot;</span> % (index + <span class="number">1</span>))</span><br><span class="line">                <span class="comment"># title</span></span><br><span class="line">                title = job.find_element(by=By.XPATH,</span><br><span class="line">                                         value=<span class="string">&quot;.//a[@class=&#x27;job-card-left&#x27;]/div[contains(@class,&#x27;job-title&#x27;)]&quot;</span></span><br><span class="line">                                               <span class="string">&quot;/span[@class=&#x27;job-name&#x27;]&quot;</span>).text</span><br><span class="line">                <span class="comment"># address</span></span><br><span class="line">                addresses = job.find_element(by=By.XPATH,</span><br><span class="line">                                             value=<span class="string">&quot;.//a[@class=&#x27;job-card-left&#x27;]/div[contains(@class,&#x27;job-title&#x27;)]&quot;</span></span><br><span class="line">                                                   <span class="string">&quot;/span[@class=&#x27;job-area-wrapper&#x27;]/span&quot;</span>).text.split(<span class="string">&#x27;·&#x27;</span>)</span><br><span class="line">                address = addresses[<span class="number">0</span>]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(addresses) != <span class="number">1</span>:</span><br><span class="line">                    dist = addresses[<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    dist = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># type</span></span><br><span class="line">                <span class="built_in">type</span> = <span class="variable language_">self</span>.<span class="built_in">type</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># educational, workExperience</span></span><br><span class="line">                tag_list = job.find_elements(by=By.XPATH,</span><br><span class="line">                                             value=<span class="string">&quot;.//a[@class=&#x27;job-card-left&#x27;]/div[contains(@class,&#x27;job-info&#x27;)]&quot;</span></span><br><span class="line">                                                   <span class="string">&quot;/ul[@class=&#x27;tag-list&#x27;]/li&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(tag_list) == <span class="number">2</span>:</span><br><span class="line">                    educational = tag_list[<span class="number">1</span>].text</span><br><span class="line">                    workExperience = tag_list[<span class="number">0</span>].text</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    educational = tag_list[<span class="number">2</span>].text</span><br><span class="line">                    workExperience = tag_list[<span class="number">1</span>].text</span><br><span class="line"></span><br><span class="line">                <span class="comment"># hrName</span></span><br><span class="line">                hrName = job.find_element(by=By.XPATH,</span><br><span class="line">                                          value=<span class="string">&quot;.//a[@class=&#x27;job-card-left&#x27;]/div[contains(@class,&#x27;job-info&#x27;)]&quot;</span></span><br><span class="line">                                                <span class="string">&quot;/div[@class=&#x27;info-public&#x27;]&quot;</span>).text</span><br><span class="line">                <span class="comment"># hrWork</span></span><br><span class="line">                hrWork = job.find_element(by=By.XPATH,</span><br><span class="line">                                          value=<span class="string">&quot;.//a[@class=&#x27;job-card-left&#x27;]/div[contains(@class,&#x27;job-info&#x27;)]&quot;</span></span><br><span class="line">                                                <span class="string">&quot;/div[@class=&#x27;info-public&#x27;]/em&quot;</span>).text</span><br><span class="line">                <span class="comment"># workTag</span></span><br><span class="line">                workTag = job.find_elements(by=By.XPATH,</span><br><span class="line">                                            value=<span class="string">&quot;./div[contains(@class,&#x27;job-card-footer&#x27;)]/ul[@class=&#x27;tag-list&#x27;]/li&quot;</span>)</span><br><span class="line">                workTag = json.dumps(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x.text, workTag)))</span><br><span class="line"></span><br><span class="line">                <span class="comment"># pratice</span></span><br><span class="line">                pratice = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">                salaries = job.find_element(by=By.XPATH,</span><br><span class="line">                                            value=<span class="string">&quot;.//a[@class=&#x27;job-card-left&#x27;]/div[contains(@class,&#x27;job-info&#x27;)]&quot;</span></span><br><span class="line">                                                  <span class="string">&quot;/span[@class=&#x27;salary&#x27;]&quot;</span>).text</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> salaries.find(<span class="string">&#x27;K&#x27;</span>) != -<span class="number">1</span>:</span><br><span class="line">                    salaries = salaries.split(<span class="string">&#x27;·&#x27;</span>)</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">len</span>(salaries) == <span class="number">1</span>:</span><br><span class="line">                        <span class="comment"># salary</span></span><br><span class="line">                        salary = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: <span class="built_in">int</span>(x) * <span class="number">1000</span>, salaries[<span class="number">0</span>].replace(<span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;-&#x27;</span>)))</span><br><span class="line">                        <span class="comment"># salaryMonth</span></span><br><span class="line">                        salaryMonth = <span class="string">&#x27;0薪&#x27;</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="comment"># salary</span></span><br><span class="line">                        salary = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: <span class="built_in">int</span>(x) * <span class="number">1000</span>, salaries[<span class="number">0</span>].replace(<span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;-&#x27;</span>)))</span><br><span class="line">                        <span class="comment"># salaryMonth</span></span><br><span class="line">                        salaryMonth = salaries[<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># salary</span></span><br><span class="line">                    salary = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: <span class="built_in">int</span>(x), salaries.replace(<span class="string">&#x27;元/天&#x27;</span>, <span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;-&#x27;</span>)))</span><br><span class="line">                    <span class="comment"># salaryMonth</span></span><br><span class="line">                    salaryMonth = <span class="string">&#x27;0薪&#x27;</span></span><br><span class="line">                    pratice = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># companyTitle</span></span><br><span class="line">                companyTitle = job.find_element(by=By.XPATH,</span><br><span class="line">                                                value=<span class="string">&quot;.//div[@class=&#x27;job-card-right&#x27;]/div[@class=&#x27;company-info&#x27;]/h3/a&quot;</span>).text</span><br><span class="line">                <span class="comment"># companyAvatar</span></span><br><span class="line">                companyAvatar = job.find_element(by=By.XPATH,</span><br><span class="line">                                                 value=<span class="string">&quot;.//div[@class=&#x27;job-card-right&#x27;]/div[@class=&#x27;company-logo&#x27;]/a/img&quot;</span>).get_attribute(</span><br><span class="line">                    <span class="string">&quot;src&quot;</span>)</span><br><span class="line">                companyInfos = job.find_elements(by=By.XPATH,</span><br><span class="line">                                                 value=<span class="string">&quot;.//div[@class=&#x27;job-card-right&#x27;]/div[@class=&#x27;company-info&#x27;]/ul[@class=&#x27;company-tag-list&#x27;]/li&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(companyInfos) == <span class="number">3</span>:</span><br><span class="line">                    <span class="comment"># companyNature</span></span><br><span class="line">                    companyNature = companyInfos[<span class="number">0</span>].text</span><br><span class="line">                    <span class="comment"># companyStatus</span></span><br><span class="line">                    companyStatus = companyInfos[<span class="number">1</span>].text</span><br><span class="line">                    <span class="comment"># companyPeople</span></span><br><span class="line">                    companyPeoples = companyInfos[<span class="number">2</span>].text</span><br><span class="line">                    <span class="keyword">if</span> companyPeoples != <span class="string">&quot;10000人以上&quot;</span>:</span><br><span class="line">                        companyPeople = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x, companyInfos[<span class="number">2</span>].text.replace(<span class="string">&#x27;人&#x27;</span>, <span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;-&#x27;</span>)))</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        companyPeople = [<span class="number">0</span>, <span class="number">10000</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># companyNature</span></span><br><span class="line">                    companyNature = companyInfos[<span class="number">0</span>].text</span><br><span class="line">                    <span class="comment"># companyStatus</span></span><br><span class="line">                    companyStatus = <span class="string">&#x27;未融资&#x27;</span></span><br><span class="line">                    <span class="comment"># companyPeople</span></span><br><span class="line">                    companyPeoples = companyInfos[<span class="number">1</span>].text</span><br><span class="line">                    <span class="keyword">if</span> companyPeoples != <span class="string">&quot;10000人以上&quot;</span>:</span><br><span class="line">                        companyPeople = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x, companyInfos[<span class="number">1</span>].text.replace(<span class="string">&#x27;人&#x27;</span>, <span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;-&#x27;</span>)))</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        companyPeople = [<span class="number">0</span>, <span class="number">10000</span>]</span><br><span class="line"></span><br><span class="line">                <span class="comment"># companyTags</span></span><br><span class="line">                companyTags = job.find_element(by=By.XPATH,</span><br><span class="line">                                               value=<span class="string">&quot;./div[contains(@class,&#x27;job-card-footer&#x27;)]/div[@class=&#x27;info-desc&#x27;]&quot;</span>).text</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> companyTags:</span><br><span class="line">                    companyTags = <span class="string">&#x27;无&#x27;</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    companyTags = json.dumps(companyTags.split(<span class="string">&#x27;，&#x27;</span>))</span><br><span class="line"></span><br><span class="line">                <span class="comment"># detailUr</span></span><br><span class="line">                detailUrl = job.find_element(by=By.XPATH,</span><br><span class="line">                                             value=<span class="string">&quot;.//a[@class=&#x27;job-card-left&#x27;]&quot;</span>).get_attribute(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">                <span class="comment"># companyUr</span></span><br><span class="line">                companyUrl = job.find_element(by=By.XPATH,</span><br><span class="line">                                              value=<span class="string">&quot;.//div[@class=&#x27;job-card-right&#x27;]/div[@class=&#x27;company-info&#x27;]/h3/a&quot;</span>).get_attribute(</span><br><span class="line">                    <span class="string">&#x27;href&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                jobData.append(title)</span><br><span class="line">                jobData.append(address)</span><br><span class="line">                jobData.append(<span class="built_in">type</span>)</span><br><span class="line">                jobData.append(educational)</span><br><span class="line">                jobData.append(workExperience)</span><br><span class="line">                jobData.append(workTag)</span><br><span class="line">                jobData.append(salary)</span><br><span class="line">                jobData.append(salaryMonth)</span><br><span class="line">                jobData.append(companyTags)</span><br><span class="line">                jobData.append(hrWork)</span><br><span class="line">                jobData.append(hrName)</span><br><span class="line">                jobData.append(pratice)</span><br><span class="line">                jobData.append(companyTitle)</span><br><span class="line">                jobData.append(companyAvatar)</span><br><span class="line">                jobData.append(companyNature)</span><br><span class="line">                jobData.append(companyStatus)</span><br><span class="line">                jobData.append(companyPeople)</span><br><span class="line">                jobData.append(detailUrl)</span><br><span class="line">                jobData.append(companyUrl)</span><br><span class="line">                jobData.append(dist)</span><br><span class="line"></span><br><span class="line">                <span class="variable language_">self</span>.save_to_csv(jobData)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.page += <span class="number">1</span>;</span><br><span class="line">        <span class="variable language_">self</span>.main(page)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">save_to_csv</span>(<span class="params">self, rowData</span>):</span><br><span class="line">        <span class="comment"># with open(&#x27;./temp1.csv&#x27;, &#x27;a&#x27;, newline=&#x27;&#x27;, encoding=&#x27;utf8&#x27;) as wf:</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./temp2.csv&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>, encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>) <span class="keyword">as</span> wf:</span><br><span class="line">            writer = csv.writer(wf)</span><br><span class="line">            writer.writerow(rowData)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">clear_csv</span>(<span class="params">self</span>):</span><br><span class="line">        df = pd.read_csv(<span class="string">&#x27;./temp2.csv&#x27;</span>)</span><br><span class="line">        df.dropna(inplace=<span class="literal">True</span>)</span><br><span class="line">        df.drop_duplicates(inplace=<span class="literal">True</span>)</span><br><span class="line">        df[<span class="string">&#x27;salaryMonth&#x27;</span>] = df[<span class="string">&#x27;salaryMonth&#x27;</span>].<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x.replace(<span class="string">&#x27;薪&#x27;</span>, <span class="string">&#x27;&#x27;</span>))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;总数为%d&quot;</span> % df.shape[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span> df.values</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">save_to_sql</span>(<span class="params">self</span>):</span><br><span class="line">        data = <span class="variable language_">self</span>.clear_csv()</span><br><span class="line">        <span class="keyword">for</span> job <span class="keyword">in</span> data:</span><br><span class="line">            JobInfo.objects.create(</span><br><span class="line">                title=job[<span class="number">0</span>],</span><br><span class="line">                address=job[<span class="number">1</span>],</span><br><span class="line">                <span class="built_in">type</span>=job[<span class="number">2</span>],</span><br><span class="line">                educational=job[<span class="number">3</span>],</span><br><span class="line">                workExperience=job[<span class="number">4</span>],</span><br><span class="line">                workTag=job[<span class="number">5</span>],</span><br><span class="line">                salary=job[<span class="number">6</span>],</span><br><span class="line">                salaryMonth=job[<span class="number">7</span>],</span><br><span class="line">                companyTags=job[<span class="number">8</span>],</span><br><span class="line">                hrWork=job[<span class="number">9</span>],</span><br><span class="line">                hrName=job[<span class="number">10</span>],</span><br><span class="line">                pratice=job[<span class="number">11</span>],</span><br><span class="line">                companyTitle=job[<span class="number">12</span>],</span><br><span class="line">                companyAvatar=job[<span class="number">13</span>],</span><br><span class="line">                companyNature=job[<span class="number">14</span>],</span><br><span class="line">                companyStatus=job[<span class="number">15</span>],</span><br><span class="line">                companyPeople=job[<span class="number">16</span>],</span><br><span class="line">                detailUrl=job[<span class="number">17</span>],</span><br><span class="line">                companyUrl=job[<span class="number">18</span>],</span><br><span class="line">                dist=job[<span class="number">19</span>]</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">init</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&quot;./temp2.csv&quot;</span>):</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./temp2.csv&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>, encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> wf:</span><br><span class="line">                writer = csv.writer(wf)</span><br><span class="line">                writer.writerow(</span><br><span class="line">                    [<span class="string">&quot;title&quot;</span>, <span class="string">&quot;address&quot;</span>, <span class="string">&quot;type&quot;</span>, <span class="string">&quot;educational&quot;</span>, <span class="string">&quot;workExperience&quot;</span>, <span class="string">&quot;workTag&quot;</span>, <span class="string">&quot;salary&quot;</span>, <span class="string">&quot;salaryMonth&quot;</span></span><br><span class="line">                        , <span class="string">&quot;companyTags&quot;</span>, <span class="string">&quot;hrWork&quot;</span>, <span class="string">&quot;hrName&quot;</span>, <span class="string">&quot;pratice&quot;</span>, <span class="string">&quot;companyTitle&quot;</span>, <span class="string">&quot;companyAvatar&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;companyNature&quot;</span>, <span class="string">&quot;companyStatus&quot;</span>, <span class="string">&quot;companyPeople&quot;</span>, <span class="string">&quot;detailUrl&quot;</span>, <span class="string">&quot;companyUrl&quot;</span>, <span class="string">&quot;dist&quot;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># JobInfo.objects.all()</span></span><br><span class="line">    <span class="comment"># keywords = [&quot;python爬虫&quot;, &quot;python后端&quot;, &quot;python大数据&quot;, &quot;python数据分析&quot;,&quot;AI&quot;,&quot;python&quot;]</span></span><br><span class="line">    <span class="comment"># keywords = [&quot;运维&quot;, &quot;测试&quot;,&quot;机器学习&quot;,&quot;算法工程师&quot;]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># spiderObj = spider(&quot;机器学习&quot;,&quot;1&quot;)</span></span><br><span class="line">    spiderObj = spider(<span class="string">&quot;算法工程师&quot;</span>,<span class="string">&quot;1&quot;</span>)</span><br><span class="line">    <span class="comment"># spiderObj.init()</span></span><br><span class="line">    <span class="comment"># spiderObj.main(10)</span></span><br><span class="line">    spiderObj.save_to_sql()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 毕业设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法刷题01</title>
      <link href="/2025/02/03/2025_02/%E8%80%83%E7%A0%94%E5%A4%8D%E8%AF%95%E6%9C%BA%E8%AF%95%E5%88%B7%E9%A2%98/"/>
      <url>/2025/02/03/2025_02/%E8%80%83%E7%A0%94%E5%A4%8D%E8%AF%95%E6%9C%BA%E8%AF%95%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h2><details class="folding-tag" green><summary> 点击查看题目内容 </summary>              <div class='content'>              <p><strong>枚举——列出问题所有可能的情况，一个个的试验是否满足条件（暴力法）</strong></p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 计算机机试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“hexo博客生成博文出现‘out of memory’的问题”</title>
      <link href="/2025/01/31/2025_01/%E8%AE%B0%E5%BD%95%E6%96%87%E7%AB%A0%E8%BF%87%E5%A4%9A%E6%8F%90%E4%BA%A4%E5%A4%B1%E8%B4%A5/"/>
      <url>/2025/01/31/2025_01/%E8%AE%B0%E5%BD%95%E6%96%87%E7%AB%A0%E8%BF%87%E5%A4%9A%E6%8F%90%E4%BA%A4%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<p><strong>目前还没有遇见此问题，不知道此方法是否可行，目前我试了一下这个命令，不能运行，之后再试吧，偶然看到，记录一下此方法</strong></p><p>原文链接：<a href="https://blog.csdn.net/sihai12345/article/details/119122246">《hexo博客生成博文，当生成的文章数量超过1000时，耗尽所有内存资源后出现out of memory》</a></p><p>hexo博客文档：<a href="https://hexo.io/docs/troubleshooting#Process-Out-of-Memory">Troubleshooting</a></p><p><strong>问题</strong></p><p>当<code>hexo</code>生成博文的时候，你的文章数量超过1000、2000或3000时，就是文章数量很多时，会出现生成不了的情况，具体的错误是out of memory，具体的错误如下：</p><blockquote><p>ATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory</p></blockquote><p><strong>原因</strong></p><p>这个问题出现的主要原始还是在于<code>hexo</code>项目本身的问题，太耗资源了，虽说<code>hexo</code>一直在改进这方面的问题，但是，还是很慢，而且耗费资源很大，导致出现内存溢出。</p><p><strong>解决方法</strong><br>最后，分享一些解决方法，网上的那些增大<code>nodejs</code>的内存限制，这些都是没有用的，因为根本原因不在这里，就算你改了，还是可能报错，运气好可能ok，但是希望不大。</p><p>解决办法其实很简单，我查看hexo项目的时候发现，hexo在5.0之后就这个问题做了一些改进，在生成的时候采用限制并行执行数量的方法，避免出现内存溢出。</p><p>命令：在生成博客的时候，使用参数-c，代表生成博客时线程的数量吧，例如：</p><blockquote><p>hexo -g -c 8</p></blockquote><p>执行这个命令后，跟以往的输出有所不同，会实时的显示正在生成的静态文件，同时，不会出现内存溢出的问题。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>butterfly魔改教程（二）</title>
      <link href="/2025/01/24/2025_01/butterfly%E9%AD%94%E6%94%B9%E6%95%99%E7%A8%8B2/"/>
      <url>/2025/01/24/2025_01/butterfly%E9%AD%94%E6%94%B9%E6%95%99%E7%A8%8B2/</url>
      
        <content type="html"><![CDATA[<p><strong>魔改有风险，魔改需谨慎，一定要备份呀！！！</strong></p><h2 id="页面样式调节"><a href="#页面样式调节" class="headerlink" title="页面样式调节"></a>页面样式调节</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <p><strong>源文链接：</strong><a href="https://www.fomal.cc/posts/5389e93f.html">博客魔改教程总结(二)</a></p><p>这个教程是通过css样式调节各个页面透明度、模糊度（亚克力效果）、圆角、边框样式等，看起来会更加舒适。</p><ol><li>复制以下代码进去自定义的<code>custom.css</code>文件</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attr">--trans-light</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.88</span>);</span><br><span class="line">  <span class="attr">--trans-dark</span>: <span class="built_in">rgba</span>(<span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">0.88</span>);</span><br><span class="line">  <span class="attr">--border-style</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">169</span>, <span class="number">169</span>, <span class="number">169</span>);</span><br><span class="line">  <span class="attr">--backdrop-filter</span>: <span class="built_in">blur</span>(<span class="number">5px</span>) <span class="built_in">saturate</span>(<span class="number">150%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 首页文章卡片 */</span></span><br><span class="line"><span class="selector-id">#recent-posts</span> &gt; <span class="selector-class">.recent-post-item</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--trans-light);</span><br><span class="line">  <span class="attribute">backdrop-filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--border-style);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 首页侧栏卡片 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--trans-light);</span><br><span class="line">  <span class="attribute">backdrop-filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--border-style);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 文章页、归档页、普通页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#post</span>,</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#page</span>,</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#archive</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--trans-light);</span><br><span class="line">  <span class="attribute">backdrop-filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--border-style);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 导航栏 */</span></span><br><span class="line"><span class="selector-id">#page-header</span><span class="selector-class">.nav-fixed</span> <span class="selector-id">#nav</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.75</span>);</span><br><span class="line">  <span class="attribute">backdrop-filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#page-header</span><span class="selector-class">.nav-fixed</span> <span class="selector-id">#nav</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.7</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 夜间模式遮罩 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#recent-posts</span> &gt; <span class="selector-class">.recent-post-item</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">div</span><span class="selector-id">#post</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">div</span><span class="selector-id">#archive</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">div</span><span class="selector-id">#page</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--trans-dark);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 阅读模式 */</span></span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#post</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 夜间模式下的阅读模式 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.read-mode</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">0.9</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#post</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">0.9</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>参数说明：</p><ul><li><p><code>--trans-light</code>：白天模式带透明度的背景色，如<code>rgba(255, 255, 255, 0.88)</code>底色是纯白色，其中0.88就透明度，在0-1之间调节，值越大越不透明；</p></li><li><p><code>--trans-dark</code>: 夜间模式带透明度的背景色，如<code>rgba(25, 25, 25, 0.88)</code>底色是柔和黑色，其中0.88就透明度，在0-1之间调节，值越大越不透明;</p></li><li><p><code>--border-style</code>: 边框样式，<code>1px solid rgb(169, 169, 169)</code>指宽度为1px的灰色实体边框;</p></li><li><p><code>--backdrop-filter</code>: 背景过滤器，如<code>blur(5px) saturate(150%)</code>表示饱和度为150%的、高斯模糊半径为5px的过滤器，这是亚克力效果的一种实现方法;</p></li><li><p>大家可以根据自己喜好进行调节，不用拘泥于我的样式！</p></li></ul></li><li><p>记住在主题配置文件<code>_config.butterfly.yml</code>的<code>inject</code>配置项中引入该css文件：</p></li></ol><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inject: </span><br><span class="line">  head: </span><br><span class="line"><span class="addition">+    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/custom.css&quot;&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>重启项目即可看见效果：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="博客宽屏适配（暂时使用）"><a href="#博客宽屏适配（暂时使用）" class="headerlink" title="博客宽屏适配（暂时使用）"></a>博客宽屏适配（暂时使用）</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <p>宽屏适配我修改后导致了<code>echarts</code>统计图图表变形，图表一会儿显示正常一会不正常，没有找到解决办法，暂时使用</p><p><strong>源文链接：</strong><a href="https://www.fomal.cc/posts/d739261b.html">博客魔改教程总结(四)</a></p><ol><li>在<code>custom.css</code>中加入以下样式：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 全局宽度 */</span></span><br><span class="line"><span class="selector-class">.layout</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">1400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 侧边卡片栏宽度 */</span></span><br><span class="line"><span class="selector-class">.aside-content</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">318px</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 平板尺寸自适应(不启用侧边栏宽度限制) */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">900px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.aside-content</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: none <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不想再非首页的地方显示侧边栏，那就需要给非首页的页面加上标记，<code>修改 [BlogRoot]\themes\butterfly\layout\includes\layout.pug</code>为以下内容：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> - var htmlClassHideAside = theme.aside.enable &amp;&amp; theme.aside.hide ? &#x27;hide-aside&#x27; : &#x27;&#x27;</span><br><span class="line"> - page.aside = is_archive() ? theme.aside.display.archive: is_category() ? theme.aside.display.category : is_tag() ? theme.aside.display.tag : page.aside</span><br><span class="line"> - var hideAside = !theme.aside.enable || page.aside <span class="comment">=== false ? &#x27;hide-aside&#x27; : &#x27;&#x27;</span></span><br><span class="line"><span class="deletion">- - var pageType = is_post() ? &#x27;post&#x27; : &#x27;page&#x27;</span></span><br><span class="line"><span class="addition">+ - var pageType = is_home() ? &#x27;page home&#x27; : is_post() ? &#x27;post&#x27; : &#x27;page&#x27;</span></span><br><span class="line"></span><br><span class="line">doctype html</span><br><span class="line">html(lang=config.language data-theme=theme.display_mode class=htmlClassHideAside)</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>或者直接用改好的pug（4.3.1可以食用）</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- var htmlClassHideAside = theme.aside.enable &amp;&amp; theme.aside.hide ? &#x27;hide-aside&#x27; : &#x27;&#x27;</span></span><br><span class="line"><span class="deletion">- page.aside = is_archive() ? theme.aside.display.archive: is_category() ? theme.aside.display.category : is_tag() ? theme.aside.display.tag : page.aside</span></span><br><span class="line"><span class="deletion">- var hideAside = !theme.aside.enable || page.aside === false ? &#x27;hide-aside&#x27; : &#x27;&#x27;</span></span><br><span class="line"><span class="deletion">- var pageType = is_home() ? &#x27;page home&#x27; : is_post() ? &#x27;post&#x27; : &#x27;page&#x27;</span></span><br><span class="line"></span><br><span class="line">doctype html</span><br><span class="line">html(lang=config.language data-theme=theme.display_mode class=htmlClassHideAside) </span><br><span class="line">  head</span><br><span class="line">    include ./head.pug</span><br><span class="line">  body</span><br><span class="line">    if theme.preloader.enable</span><br><span class="line">      !=partial(&#x27;includes/loading/loading&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">    - var DefaultBg = page.defaultbg ? page.defaultbg : theme.background.default</span><br><span class="line">    - var DDMBg = theme.background.darkmode ? theme.background.darkmode : DefaultBg</span><br><span class="line">    - var DarkmodeBg = page.darkmodebg ? page.darkmodebg : DDMBg</span><br><span class="line">    if theme.background</span><br><span class="line">      if page.background</span><br><span class="line">        #web_bg(style=`background:`+ page.background + `;background-attachment: local;background-position: center;background-size: cover;background-repeat: no-repeat;`)</span><br><span class="line">      else</span><br><span class="line">        #web_bg</span><br><span class="line"></span><br><span class="line">        if page.defaultbg || page.darkmodebg</span><br><span class="line">          style.</span><br><span class="line">            #web_bg&#123;</span><br><span class="line">              background: #&#123;DefaultBg&#125; !important;</span><br><span class="line">              background-attachment: local!important;</span><br><span class="line">              background-position: center!important;</span><br><span class="line">              background-size: cover!important;</span><br><span class="line">              background-repeat: no-repeat!important;</span><br><span class="line">            &#125;</span><br><span class="line">            [data-theme=&quot;dark&quot;]</span><br><span class="line">              #web_bg&#123;</span><br><span class="line">                background: #&#123;DarkmodeBg&#125; !important;</span><br><span class="line">                background-attachment: local!important;</span><br><span class="line">                background-position: center!important;</span><br><span class="line">                background-size: cover!important;</span><br><span class="line">                background-repeat: no-repeat!important;</span><br><span class="line">              &#125;      </span><br><span class="line"></span><br><span class="line">    !=partial(&#x27;includes/sidebar&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">    if page.type !== &#x27;404&#x27;</span><br><span class="line">      #body-wrap(class=pageType)</span><br><span class="line">        include ./header/index.pug</span><br><span class="line"></span><br><span class="line">        main#content-inner.layout(class=hideAside)</span><br><span class="line">          if body</span><br><span class="line">            div!= body</span><br><span class="line">          else</span><br><span class="line">            block content</span><br><span class="line">            if theme.aside.enable &amp;&amp; page.aside !== false</span><br><span class="line">              include widget/index.pug</span><br><span class="line"></span><br><span class="line">        - var footerBg = theme.footer_bg</span><br><span class="line">        if !is_post()</span><br><span class="line">          if (footerBg <span class="comment">=== true)</span></span><br><span class="line">            - var footer_bg = &#x27;background-color: transparent;&#x27;</span><br><span class="line">          else</span><br><span class="line">            - var footer_bg = &#x27;background-color: transparent;&#x27;</span><br><span class="line">        else</span><br><span class="line">          - var footer_bg = &#x27;background-color: transparent;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        footer#footer(style=footer_bg)</span><br><span class="line">          !=partial(&#x27;includes/footer&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">    else</span><br><span class="line">      include ./404.pug</span><br><span class="line"></span><br><span class="line">    include ./rightside.pug</span><br><span class="line">    !=partial(&#x27;includes/third-party/search/index&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">    !=partial(&#x27;includes/rightmenu&#x27;,&#123;&#125;, &#123;cache:true&#125;)</span><br><span class="line">    include ./additional-js.pug</span><br></pre></td></tr></table></figure><p>现在主页的class就变成<code>page home</code>了，我们再在<code>custom.css</code>加入如下css，主题就能智能区分主页和分页了，可以自动选择卡片显示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 除了首页以外其他页面隐藏卡片，并采用宽屏显示 */</span></span><br><span class="line"><span class="selector-id">#archive</span>,</span><br><span class="line"><span class="selector-id">#page</span>,</span><br><span class="line"><span class="selector-id">#category</span>,</span><br><span class="line"><span class="selector-id">#tag</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.page</span><span class="selector-class">.home</span>) <span class="selector-class">.aside-content</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启项目即可看到变更：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="Heo同款loading动画"><a href="#Heo同款loading动画" class="headerlink" title="Heo同款loading动画"></a>Heo同款loading动画</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <p>懒得完全搬过来了，查看<a href="https://blog.anheyu.com/posts/52d8.html">安知鱼-Heo同款loading动画</a></p><p><strong>butterfly 4.5 以上方案</strong></p><ol><li>将文件<code>themes/butterfly/layout/includes/loading/fullpage-loading.pug</code>替换为如下代码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#loading-box(onclick=&#x27;document.getElementById(&quot;loading-box&quot;).classList.add(&quot;loaded&quot;)&#x27;)</span><br><span class="line">  .loading-bg</span><br><span class="line">    div.loading-img</span><br><span class="line">    .loading-image-dot</span><br><span class="line"></span><br><span class="line">script.</span><br><span class="line">  const preloader = &#123;</span><br><span class="line">    endLoading: () =&gt; &#123;</span><br><span class="line">      document.body.style.overflow = &#x27;auto&#x27;;</span><br><span class="line">      document.getElementById(&#x27;loading-box&#x27;).classList.add(&quot;loaded&quot;)</span><br><span class="line">    &#125;,</span><br><span class="line">    initLoading: () =&gt; &#123;</span><br><span class="line">      document.body.style.overflow = &#x27;&#x27;;</span><br><span class="line">      document.getElementById(&#x27;loading-box&#x27;).classList.remove(&quot;loaded&quot;)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  window.addEventListener(&#x27;load&#x27;,()=&gt; &#123; preloader.endLoading() &#125;)</span><br><span class="line"></span><br><span class="line">  if (!&#123;theme.pjax &amp;&amp; theme.pjax.enable&#125;) &#123;</span><br><span class="line">    document.addEventListener(&#x27;pjax:send&#x27;, () =&gt; &#123; preloader.initLoading() &#125;)</span><br><span class="line">    document.addEventListener(&#x27;pjax:complete&#x27;, () =&gt; &#123; preloader.endLoading() &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>修改<code>themes/butterfly/layout/includes/loading/index.pug</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if theme.preloader.source === 1</span><br><span class="line">  include ./fullpage-loading.pug</span><br><span class="line">else if theme.preloader.source === 2</span><br><span class="line">  include ./pace.pug</span><br><span class="line">else</span><br><span class="line">  include ./fullpage-loading.pug</span><br><span class="line">  include ./pace.pug</span><br></pre></td></tr></table></figure><ol start="3"><li>新建<code>source/css/progress_bar.css</code>, 也可以不做这一步下面配置文件<code>pace_css_url</code>这一项就要留空, 这一步是修改 pace 加载的胶囊 💊 样式用的</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.pace</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  -webkit-<span class="attribute">user-select</span>: none;</span><br><span class="line">  -moz-<span class="attribute">user-select</span>: none;</span><br><span class="line">  <span class="attribute">user-select</span>: none;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2000</span>;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">4rem</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#eaecf2</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#e3e8f7</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace-inactive</span> <span class="selector-class">.pace-progress</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span> ease-in;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span> <span class="selector-class">.pace-progress</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  -moz-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  -ms-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  -o-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  -moz-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  -ms-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  -o-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2000</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(-<span class="number">45deg</span>, <span class="number">#ee7752</span>, <span class="number">#e73c7e</span>, <span class="number">#23a6d5</span>, <span class="number">#23d5ab</span>);</span><br><span class="line">  <span class="attribute">animation</span>: gradient <span class="number">1.5s</span> ease infinite;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">200%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span><span class="selector-class">.pace-inactive</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>替换<code>themes/butterfly/source/css/_layout/loading.styl</code>为如下代码, 注意其中颜色代码<code>--anzhiyu-card-bg</code>等需自行替换为自己的色值。</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;preloader&#x27;</span>)</span><br><span class="line">  <span class="selector-class">.loading-bg</span></span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--anzhiyu-card-bg);</span><br><span class="line">    <span class="comment">//background: rgba(255, 255, 255, 0.9) // 我的配置方案（白天模式，黑夜模式见下面第7点）</span></span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1001</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#loading-box</span></span><br><span class="line">    <span class="selector-class">.loading-img</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">margin</span>: auto;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">4px</span> solid <span class="number">#f0f0f2</span>;</span><br><span class="line">      <span class="attribute">animation-duration</span>: .<span class="number">3s</span>;</span><br><span class="line">      <span class="attribute">animation-name</span>: loadingAction;</span><br><span class="line">      <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">      <span class="attribute">animation-direction</span>: alternate;</span><br><span class="line">    <span class="selector-class">.loading-image-dot</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">      <span class="attribute">background</span>: <span class="number">#6bdf8f</span>;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">6px</span> solid <span class="number">#fff</span>;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">18px</span>, <span class="number">24px</span>);</span><br><span class="line">    &amp;<span class="selector-class">.loaded</span></span><br><span class="line">      <span class="selector-class">.loading-bg</span></span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">z-index</span>: -<span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@keyframes</span> loadingAction</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">opacity</span>: .<span class="number">4</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>在合适的地方加上自定义 css, 其中 <code>background </code>的 <code>url 即为 loading 的图片地址</code>。我加在了<code>progress_bar.css</code>中</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.loading-img</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://npm.elemecdn.com/anzhiyu-blog@2.1.1/img/avatar.webp</span>) no-repeat center center;</span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>最后修改<code>_config.butterfly.yml</code>中<code>preloader</code>选项, 改完以后<code>source: 1</code>为满屏加载无<code>pace胶囊</code>,<code>source: 2</code>为<code>pace胶囊</code>无满屏动画, <code>source: 3</code>是两者都启用。</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Loading Animation (加载动画)</span></span><br><span class="line"><span class="attr">preloader:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source</span></span><br><span class="line">  <span class="comment"># 1. fullpage-loading</span></span><br><span class="line">  <span class="comment"># 2. pace (progress bar)</span></span><br><span class="line">  <span class="comment"># else all</span></span><br><span class="line">  <span class="attr">source:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># pace theme (see https://codebyzach.github.io/pace/)</span></span><br><span class="line">  <span class="attr">pace_css_url:</span> <span class="string">/css/progress_bar.css</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="comment"># 自定义头像</span></span><br></pre></td></tr></table></figure><ol start="7"><li>为了使得黑夜模式的加载动画背景为黑色，在<code>source/config/css/custom.css</code>文集中加入</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*--------加载动画-------------*/</span></span><br><span class="line"><span class="comment">/* 深色模式背景 */</span></span><br><span class="line"><span class="selector-tag">html</span><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.loading-bg</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.85</span>) <span class="meta">!important</span>; <span class="comment">/* 深色模式背景 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>别忘了在<code>_config.butterfly.yml</code>文件中的<code>inject</code>中引入<code>progress_bar.css</code></strong></p>              </div>            </details><h2 id="Twikoo评论系统的实现"><a href="#Twikoo评论系统的实现" class="headerlink" title="Twikoo评论系统的实现"></a>Twikoo评论系统的实现</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <h3 id="部署方法："><a href="#部署方法：" class="headerlink" title="部署方法："></a>部署方法：</h3><p>直接查看此教程下面的<strong>参考文字教程和参考视频教程</strong>，比我讲的好，而且清晰明了建议看<code>Twikoo Vercel 部署教程</code>这个官方视频</p><h3 id="Twikoo评论失败问题："><a href="#Twikoo评论失败问题：" class="headerlink" title="Twikoo评论失败问题："></a>Twikoo评论失败问题：</h3><p><strong>写在前面</strong>：</p><p>由于<code>Vercel</code>的域名被墙，这会导致大陆IP用户无法评论。</p><p><strong>前提条件</strong>：</p><ul><li>用<code>Vercel</code>部署了<code>Twikoo</code>评论系统</li><li>一个自己的注册域名</li></ul><p><strong>1. 在<code>Vercel</code>添加子域名</strong></p><p>进入<code>Vercel</code>的<code>twikoo</code>项目后，点击<code>Settings - Domains</code>，在窗口里输入一个子域名（不要加http前缀）。这里我选择用<code>twikoo.thirdshire.com</code>作为我的子域名。</p><p><img src="https://thirdshire.com/vercel-custom-subdomain/vercel_custom_domain_entry.png" alt="添加子域名"></p><p>点击Add添加之后，<code> Vercel</code>会显示配置错误如下，并提示需要在DNS服务商处添加一条DNS记录。</p><p><img src="https://thirdshire.com/vercel-custom-subdomain/vercel_custom_domain_dns.png" alt="添加DNS记录提示"></p><p><strong>2. 为域名添加DNS记录</strong></p><p>DNS服务商就是给网站添加各种<code>A record/CNAME record</code>的地方。我使用的是阿里云域名解析，找到添加DNS记录的地方，新建一条<code>DNS 解析记录</code>，内容就按照上面<code>Vercel</code>提示的添加即可。</p><p><strong>3. 确认配置成功</strong></p><p>添加完DNS记录之后，回到<code>Vercel</code>并刷新界面。看到下面这个界面，就显示DNS已经配置成功了。</p><p><img src="https://thirdshire.com/vercel-custom-subdomain/vercel_custom_domain_success.png" alt="子域名配置成功"></p><p>想要进一步确认的话，可以点击进入这个子域名，如果网站显示<code>“Twikoo 云函数运行正常”</code>，就说明这个子域名可以用来当作<code>Twikoo</code>的入口啦。</p><p><strong>4. 更新Twikoo设置</strong></p><p>进入博客的配置文件，把博客文件的<code>Twikoo</code>设置里<code>envID</code>的链接替换成上面配置好的子域名。具体方法可以参考<a href="https://www.ccjinblog.info/2025/01/20/butterfly%E9%AD%94%E6%94%B9%E6%95%99%E7%A8%8B1/">butterfly魔改教程（一）中的gitalk评论设置</a></p><p><strong>这样配置完之后，国内用户也可以在<code>Twikoo</code>里面评论了～</strong></p><h3 id="Twikoo-找回暗号及密码："><a href="#Twikoo-找回暗号及密码：" class="headerlink" title="Twikoo 找回暗号及密码："></a>Twikoo 找回暗号及密码：</h3><p>打开你在部署方法阶段建立的<code>MongoDB</code>数据库进入页面后按照如下图步骤一次点击找到config，手动删除其中”5”指向的<code>ADMIN_PASS</code> 密码，重新登录 twikoo 就可以重新配置密码了</p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250125221959308.webp" alt="image-20250125221238848"></p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250125221959309.webp" alt="image-20250125221348927"></p><blockquote><p>参考文章：</p><ul><li><a href="https://www.zeker.top/posts/bb3290a1/">Twikoo 找回暗号及密码</a></li><li><a href="https://thirdshire.com/vercel-custom-subdomain/">解决Vercel被墙导致Twikoo无法评论的问题：在Vercel添加子域名</a></li></ul><p>参考文字教程：</p><ul><li><a href="https://twikoo.js.org/quick-start.html#%E9%92%88%E5%AF%B9-vercel-%E9%83%A8%E7%BD%B2%E7%9A%84%E6%9B%B4%E6%96%B0%E6%96%B9%E5%BC%8F">官方：Twikoo文档-针对Vercel的部署</a></li></ul><p>视频教程：</p><ul><li><a href="https://www.bilibili.com/video/BV1Fh411e7ZH/">Twikoo Vercel 部署教程</a></li><li><a href="https://www.bilibili.com/video/BV1Re4y1H7g8/">安知鱼：23.butterfly配置twikoo评论系统</a></li></ul></blockquote>              </div>            </details><h2 id="公告栏文字样式"><a href="#公告栏文字样式" class="headerlink" title="公告栏文字样式"></a>公告栏文字样式</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <p>其实就是普通的<code>html</code>在主题配置文件<code>_config.butterfly.yml</code>中写入如下配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">card_announcement:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">&lt;center&gt;&lt;b&gt;---</span> <span class="string">主域名</span> <span class="string">---&lt;br&gt;&lt;a</span> <span class="string">href=&quot;https://www.ccjinblog.info&quot;</span> <span class="string">title=&quot;此线路部署于阿里云轻量级服务器&quot;</span> <span class="string">class=&quot;anno_content&quot;&gt;&lt;font</span> <span class="string">color=&quot;#5ea6e5&quot;&gt;ccjinblog.info&lt;/font&gt;&lt;/a&gt;&lt;br&gt;---</span> <span class="string">备用域名</span> <span class="string">---&lt;br&gt;&lt;a</span> <span class="string">href=&quot;https://www.ccjinblog.top&quot;</span> <span class="string">title=&quot;此线路部署于Vercel&quot;</span> <span class="string">class=&quot;anno_content&quot;&gt;&lt;font</span> <span class="string">color=&quot;#5ea6e5&quot;&gt;ccjinblog.top&lt;/font&gt;&lt;/a&gt;&lt;/b&gt;&lt;/center&gt;</span></span><br></pre></td></tr></table></figure><p>参考写法：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">card_announcement:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">&lt;center&gt;&lt;b&gt;---</span> <span class="string">主域名</span> <span class="string">---&lt;br&gt;&lt;a</span> <span class="string">href=&quot;https://www.fomal.cc&quot;</span> <span class="string">title=&quot;此线路部署于Vercel&quot;</span> <span class="string">class=&quot;anno_content&quot;&gt;&lt;font</span> <span class="string">color=&quot;#5ea6e5&quot;&gt;fomal.cc&lt;/font&gt;&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a</span> <span class="string">href=&quot;https://www.fomal.cn&quot;</span> <span class="string">title=&quot;此线路部署于Vercel&quot;</span> <span class="string">class=&quot;anno_content&quot;&gt;&lt;font</span> <span class="string">color=&quot;#5ea6e5&quot;&gt;fomal.cn&lt;/font&gt;&lt;/a&gt;&lt;br&gt;---</span> <span class="string">备用域名</span> <span class="string">---&lt;br&gt;&lt;a</span> <span class="string">href=&quot;https://netlify.fomal.cc&quot;</span> <span class="string">title=&quot;此线路部署于Netlify&quot;</span> <span class="string">class=&quot;anno_content&quot;&gt;&lt;font</span> <span class="string">color=&quot;#5ea6e5&quot;&gt;netlify.fomal.cc&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a</span> <span class="string">href=&quot;https://cloudflare.fomal.cc&quot;</span> <span class="string">title=&quot;此线路部署于Cloudflare&quot;</span> <span class="string">class=&quot;anno_content&quot;&gt;&lt;font</span> <span class="string">color=&quot;#5ea6e5&quot;&gt;cloudflare.fomal.cc&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a</span> <span class="string">href=&quot;https://railway.fomal.cc&quot;</span> <span class="string">title=&quot;此线路部署于Railway&quot;</span> <span class="string">class=&quot;anno_content&quot;&gt;&lt;font</span> <span class="string">color=&quot;#5ea6e5&quot;&gt;railway.fomal.cc&lt;/font&gt;&lt;/a&gt;&lt;br&gt;---</span> <span class="string">网站安卓APP</span> <span class="string">---&lt;br&gt;🍧&lt;a</span> <span class="string">href=&quot;https://sourcebucket.s3.ladydaily.com/Fomalhaut.apk&quot;</span> <span class="string">title=&quot;点这里可以下载网站的安卓APP&quot;</span> <span class="string">class=&quot;anno_content&quot;&gt;&lt;font</span> <span class="string">color=&quot;#5ea6e5&quot;&gt;点此下载&lt;/font&gt;&lt;/a&gt;🍧&lt;/b&gt;&lt;/center&gt;</span></span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="添加fps显示-LYX"><a href="#添加fps显示-LYX" class="headerlink" title="添加fps显示(LYX)"></a>添加fps显示(LYX)</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <div class="hide-block"><button type="button" class="hide-button" style="">预览效果    </button><div class="hide-content"><p><img src="https://tuchuang.voooe.cn/images/2022/12/30/image-13.webp" alt="fps"></p></div></div><ol><li>新建文件<code>[BlogRoot]\source\config\js\fps.js</code>并写入如下代码：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;fpson&quot;</span>) == <span class="literal">undefined</span> || <span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;fpson&quot;</span>) == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> rAF = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">requestAnimationFrame</span> ||</span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">webkitRequestAnimationFrame</span> ||</span><br><span class="line">            <span class="keyword">function</span> (<span class="params">callback</span>) &#123;</span><br><span class="line">                <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(callback, <span class="number">1000</span> / <span class="number">60</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;();</span><br><span class="line">    <span class="keyword">var</span> frame = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> allFrameCount = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> lastTime = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">    <span class="keyword">var</span> lastFameTime = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">    <span class="keyword">var</span> loop = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> now = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">        <span class="keyword">var</span> fs = (now - lastFameTime);</span><br><span class="line">        <span class="keyword">var</span> fps = <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">1000</span> / fs);</span><br><span class="line"></span><br><span class="line">        lastFameTime = now;</span><br><span class="line">        <span class="comment">// 不置 0，在动画的开头及结尾记录此值的差值算出 FPS</span></span><br><span class="line">        allFrameCount++;</span><br><span class="line">        frame++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (now &gt; <span class="number">1000</span> + lastTime) &#123;</span><br><span class="line">            <span class="keyword">var</span> fps = <span class="title class_">Math</span>.<span class="title function_">round</span>((frame * <span class="number">1000</span>) / (now - lastTime));</span><br><span class="line">            <span class="keyword">if</span> (fps &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> kd = <span class="string">`&lt;span style=&quot;color:#bd0000&quot;&gt;卡成ppt🤢&lt;/span&gt;`</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fps &lt;= <span class="number">15</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> kd = <span class="string">`&lt;span style=&quot;color:red&quot;&gt;电竞级帧率😖&lt;/span&gt;`</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fps &lt;= <span class="number">25</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> kd = <span class="string">`&lt;span style=&quot;color:orange&quot;&gt;有点难受😨&lt;/span&gt;`</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fps &lt; <span class="number">35</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> kd = <span class="string">`&lt;span style=&quot;color:#9338e6&quot;&gt;不太流畅🙄&lt;/span&gt;`</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fps &lt;= <span class="number">45</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> kd = <span class="string">`&lt;span style=&quot;color:#08b7e4&quot;&gt;还不错哦😁&lt;/span&gt;`</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> kd = <span class="string">`&lt;span style=&quot;color:#39c5bb&quot;&gt;十分流畅🤣&lt;/span&gt;`</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;fps&quot;</span>).<span class="property">innerHTML</span> = <span class="string">`FPS:<span class="subst">$&#123;fps&#125;</span> <span class="subst">$&#123;kd&#125;</span>`</span>;</span><br><span class="line">            frame = <span class="number">0</span>;</span><br><span class="line">            lastTime = now;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="title function_">rAF</span>(loop);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">loop</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;fps&quot;</span>).<span class="property">style</span> = <span class="string">&quot;display:none!important&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在自定义样式文件<code>custom.css</code>中加入如下代码，我这里让这块东西在左下角，你可以自己指定位置，其中<code>backdrop-filter</code>过滤器也可以自己指定，也可以不要：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 帧率检测 */</span></span><br><span class="line"><span class="selector-id">#fps</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="comment">/* 指定位置 */</span></span><br><span class="line">  <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1919810</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;light&quot;</span>]</span> <span class="selector-id">#fps</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.85</span>);</span><br><span class="line">  <span class="attribute">backdrop-filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#fps</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.72</span>);</span><br><span class="line">  <span class="attribute">backdrop-filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在主题配置文件<code>_config.butterfly.yml</code>文件中加入以下代码：</li></ol><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject: </span><br><span class="line">  head: </span><br><span class="line"><span class="addition">+    - &lt;span id=&quot;fps&quot;&gt;&lt;/span&gt; # 帧率检测</span></span><br><span class="line">  bottom: </span><br><span class="line"><span class="addition">+    - &lt;script async src=&quot;/js/fps.js&quot;&gt;&lt;/script&gt; # 帧率检测</span></span><br></pre></td></tr></table></figure><ol start="4"><li>重启项目看看角落有没有出现帧率块</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="Live2D教程（店长）"><a href="#Live2D教程（店长）" class="headerlink" title="Live2D教程（店长）"></a>Live2D教程（店长）</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <p>目前只推荐这个(因为消耗资源较少)，这是博客自带的看板娘，这孩子不会说话也不能换装，只会跟着你的鼠标晃动脑袋，不过有几款超可爱。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>在<code>Hexo</code>根目录<code>[BlogRoot]</code>下打开终端，输入以下指令安装必要插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure></li><li><p>打开站点配置文件<code>[BlogRoot]\config.yml</code><br>搜索live2d,按照如下注释内容指示进行操作。<br>如果没有搜到live2d的配置项，就直接把以下内容复制到最底部。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#开关插件版看板娘</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://npm.elemecdn.com/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-wanko</span> <span class="comment"># npm-module package name</span></span><br><span class="line">    <span class="comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://npm.elemecdn.com/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span> <span class="comment">#控制看板娘位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span> <span class="comment">#控制看板娘大小</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span> <span class="comment">#控制看板娘大小</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span> <span class="comment"># 手机中是否展示</span></span><br></pre></td></tr></table></figure></li><li><p>完成后保存修改，在Hexo根目录下运行指令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>之所以必须要使用<code>hexo clean</code>是因为我们需要清空缓存重新生成静态页面，不然看板娘没被加入生成的静态页面里，是不会出现的。</p></li></ol><h3 id="更换"><a href="#更换" class="headerlink" title="更换"></a>更换</h3><ol><li><p>同样是在<code>Hexo</code>根目录<code>[BlogRoot]</code>下，打开终端，选择想要的看板娘进行安装，例如我这里用到的是 <code>live2d-widget-model-koharu</code>，一个Q版小正太。其他的模型也可以在<a href="https://huaji8.top/post/live2d-plugin-2.0/">模型预览</a>里查看以供选择。</p></li><li><p>输入指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save live2d-widget-model-koharu</span><br></pre></td></tr></table></figure></li><li><p>然后在站点配置文件<code>[BlogRoot]\_config.yml</code>里找到<code>model</code>项修改为期望的模型</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">model:</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">live2d-widget-model-koharu</span></span><br><span class="line">  <span class="comment"># 默认为live2d-widget-model-wanko</span></span><br></pre></td></tr></table></figure></li><li><p>之后按部就班的运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>就能在<code>localhost:4000</code>上查看效果了。</p></li></ol><h3 id="卸载看板娘"><a href="#卸载看板娘" class="headerlink" title="卸载看板娘"></a>卸载看板娘</h3><p>卸载插件和卸载模型的指令都是通过<code>npm</code>进行操作的。在博客根目录<code>[BlogRoot]</code>打开终端，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm uninstall hexo-helper-live2d <span class="comment">#卸载看板娘插件</span></span><br><span class="line">npm uninstall live2d-widget-model-modelname <span class="comment">#卸载看板娘模型。记得替换modelname为看板娘名称</span></span><br></pre></td></tr></table></figure><p>卸载后为了保证配置项不出错，记得把<code>[BlogRoot]\_config.yml</code>里的配置项给注释或者删除掉。</p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> butterfly魔改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站性能优化的一些小技巧</title>
      <link href="/2025/01/23/2025_01/%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2025/01/23/2025_01/%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="优化小技巧实操"><a href="#优化小技巧实操" class="headerlink" title="优化小技巧实操"></a>优化小技巧实操</h1><h2 id="1-图片压缩"><a href="#1-图片压缩" class="headerlink" title="1. 图片压缩"></a>1. 图片压缩</h2><p><strong>原文链接：</strong><a href="https://www.fomal.cc/posts/b48804d5.html">网站性能优化的一些小技巧</a></p><h3 id="1-1-图片多级压缩"><a href="#1-1-图片多级压缩" class="headerlink" title="1.1 图片多级压缩"></a>1.1 图片多级压缩</h3><p>目前从网上下载的图片主流格式是<code>JPG</code>或者<code>PNG</code>，当分辨率比较高的时候体积往往比较大，因此要想提高网站的速度就有必要将图片体积压缩，这里参考店长的推荐，无损压缩推荐<a href="https://tinypng.com/">Tinypng</a>，有损压缩推荐<a href="https://github.com/meowtec/Imagine/releases">imagine</a>。</p><table><thead><tr><th align="left"></th><th align="center">TinyPNG</th><th>Imagine</th></tr></thead><tbody><tr><td align="left">特点</td><td align="center">无损压缩</td><td>有损压缩，以牺牲图像质量， 降低图像色彩来达到缩减图像大小的目的。</td></tr><tr><td align="left">优点</td><td align="center">能够完全保留图像色彩，不损伤图像质量</td><td>1. 压缩程度高，支持转<code>png</code>为<code>jpg</code>或<code>webp</code>，进一步减少图片大小 2. 软件支持一次处理多张图片，无上限，处理完成支持直接批量覆盖原文件或重命名</td></tr><tr><td align="left">缺点</td><td align="center">单次仅能上传20张图片，每张限制大小为5MB，无法处理更大图片。</td><td>PNG转其他格式为不可逆操作（指覆盖保存后），且可能反而会增加图片大小。</td></tr></tbody></table><p>在这里还给大家推荐一个非常实用的网站：<a href="https://imagestool.com/zh_CN/index.html">imagesTool</a></p><p><img src="https://source.fomal.cc/siteshot/imagestool.com.jpg" alt="imagesTool"></p><p>这个网站不仅仅支持将<code>PNG</code>与<code>JPG</code>格式的图片批量（完全没有数量限制那种）转化为<code>webp</code>和<code>avif</code>（chrome推荐的一种压缩率更高的编码方式），而且还能改变图片的原始分辨率，甚至将图片压缩到指定的大小。</p><div class="note info simple"><p>我们选择了将<code>PNG</code>转化为<code>webp</code>格式，画质为<code>High</code>，图片规模缩小为<code>80%</code>，压缩率达到94%；而选择将<code>PNG</code>转化为<code>avif</code>格式，画质为<code>High</code>，图片规模缩小为<code>80%</code>，压缩率达到95%，这样下来我们可以把所有图片几乎都可以控制在<code>500KB</code>以下，而且肉眼观察画质没有明显的不同。</p></div><h3 id="1-2-图片懒加载"><a href="#1-2-图片懒加载" class="headerlink" title="1.2 图片懒加载"></a>1.2 图片懒加载</h3><p>图片懒加载是指只加载目前能看到及其附近的页面上的图片，有节省流量与提高性能的作用。Butterfly主题内置了图片懒加载的选项，在<code>_config.butterfly.yml</code>文件下将对应项设置为如下即可：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Lazyload (圖片懶加載)</span></span><br><span class="line"><span class="comment"># https://github.com/verlok/vanilla-lazyload</span></span><br><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># site/post 选择在哪些地方启用图片懒加载</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="comment"># 你自己喜欢的图片</span></span><br><span class="line">  <span class="attr">blur:</span> <span class="literal">true</span><span class="comment"># 模糊效果</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> butterfly魔改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly魔改 </tag>
            
            <tag> 网站优化技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>外挂标签相关用法</title>
      <link href="/2025/01/22/2025_01/%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE%E7%9B%B8%E5%85%B3%E7%94%A8%E6%B3%95/"/>
      <url>/2025/01/22/2025_01/%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE%E7%9B%B8%E5%85%B3%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="外挂标签-时间轴"><a href="#外挂标签-时间轴" class="headerlink" title="外挂标签-时间轴"></a>外挂标签-时间轴</h2><p>详细教程见：<a href="https://www.fomal.cc/posts/2013454d.html#2-10-%E9%93%BE%E6%8E%A5%E5%8D%A1%E7%89%87-link">Markdowwn语法与外挂标签写法汇总</a></p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">标签语法</button><button type="button" class="tab">配置参数</button><button type="button" class="tab">示例源码</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li><code>title</code>:标题&#x2F;时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) &#x2F; blue &#x2F; pink &#x2F; red &#x2F; purple &#x2F; orange &#x2F; green</li></ol></div><div class="tab-item-content"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h2><p>详细教程见：<a href="https://www.fomal.cc/posts/2013454d.html#2-10-%E9%93%BE%E6%8E%A5%E5%8D%A1%E7%89%87-link">Markdowwn语法与外挂标签写法汇总</a></p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">标签语法</button><button type="button" class="tab">配置参数</button><button type="button" class="tab">示例源码</button><button type="button" class="tab">渲染演示</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>Unique name :<ul><li>选项卡块标签的唯一名称，不带逗号。</li><li>将在#id中用作每个标签及其索引号的前缀。</li><li>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</li><li>仅当前帖子&#x2F;页面的URL必须是唯一的！</li></ul></li><li>[index]:<ul><li>活动选项卡的索引号。</li><li>如果未指定，将选择第一个标签（1）。</li><li>如果index为-1，则不会选择任何选项卡。</li><li>可选参数。</li></ul></li><li>[Tab caption]:<ul><li>当前选项卡的标题。</li><li>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</li><li>如果未指定标题，但指定了图标，则标题将为空。</li><li>可选参数。</li></ul></li><li>[@icon]:<ul><li>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</li><li>可以指定带空格或不带空格；</li><li>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</li><li>可选参数。</li></ul></li></ol></div><div class="tab-item-content"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">test1 1</button><button type="button" class="tab">test1 2</button><button type="button" class="tab">test1 3</button></div><div class="tab-contents"><div class="tab-item-content active"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> butterfly魔改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>butterfly魔改教程（一）</title>
      <link href="/2025/01/20/2025_01/butterfly%E9%AD%94%E6%94%B9%E6%95%99%E7%A8%8B1/"/>
      <url>/2025/01/20/2025_01/butterfly%E9%AD%94%E6%94%B9%E6%95%99%E7%A8%8B1/</url>
      
        <content type="html"><![CDATA[<p><strong>魔改有风险，魔改需谨慎，一定要备份呀！！！</strong></p><h2 id="说说页面的创建"><a href="#说说页面的创建" class="headerlink" title="说说页面的创建"></a>说说页面的创建</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <ol><li><p>前往你的<code>Hexo</code>的根目录</p></li><li><p>输入 <code>hexo new page shuoshuo</code></p></li><li><p>你会找到 <code>source/shuoshuo/index.md </code>这个文件</p></li></ol><p>修改这个文件：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 説説</span><br><span class="line">date: 2018-06-07 22:17:49</span><br><span class="line"><span class="section">type: &#x27;shuoshuo&#x27;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>你可以隐藏一些説説，可配置的参数：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">limit:</span><br><span class="line">  type: date</span><br><span class="line">  value: 2024-06-20</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>limit</td><td>【可选】配置説説显示数量</td></tr><tr><td>limit.type</td><td>【可选】配置説説显示数量的类型 （date 或者 num）</td></tr><tr><td>limit.value</td><td>【可选】配置説説显示数量的值 （当 type 配置为 date 时， value 的值必须为日期。当 type 配置为 num 时， value 的值必须为数字，且大于 0</td></tr></tbody></table><ol start="4"><li>为说说页面加入密码</li></ol><p>在GitBash 输入以下<code>npm install --save hexo-blog-encrypt</code></p><p><strong>使用方法：</strong></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">--- </span><br><span class="line">title: 测试- 为文章加密</span><br><span class="line">date: 2020/02/16 13：50 </span><br><span class="line">tags: </span><br><span class="line"><span class="bullet">    -</span> Hexo </span><br><span class="line"><span class="code">    -架站</span></span><br><span class="line"><span class="code">categories: [架站记录,技巧] </span></span><br><span class="line"><span class="code">password: test123 </span></span><br><span class="line"><span class="code">message: 试试加密，这篇的密码是test123 </span></span><br><span class="line"><span class="code">---</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">恭喜成功解密！</span><br><span class="line"></span><br><span class="line">这里是文章内容。</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><a href="https://www.fomal.cc/posts/2d7ac914.html">这里建议看Fomalhaut的文章</a></p>              </div>            </details><h2 id="文章页顶波浪线（安知鱼）"><a href="#文章页顶波浪线（安知鱼）" class="headerlink" title="文章页顶波浪线（安知鱼）"></a>文章页顶波浪线（安知鱼）</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <p>详见：<a href="https://anzhiy.cn/posts/98c4.html">butterfly文章顶部添加波浪效果</a></p><ol><li><p>修改 <code>[BlogRoor]\themes/butterfly/layout/includes/header/index.pug</code> 大概第 33 行左右</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">if top_img !== false</span><br><span class="line">  if is_post()</span><br><span class="line">    include ./post-info.pug</span><br><span class="line"><span class="addition">+   section.main-hero-waves-area.waves-area</span></span><br><span class="line"><span class="addition">+     svg.waves-svg(xmlns=&#x27;http://www.w3.org/2000/svg&#x27;, xlink=&#x27;http://www.w3.org/1999/xlink&#x27;, viewBox=&#x27;0 24 150 28&#x27;, preserveAspectRatio=&#x27;none&#x27;, shape-rendering=&#x27;auto&#x27;)</span></span><br><span class="line"><span class="addition">+       defs</span></span><br><span class="line"><span class="addition">+         path#gentle-wave(d=&#x27;M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z&#x27;)</span></span><br><span class="line"><span class="addition">+       g.parallax</span></span><br><span class="line"><span class="addition">+         use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;0&#x27;)</span></span><br><span class="line"><span class="addition">+         use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;3&#x27;)</span></span><br><span class="line"><span class="addition">+         use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;5&#x27;)</span></span><br><span class="line"><span class="addition">+         use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;7&#x27;)</span></span><br><span class="line">    #post-top-cover</span><br><span class="line">      img#post-top-bg(class=&#x27;nolazyload&#x27; src=bg_img)</span><br><span class="line">  else if is_home()</span><br><span class="line">    #site-info</span><br><span class="line">      h1#site-title=site_title</span><br><span class="line">      if theme.subtitle.enable</span><br></pre></td></tr></table></figure><p>为了方便复制，提供一份需要修改的部分:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">section.main-hero-waves-area.waves-area</span><br><span class="line">  svg.waves-svg(xmlns=&#x27;http://www.w3.org/2000/svg&#x27;, xlink=&#x27;http://www.w3.org/1999/xlink&#x27;, viewBox=&#x27;0 24 150 28&#x27;, preserveAspectRatio=&#x27;none&#x27;, shape-rendering=&#x27;auto&#x27;)</span><br><span class="line">    defs</span><br><span class="line">      path#gentle-wave(d=&#x27;M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z&#x27;)</span><br><span class="line">    g.parallax</span><br><span class="line">      use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;0&#x27;)</span><br><span class="line">      use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;3&#x27;)</span><br><span class="line">      use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;5&#x27;)</span><br><span class="line">      use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;7&#x27;)</span><br></pre></td></tr></table></figure></li><li><p>然后在<code>_config.butterfly.yml</code>的 <code>[inject.head]</code> 或者自定义 css 中 引入以下 css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 波浪css */</span></span><br><span class="line"><span class="selector-class">.main-hero-waves-area</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">11px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waves-area</span> <span class="selector-class">.waves-svg</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Animation */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: move-forever <span class="number">25s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.55</span>, <span class="number">0.5</span>, <span class="number">0.45</span>, <span class="number">0.5</span>) infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">2s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">7s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#f7f9febd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">10s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#f7f9fe82</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">4s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">13s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#f7f9fe36</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">5s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">20s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#f7f9fe</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 黑色模式背景 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">2s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">7s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#18171dc8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">10s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#18171d80</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">4s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">13s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#18171d3e</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">5s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">20s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#18171d</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> move-forever &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(-<span class="number">90px</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">85px</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*Shrinking for mobile*/</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.waves-area</span> <span class="selector-class">.waves-svg</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">40px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>需要注意的是 css 中<code>fill属性</code>可以控制波浪颜色，最好使其中一个颜色与背景颜色一致，否则会显的有点奇怪，然后就是重启项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><h2 id="文章标题居中显示"><a href="#文章标题居中显示" class="headerlink" title="文章标题居中显示"></a>文章标题居中显示</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <p>修改如下路径文件：<code>blogRoot\themes\butterfly\source\css\_layout\head.styl</code></p><p><strong>以下示例为将文章标题及其相关信息修改为居中显示</strong></p><p>该代码块在第100行左右</p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#post-info</span></span><br><span class="line">  <span class="attribute">position</span>: absolute</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">30px</span>  //文章信息距离文章块的高度.改为<span class="number">100px</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">8%</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">+ <span class="attribute">text-align</span>: center</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="gitalk评论系统"><a href="#gitalk评论系统" class="headerlink" title="gitalk评论系统"></a>gitalk评论系统</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <p>起初使用<code>Valine</code>，<code>Waline</code>，<code>Twikoo</code>方法进行评论系统的搭建，但是由于防火墙等原因都没有搭建成功，最后使用了<code>gitalk</code>搭建评论系统，现已经解决<code>Twikoo</code>因为<code>vercel</code>被墙导致的国内评论失败的问题。<code>twikoo</code>评论实现方式见 <a href="https://www.ccjinblog.info/2025/01/24/butterfly%E9%AD%94%E6%94%B9%E6%95%99%E7%A8%8B2/">butterfly魔改教程（二）</a>。</p><ol><li>进如自己的<code>github</code>，点击头像选择头像中的<code>setting</code>，点击最下面的<code>Developer Settings</code>，选择左侧的<code>OAuth Apps</code>-&gt;<code>New OAuth App</code></li></ol><p><strong>一定不要泄露自己的<code>Client ID</code>和<code>Client secrets</code>！！！</strong></p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250121124413219.png" alt="image-20250121123348266"></p><blockquote><p>Homepage URL格式：</p><p><code>https://github.com/&lt;your username&gt;/&lt;new  repository&gt;</code></p></blockquote><ol start="2"><li>创建一个<code>repository</code>，一定要设置为<code>public</code>，进入此项目，点击上方的<code>Issues</code>，添加一个名为<code>gitalk</code>的<code>Labels</code></li></ol><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250121124417569.png" alt="image-20250121122944560"> </p><blockquote><p>建议New 一个<code>issue</code>-绿色的按钮，防止出现<code>404 not found</code>的问题</p></blockquote><ol start="3"><li>在本地的博客根目录的<code>_config.butterfly.yml</code>文件修改如下内容：</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">gitalk</span></span><br><span class="line">  <span class="attr">text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_post_count:</span> <span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="string">&#x27;xxxxxxx&#x27;</span> <span class="comment"># Client ID</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="string">&#x27;xxxxxxxxxxx&#x27;</span> <span class="comment"># Client secrets</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&#x27;xxxxxxxxxx&#x27;</span>  <span class="comment"># 新建的 repository 名称</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="string">&#x27;xxxxxxxx&#x27;</span>   <span class="comment"># 用户名</span></span><br><span class="line">  <span class="attr">admin:</span> [<span class="string">&#x27;xxxxxxxxx&#x27;</span>] <span class="comment">#用户名</span></span><br><span class="line">  <span class="attr">option:</span></span><br></pre></td></tr></table></figure><blockquote><p>记住在<code>_config.butterfly.yml</code>文件不是<code>_config.yml</code>文件，否在会出现文章处可以评论，导航栏中的页面无法评论的问题</p></blockquote><ol start="4"><li>hexo三连</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><h3 id="遇见的问题："><a href="#遇见的问题：" class="headerlink" title="遇见的问题："></a>遇见的问题：</h3><p><code>gitalk</code>评论系统在过一段时间后会出现下图情况：</p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250123101833510.png" alt="gitalk评论未找到相关额Issues"></p><p>需要管理员（<code>gitalk</code>第一登录的账户，也是配置项中写的用户名）进行<code>issues</code>初始化，才可以进行评论。但是每次都由我的账户点进去一下会很麻烦。经过查询，可以通过脚本自动部署<code>issues</code>，但是其实在<code>_config.butterfly.yml</code>中的<code>gitalk</code>配置项中加入 <code>createIssueManually: false</code>即可实现每次提交到服务器自动部署<code>issues</code></p>              </div>            </details><h2 id="外挂标签的引入（店长）"><a href="#外挂标签的引入（店长）" class="headerlink" title="外挂标签的引入（店长）"></a>外挂标签的引入（店长）</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <p>懒得搬过来了，查看Fomalhaut🥝大佬的文章：</p><p><a href="https://www.fomal.cc/posts/5389e93f.html">外挂标签的引入（店长）</a></p><p>具体样式和写法可见：</p><p><a href="https://www.fomal.cc/posts/2013454d.html">Markdown语法与外挂标签写法汇总</a></p>              </div>            </details><h2 id="网站恶搞标题"><a href="#网站恶搞标题" class="headerlink" title="网站恶搞标题"></a>网站恶搞标题</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <ol><li>新建文件<code>[BlogRoot]\source\js\title.js</code>，写入以下内容：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态标题</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">OriginTitile</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">    <span class="comment">//离开当前页面时标签显示内容</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;👀跑哪里去了~&#x27;</span>;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//返回当前页面时标签显示内容</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;🐖抓到你啦～&#x27;</span>;</span><br><span class="line">    <span class="comment">//两秒后变回正常标题</span></span><br><span class="line">    titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitile</span>;</span><br><span class="line">    &#125;, <span class="number">2000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="2"><li>在主题配置文件<code>_config.butterfly.yml</code>引入该文件：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject</span>: </span><br><span class="line">  <span class="attr">bottom</span>: </span><br><span class="line">+    - <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;/js/title.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="3"><li>重启项目</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="首页轮播图的插入"><a href="#首页轮播图的插入" class="headerlink" title="首页轮播图的插入"></a>首页轮播图的插入</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <p>原文链接：<a href="https://akilar.top/posts/8e1264d1/">轮播图</a></p><details class="folding-tag" cyan><summary> 实现效果-图1 </summary>              <div class='content'>              <p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250122215700737.png" alt="image-20250122213228688"></p>              </div>            </details><ol><li>安装插件,在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-swiper --save</span><br></pre></td></tr></table></figure><ol start="2"><li>添加配置信息，以下为写法示例<br>在站点配置文件<code>_config.yml</code>或者主题配置文件<code>_config.butterfly.yml</code>中添加</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># hexo-butterfly-swiper</span><br><span class="line"># see https://akilar.top/posts/8e1264d1/</span><br><span class="line">swiper:</span><br><span class="line">  enable: true # 开关</span><br><span class="line">  priority: 5 #过滤器优先权</span><br><span class="line">  enable_page: all # 应用页面</span><br><span class="line">  timemode: date #date/updated</span><br><span class="line">  layout: # 挂载容器类型</span><br><span class="line">    type: id</span><br><span class="line">    name: recent-posts</span><br><span class="line">    index: 0</span><br><span class="line">  default_descr: 再怎么看我也不知道怎么描述它的啦！</span><br><span class="line">  swiper_css: https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.css #swiper css依赖</span><br><span class="line">  swiper_js: https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.js #swiper js依赖</span><br><span class="line">  custom_css: https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiperstyle.css # 适配主题样式补丁</span><br><span class="line">  custom_js: https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper_init.js # swiper初始化方法</span><br></pre></td></tr></table></figure><ol start="3"><li>参数释义</li></ol><table><thead><tr><th align="left">参数</th><th align="left">备选值&#x2F;类型</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">priority</td><td align="left">number</td><td align="left">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td align="left">enable</td><td align="left">true&#x2F;false</td><td align="left">【必选】控制开关</td></tr><tr><td align="left">enable_page</td><td align="left">path&#x2F;all</td><td align="left">【可选】填写想要应用的页面的相对路径（即路由地址）,如根目录就填’&#x2F;‘,分类页面就填’&#x2F;categories&#x2F;‘。若要应用于所有页面，就填’all’，默认为all</td></tr><tr><td align="left">timemode</td><td align="left">date&#x2F;updated</td><td align="left">【可选】时间显示，date为显示创建日期，updated为显示更新日期,默认为date</td></tr><tr><td align="left">layout.type</td><td align="left">id&#x2F;class</td><td align="left">【可选】挂载容器类型，填写id或class，不填则默认为id</td></tr><tr><td align="left">layout.name</td><td align="left">text</td><td align="left">【必选】挂载容器名称</td></tr><tr><td align="left">layout.index</td><td align="left">0和正整数</td><td align="left">【可选】前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位</td></tr><tr><td align="left">default_descr</td><td align="left">text</td><td align="left">默认文章描述</td></tr><tr><td align="left">swiper_css</td><td align="left">url</td><td align="left">【可选】自定义的swiper依赖项css链接</td></tr><tr><td align="left">swiper_js</td><td align="left">url</td><td align="left">【可选】自定义的swiper依赖项加js链接</td></tr><tr><td align="left">custom_css</td><td align="left">url</td><td align="left">【可选】适配主题样式补丁</td></tr><tr><td align="left">custom_js</td><td align="left">url</td><td align="left">【可选】swiper初始化方法</td></tr></tbody></table><p><strong>使用方法</strong></p><p>在文章的<code>front_matter</code>中添加<code>swiper_index</code>配置项即可。</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 创建日期</span><br><span class="line">updated: 更新日期</span><br><span class="line">cover: 文章封面</span><br><span class="line">description: 文章描述</span><br><span class="line"><span class="section">swiper<span class="emphasis">_index: 1 #置顶轮播图顺序，非负整数，数字越大越靠前</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="小冰分类分类磁铁"><a href="#小冰分类分类磁铁" class="headerlink" title="小冰分类分类磁铁"></a>小冰分类分类磁铁</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <p>原文链接：<a href="https://zfe.space/post/hexo-magnet.html">《教程：hexo-magnet 插件 1.0》</a></p><details class="folding-tag" cyan><summary> 实现效果-图2 </summary>              <div class='content'>              <p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250122215700737.png" alt="image-20250122213228688"></p>              </div>            </details><h3 id="配置方法："><a href="#配置方法：" class="headerlink" title="配置方法："></a>配置方法：</h3><ol><li>NPM 插件安装的部署方法：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-magnet --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"></span><br><span class="line">cnpm i hexo-magnet --save</span><br></pre></td></tr></table></figure><ol start="2"><li>新增网站根目录_config 配置项 (不是主题的)：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">magnet:</span><br><span class="line">  enable: true</span><br><span class="line">  priority: 1</span><br><span class="line">  enable_page: /</span><br><span class="line">  type: categories</span><br><span class="line">  devide: 2</span><br><span class="line">  display:</span><br><span class="line">    - name: 教程</span><br><span class="line">      display_name: 小冰の魔改教程</span><br><span class="line">      icon: 📚</span><br><span class="line">    - name: 游戏评测</span><br><span class="line">      display_name: 小冰の游戏评测</span><br><span class="line">      icon: 🎮</span><br><span class="line">    - name: 生活趣闻</span><br><span class="line">      display_name: 小冰の生活趣闻</span><br><span class="line">      icon: 🐱‍👓</span><br><span class="line">    - name: vue</span><br><span class="line">      display_name: 小冰の编程学习</span><br><span class="line">      icon: 👩‍💻</span><br><span class="line">    - name: 学习</span><br><span class="line">      display_name: 小冰の读书笔记</span><br><span class="line">      icon: 📒</span><br><span class="line">    - name: 随想</span><br><span class="line">      display_name: 小冰の胡思乱想</span><br><span class="line">      icon: 💡</span><br><span class="line">  color_setting:</span><br><span class="line">    text_color: black</span><br><span class="line">    text_hover_color: white</span><br><span class="line">    background_color: &quot;#f2f2f2&quot;</span><br><span class="line">    background_hover_color: &quot;#b30070&quot;</span><br><span class="line">  layout:</span><br><span class="line">    type: id</span><br><span class="line">    name: recent-posts</span><br><span class="line">    index: 0</span><br><span class="line">  temple_html: &#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;width:100%;height: auto&quot;&gt;&lt;div id=&quot;catalog_magnet&quot;&gt;$&#123;temple_html_item&#125;&lt;/div&gt;&lt;/div&gt;&#x27;</span><br><span class="line">  plus_style: &quot;&quot;</span><br></pre></td></tr></table></figure><p>这里仅仅展示 butterfly 配置，更多主题配置请前往：<a href="https://github.com/Zfour/hexo-magnet/issues">https://github.com/Zfour/hexo-magnet/issues</a><br>也欢迎共享自己的配置和进行修改。</p><h3 id="配置项的含义："><a href="#配置项的含义：" class="headerlink" title="配置项的含义："></a><strong>配置项的含义：</strong></h3><p><strong>enable</strong></p><p><strong>参数：</strong>true &#x2F; false<br><strong>含义：</strong>是否开启插件</p><p><strong>enable_page</strong></p><p><strong>参数：</strong>&#x2F;<br><strong>含义：</strong>路由地址，如 &#x2F; 代表主页。&#x2F;me&#x2F; 代表自我介绍页等等</p><p><strong>priority</strong></p><p><strong>参数：</strong>1<br><strong>含义：</strong>插件的叠放顺序，数字越大，叠放约靠前。如果你安装了<code> hexo-githubcalendar</code>，请将 <code>hexo-githubcalendar</code>npm 插件更新至 <code>@1.2.3</code> 版本。然后给 <code>hexo-githubcalendar</code> 添加 <code>priority</code> 参数。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">githubcalendar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">3</span> <span class="comment"># 这里加上参数</span></span><br></pre></td></tr></table></figure><p><strong>type</strong></p><p><strong>参数：</strong>categories &#x2F; tags<br><strong>含义：</strong>选择筛选分类还是标签</p><p><strong>devide</strong></p><p><strong>参数：</strong>2<br><strong>含义：</strong>表示分隔的列数，2 表示分为两列展示</p><p><strong>display</strong></p><p><strong>参数：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- name: 教程 # 这里是tags或者categories的名称</span><br><span class="line">  display_name: 小冰の魔改教程 # 这里是替换的名称</span><br><span class="line">  icon: 📚 # 这里是展示的图标</span><br></pre></td></tr></table></figure><p><strong>含义：</strong>配置项，可自行设置，按照设置的顺序展示</p><p><strong>color_setting</strong></p><p><strong>参数：</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">text_color:</span> <span class="string">black</span> <span class="comment"># 文字默认颜色</span></span><br><span class="line"><span class="attr">text_hover_color:</span> <span class="string">white</span> <span class="comment"># 文字鼠标悬浮颜色</span></span><br><span class="line"><span class="attr">background_color:</span> <span class="string">&quot;#f2f2f2&quot;</span> <span class="comment"># 文字背景默认颜色</span></span><br><span class="line"><span class="attr">background_hover_color:</span> <span class="string">&quot;#b30070&quot;</span> <span class="comment"># 文字背景悬浮颜色</span></span><br></pre></td></tr></table></figure><p><strong>含义：</strong>颜色配置项，可自行设置</p><p><strong>layout</strong></p><p><strong>参数：</strong>type; （class&amp;id）<br><strong>参数：</strong>name;<br><strong>参数：</strong>index；（数字）<br><strong>含义：</strong>如果说 magnet 是一幅画，那么这个 layout 就是指定了哪面墙来挂画<br>而在 HTML 的是世界里有两种墙分别 type 为 id 和 class。<br>其中在定义 class 的时候会出现多个 class 的情况，这时就需要使用 index，确定是哪一个。<br>最后墙的名字即是 name;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">name</span>=<span class="string">&quot;我是墙&quot;</span> <span class="attr">id</span>=<span class="string">&quot;recent-posts&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- id=&gt;type  recent-posts=&gt;name    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">name</span>=<span class="string">&quot;我是画框&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">name</span>=<span class="string">&quot;我是纸&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--这里通过js挂载magnet，也就是画画--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>temple_html</strong></p><p><strong>参数：</strong>html 模板字段<br><strong>含义：</strong>包含挂载容器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;recent-post-item&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%;height: auto&quot;</span>&gt;</span> <span class="comment">&lt;!--文章容器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;catalog_magnet&quot;</span>&gt;</span>  <span class="comment">&lt;!--挂载容器--&gt;</span></span><br><span class="line">    $&#123;temple_html_item&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>plus_style</strong></p><p><strong>参数：</strong>“ ”<br><strong>含义：</strong>提供可自定义的 style，如加入黑夜模式。</p><h3 id="hexo-三连："><a href="#hexo-三连：" class="headerlink" title="hexo 三连："></a><strong>hexo 三连</strong>：</h3><p>执行 hexo 三连</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>即可发现已经成功部署。</p><h3 id="黑夜模式适配代码调整："><a href="#黑夜模式适配代码调整：" class="headerlink" title="黑夜模式适配代码调整："></a>黑夜模式适配代码调整：</h3><p>在<code>source/config/css/custom.css</code>中添加一下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 小冰分类分类磁铁黑夜模式适配 */</span></span><br><span class="line"><span class="selector-class">.magnet_item</span> &#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">5px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#catalog_magnet</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">18px</span> <span class="number">18px</span> <span class="number">0</span> <span class="number">18px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.magnet_item</span> &#123;</span><br><span class="line">        <span class="attribute">margin-right</span>: <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.magnet_link_context</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#1e1e1e</span>;</span><br><span class="line">    <span class="attribute">color</span>: antiquewhite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.magnet_link_context</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.magnet_link_context</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--text-bg-hover) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f2f2f2</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="个人信息卡片背景图"><a href="#个人信息卡片背景图" class="headerlink" title="个人信息卡片背景图"></a>个人信息卡片背景图</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <div class="hide-block"><button type="button" class="hide-button" style="">预览效果    </button><div class="hide-content"><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250123110910322.png" alt="image-20250123110558096"></p></div></div><ol><li>在<code>source/config/css/custom.css</code>中加入以下样式：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 个人信息卡片背景图 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;light&quot;</span>]</span> <span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">https://sourcebucket.s3.ladydaily.com/img/snowflower.webp</span>);</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-attachment</span>: inherit;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">https://sourcebucket.s3.ladydaily.com/img/aurora.webp</span>);</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-attachment</span>: inherit;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>替换代码中的<code>url</code>图片地址</p><p><strong>背景图片制作方法：</strong></p><p>首先下载<code>PS</code>，以及准备好一张尺寸大概在<code>700*1000</code>的图片，用<code>PS</code>打开图片，按照以下步骤给图片添加一个渐变遮罩就可以，然后将图片另存为<code>PNG</code>格式的，然后将图片用软件压缩一下，压缩图片具体方法见[网站性能优化的一些小技巧，最后只要不是太大就可以！</p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250123204547760.jpg" alt="image-6.webp"></p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250123204547758.jpg" alt="image-7.webp"></p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250123204547759.jpg" alt="image-8.webp"></p>              </div>            </details><h2 id="页面区块"><a href="#页面区块" class="headerlink" title="页面区块"></a>页面区块</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <div class="hide-block"><button type="button" class="hide-button" style="">预览效果    </button><div class="hide-content"><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250123202246256.webp" alt="image-20250123200239944"></p></div></div><p>在<code>source/config/css/custom.css</code>中添加一下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 关于页面区块 */</span></span><br><span class="line"><span class="selector-class">.about_page</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fafafa</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#a0a0a0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.about_page</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#252525</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="渐变色版权美化（店长-微调）"><a href="#渐变色版权美化（店长-微调）" class="headerlink" title="渐变色版权美化（店长+微调）"></a>渐变色版权美化（店长+微调）</h2><details class="folding-tag" green><summary> 点击查看教程 </summary>              <div class='content'>              <div class="hide-block"><button type="button" class="hide-button" style="">预览效果    </button><div class="hide-content"><p><img src="https://tuchuang.voooe.cn/images/2023/01/01/image.webp" alt="渐变色版权美化"></p></div></div><p>原文链接：<a href="https://www.fomal.cc/posts/5389e93f.html">博客魔改教程总结（二）</a></p><ol><li><p>修改<code>[BlogRoot]\themes\butterfly\layout\includes\post\post-copyright.pug</code>,直接复制以下内容替换原文件内容。此处多次用到了三元运算符作为默认项设置，在确保有主题配置文件的默认项的情况下，也可以在相应文章的<code>front-matter</code>中重新定义作者，原文链接，开源许可协议等内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">if theme.post_copyright.enable &amp;&amp; page.copyright !== false</span><br><span class="line">  - let author = page.copyright_author ? page.copyright_author : config.author</span><br><span class="line">  - let url = page.copyright_url ? page.copyright_url : page.permalink</span><br><span class="line">  - let license = page.license ? page.license : theme.post_copyright.license</span><br><span class="line">  - let license_url = page.license_url ? page.license_url : theme.post_copyright.license_url</span><br><span class="line">  .post-copyright</span><br><span class="line">    .post-copyright__title</span><br><span class="line">      span.post-copyright-info</span><br><span class="line">        h #[=page.title]</span><br><span class="line">    .post-copyright__type</span><br><span class="line">      span.post-copyright-info</span><br><span class="line">        a(href=url_for(url))= theme.post_copyright.decode ? decodeURI(url) : url</span><br><span class="line">    .post-copyright-m</span><br><span class="line">      .post-copyright-m-info</span><br><span class="line">        .post-copyright-a</span><br><span class="line">            h 作者</span><br><span class="line">            .post-copyright-cc-info</span><br><span class="line">                h=author</span><br><span class="line">        .post-copyright-c</span><br><span class="line">            h 发布于</span><br><span class="line">            .post-copyright-cc-info</span><br><span class="line">                h=date(page.date, config.date_format)</span><br><span class="line">        .post-copyright-u</span><br><span class="line">            h 更新于</span><br><span class="line">            .post-copyright-cc-info</span><br><span class="line">                h=date(page.updated, config.date_format)</span><br><span class="line">        .post-copyright-c</span><br><span class="line">            h 许可协议</span><br><span class="line">            .post-copyright-cc-info</span><br><span class="line">                a.icon(rel=&#x27;noopener&#x27; target=&#x27;_blank&#x27; title=&#x27;Creative Commons&#x27; href=&#x27;https://creativecommons.org/&#x27;)</span><br><span class="line">                  i.fab.fa-creative-commons</span><br><span class="line">                a(rel=&#x27;noopener&#x27; target=&#x27;_blank&#x27; title=license href=url_for(license_url))=license</span><br></pre></td></tr></table></figure></li><li><p>修改<code>[BlogRoot]\themes\butterfly\source\css\_layout\post.styl</code>,直接复制以下内容，替换原文件，这个文件就是自己调节样式的。其中，<code>184</code>行是白天模式的背景色，这里默认是我网站的渐变色，大家可以根据自己的喜好调节；<code>253</code>行是夜间模式的发光光圈颜色，大家也可以自行替换成自己喜欢的颜色：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">beautify</span><span class="params">()</span></span></span><br><span class="line">  <span class="built_in">headStyle</span>(fontsize)</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="built_in">unit</span>(fontsize + <span class="number">12</span>, <span class="string">&#x27;px&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">      <span class="attribute">margin-left</span>: <span class="built_in">unit</span>((<span class="built_in">-</span>(fontsize + <span class="number">6</span>)), <span class="string">&#x27;px&#x27;</span>)</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="built_in">unit</span>(fontsize, <span class="string">&#x27;px&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="attribute">padding-left</span>: <span class="built_in">unit</span>(fontsize + <span class="number">18</span>, <span class="string">&#x27;px&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h1</span>,</span><br><span class="line">  <span class="selector-tag">h2</span>,</span><br><span class="line">  <span class="selector-tag">h3</span>,</span><br><span class="line">  <span class="selector-tag">h4</span>,</span><br><span class="line">  <span class="selector-tag">h5</span>,</span><br><span class="line">  <span class="selector-tag">h6</span></span><br><span class="line">    <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-out</span><br><span class="line"></span><br><span class="line">    <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">      <span class="attribute">position</span>: absolute</span><br><span class="line">      <span class="attribute">top</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">7px</span>)</span><br><span class="line">      <span class="attribute">color</span>: <span class="variable">$title</span>-prefix-icon-color</span><br><span class="line">      <span class="attribute">content</span>: <span class="variable">$title</span>-prefix-icon</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">1</span></span><br><span class="line">      <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-out</span><br><span class="line">      <span class="keyword">@extend</span> <span class="selector-class">.fontawesomeIcon</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$light</span>-blue</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h1</span></span><br><span class="line">    <span class="built_in">headStyle</span>(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h2</span></span><br><span class="line">    <span class="built_in">headStyle</span>(<span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h3</span></span><br><span class="line">    <span class="built_in">headStyle</span>(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h4</span></span><br><span class="line">    <span class="built_in">headStyle</span>(<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h5</span></span><br><span class="line">    <span class="built_in">headStyle</span>(<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h6</span></span><br><span class="line">    <span class="built_in">headStyle</span>(<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">ol</span>,</span><br><span class="line">  <span class="selector-tag">ul</span></span><br><span class="line">    <span class="selector-tag">p</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">li</span></span><br><span class="line">    <span class="selector-pseudo">&amp;::marker</span></span><br><span class="line">      <span class="attribute">color</span>: <span class="variable">$light</span>-blue</span><br><span class="line">      <span class="attribute">font-weight</span>: <span class="number">600</span></span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">1.05em</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="selector-pseudo">&amp;::marker</span></span><br><span class="line">        <span class="attribute">color</span>: <span class="built_in">var</span>(--pseudo-hover)</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span></span><br><span class="line">    <span class="attribute">list-style-type</span>: circle</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#article-container</span></span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word</span><br><span class="line">  <span class="attribute">overflow-wrap</span>: break-word</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$theme</span>-link-color</span><br><span class="line"></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="attribute">text-decoration</span>: underline</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">img</span></span><br><span class="line">    <span class="attribute">display</span>: block</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">20px</span></span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">100%</span></span><br><span class="line">    <span class="attribute">transition</span>: filter <span class="number">375ms</span> ease-in .<span class="number">2s</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">p</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">16px</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">iframe</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;anchor&#x27;</span>)</span><br><span class="line">    <span class="selector-tag">a</span><span class="selector-class">.headerlink</span></span><br><span class="line">      <span class="selector-pseudo">&amp;:after</span></span><br><span class="line">        <span class="keyword">@extend</span> <span class="selector-class">.fontawesomeIcon</span></span><br><span class="line">        <span class="attribute">float</span>: right</span><br><span class="line">        <span class="attribute">color</span>: <span class="built_in">var</span>(--headline-presudo)</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&#x27;\f0c1&#x27;</span></span><br><span class="line">        <span class="attribute">font-size</span>: .<span class="number">95em</span></span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">3s</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">        <span class="selector-pseudo">&amp;:after</span></span><br><span class="line">          <span class="attribute">color</span>: <span class="built_in">var</span>(--pseudo-hover)</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">h1</span>,</span><br><span class="line">    <span class="selector-tag">h2</span>,</span><br><span class="line">    <span class="selector-tag">h3</span>,</span><br><span class="line">    <span class="selector-tag">h4</span>,</span><br><span class="line">    <span class="selector-tag">h5</span>,</span><br><span class="line">    <span class="selector-tag">h6</span></span><br><span class="line">      <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">        <span class="selector-tag">a</span><span class="selector-class">.headerlink</span></span><br><span class="line">          <span class="selector-pseudo">&amp;:after</span></span><br><span class="line">            <span class="attribute">opacity</span>: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">ol</span>,</span><br><span class="line">  <span class="selector-tag">ul</span></span><br><span class="line">    <span class="selector-tag">ol</span>,</span><br><span class="line">    <span class="selector-tag">ul</span></span><br><span class="line">      <span class="attribute">padding-left</span>: <span class="number">20px</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">li</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">4px</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">p</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;beautify.enable&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;beautify.field&#x27;</span>) == <span class="string">&#x27;site&#x27;</span></span><br><span class="line">      <span class="built_in">beautify</span>()</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;beautify.field&#x27;</span>) == <span class="string">&#x27;post&#x27;</span></span><br><span class="line">      &amp;<span class="selector-class">.post-content</span></span><br><span class="line">        <span class="built_in">beautify</span>()</span><br><span class="line"></span><br><span class="line">  &gt; <span class="selector-pseudo">:last-child</span></span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0</span> <span class="meta">!important</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#post</span></span><br><span class="line">  <span class="selector-class">.tag_share</span></span><br><span class="line">    <span class="selector-class">.post-meta</span></span><br><span class="line">      &amp;__tag-list</span><br><span class="line">        <span class="attribute">display</span>: inline-block</span><br><span class="line"></span><br><span class="line">      &amp;__tags</span><br><span class="line">        <span class="attribute">display</span>: inline-block</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">8px</span> <span class="number">8px</span> <span class="number">0</span></span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">12px</span></span><br><span class="line">        <span class="attribute">width</span>: fit-content</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="variable">$light</span>-blue</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">12px</span></span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$light</span>-blue</span><br><span class="line">        <span class="attribute">font-size</span>: .<span class="number">85em</span></span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-in-out</span><br><span class="line"></span><br><span class="line">        <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">          <span class="attribute">background</span>: <span class="variable">$light</span>-blue</span><br><span class="line">          <span class="attribute">color</span>: <span class="built_in">var</span>(--white)</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.post_share</span></span><br><span class="line">      <span class="attribute">display</span>: inline-block</span><br><span class="line">      <span class="attribute">float</span>: right</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">width</span>: fit-content</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.social-share</span></span><br><span class="line">        <span class="attribute">font-size</span>: .<span class="number">85em</span></span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.social-share-icon</span></span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">4px</span></span><br><span class="line">          <span class="attribute">width</span>: w = <span class="number">1.85em</span></span><br><span class="line">          <span class="attribute">height</span>: w</span><br><span class="line">          <span class="attribute">font-size</span>: <span class="number">1.2em</span></span><br><span class="line">          <span class="attribute">line-height</span>: w</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-copyright</span></span><br><span class="line">    <span class="attribute">position</span>: relative</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">40px</span> <span class="number">0</span> <span class="number">10px</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">16px</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--light-grey)</span><br><span class="line">    <span class="attribute">transition</span>: box-shadow .<span class="number">3s</span> ease-in-out</span><br><span class="line">    <span class="attribute">overflow</span>: hidden</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span><span class="meta">!important</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, <span class="number">#f6d8f5</span>, <span class="number">#c2f1f0</span>, <span class="number">#f0debf</span>);</span><br><span class="line"></span><br><span class="line">    <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">      <span class="attribute">background</span> <span class="built_in">var</span>(--heo-post-blockquote-bg)</span><br><span class="line">      <span class="attribute">position</span> absolute</span><br><span class="line">      <span class="attribute">right</span> -<span class="number">26px</span></span><br><span class="line">      <span class="attribute">top</span> -<span class="number">120px</span></span><br><span class="line">      <span class="attribute">content</span> <span class="string">&#x27;\f25e&#x27;</span></span><br><span class="line">      <span class="attribute">font-size</span> <span class="number">200px</span></span><br><span class="line">      <span class="attribute">font-family</span> <span class="string">&#x27;Font Awesome 5 Brands&#x27;</span></span><br><span class="line">      <span class="attribute">opacity</span> .<span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">232</span>, <span class="number">237</span>, <span class="number">250</span>, .<span class="number">6</span>), <span class="number">0</span> <span class="number">2px</span> <span class="number">4px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">232</span>, <span class="number">237</span>, <span class="number">250</span>, .<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.post-copyright</span></span><br><span class="line">      &amp;-meta</span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$light</span>-blue</span><br><span class="line">        <span class="attribute">font-weight</span>: bold</span><br><span class="line"></span><br><span class="line">      &amp;-info</span><br><span class="line">        <span class="attribute">padding-left</span>: <span class="number">6px</span></span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">a</span></span><br><span class="line">          <span class="attribute">text-decoration</span>: none</span><br><span class="line">          <span class="attribute">word-break</span>: break-word</span><br><span class="line"></span><br><span class="line">          <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">            <span class="attribute">text-decoration</span>: none</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-copyright-cc-info</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$theme</span>-color;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-outdate-notice</span></span><br><span class="line">    <span class="attribute">position</span>: relative</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span></span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">5em</span> <span class="number">1.2em</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$noticeOutdate</span>-bg</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$noticeOutdate</span>-color</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;noticeOutdate.style&#x27;</span>) == <span class="string">&#x27;flat&#x27;</span></span><br><span class="line">      <span class="attribute">padding</span>: .<span class="number">5em</span> <span class="number">1em</span> .<span class="number">5em</span> <span class="number">2.6em</span></span><br><span class="line">      <span class="attribute">border-left</span>: <span class="number">5px</span> solid <span class="variable">$noticeOutdate</span>-border</span><br><span class="line"></span><br><span class="line">      <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">        <span class="keyword">@extend</span> <span class="selector-class">.fontawesomeIcon</span></span><br><span class="line">        <span class="attribute">position</span>: absolute</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">50%</span></span><br><span class="line">        <span class="attribute">left</span>: .<span class="number">9em</span></span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$noticeOutdate</span>-border</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&#x27;\f071&#x27;</span></span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>)</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.ads-wrap</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">40px</span> <span class="number">0</span></span><br><span class="line"><span class="selector-class">.post-copyright-m-info</span></span><br><span class="line">  <span class="selector-class">.post-copyright-a</span>,</span><br><span class="line">  <span class="selector-class">.post-copyright-c</span>,</span><br><span class="line">  <span class="selector-class">.post-copyright-u</span></span><br><span class="line">    <span class="attribute">display</span> inline-block</span><br><span class="line">    <span class="attribute">width</span> fit-content</span><br><span class="line">    <span class="attribute">padding</span> <span class="number">2px</span> <span class="number">5px</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-id">#post</span></span><br><span class="line">    <span class="selector-class">.post-copyright</span></span><br><span class="line">      <span class="attribute">background</span> <span class="number">#07080a</span></span><br><span class="line">      <span class="attribute">text-shadow</span> <span class="number">#bfbeb8</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span></span><br><span class="line">      <span class="attribute">border</span> <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">19</span> <span class="number">18</span> <span class="number">18</span> / <span class="number">35%</span>)</span><br><span class="line">      <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">var</span>(--theme-color)</span><br><span class="line">      <span class="attribute">animation</span> flashlight <span class="number">1s</span> linear infinite alternate</span><br><span class="line">  <span class="selector-class">.post-copyright-info</span></span><br><span class="line">    <span class="attribute">color</span> <span class="number">#e0e0e4</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#post</span></span><br><span class="line">  <span class="selector-class">.post-copyright__title</span></span><br><span class="line">    <span class="attribute">font-size</span> <span class="number">22px</span></span><br><span class="line">  <span class="selector-class">.post-copyright__notice</span></span><br><span class="line">    <span class="attribute">font-size</span> <span class="number">15px</span></span><br><span class="line">  <span class="selector-class">.post-copyright</span></span><br><span class="line">    <span class="attribute">box-shadow</span> <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span></span><br></pre></td></tr></table></figure></li><li><p>默认项的配置</p><ul><li><p>作者：<code>[BlogRoot]\_config.yml</code>中的<code>author</code>配置项</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Akilarの糖果屋</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">Akilar.top</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Akilar</span> <span class="comment">#默认作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>许可协议：<code>[BlogRoot]\_config.butterfly.yml</code>中的<code>license</code>和<code>license_url</code>配置项</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">decode:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span></span><br><span class="line">  <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>页面覆写配置项，修改对应文章的<code>front-matter</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Copyright-beautify # 文章名称</span><br><span class="line">date: 2021-03-02 13:52:46 # 文章发布日期</span><br><span class="line">updated: 2021-03-02 13:52:46 # 文章更新日期</span><br><span class="line">copyright<span class="emphasis">_author: Nesxc # 作者覆写</span></span><br><span class="line"><span class="emphasis">copyright_</span>url: https://www.nesxc.com/post/hexocc.html # 原文链接覆写</span><br><span class="line">license: # 许可协议名称覆写</span><br><span class="line"><span class="section">license<span class="emphasis">_url: # 许可协议链接覆写</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> butterfly魔改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git问题：解决“ssh:connect to host github.com port 22: Connection timed out”</title>
      <link href="/2025/01/20/2025_01/git%E9%97%AE%E9%A2%98/"/>
      <url>/2025/01/20/2025_01/git%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>使用git上传代码时，原本应该在几秒钟上传成功，但是却异常的慢，，这时突然出现一个错误弹窗（忘记截图了）：</p><p>提示： “ssh:connect to host github.com port 22: Connection timed out”</p><p>再多尝试几次，依然是这样。</p><p>后来又尝试直接再文件夹里用git<a href="https://so.csdn.net/so/search?q=%E5%91%BD%E4%BB%A4%E8%A1%8C&spm=1001.2101.3001.7020">命令行</a>提交：</p><p>可惜结果依然是失败。。。</p><p>又尝试重启电脑，结果毫无乱用。</p><p>最后通过查阅各种资料，得知原因可能是由于电脑的防火墙或者其他网络原因导致<a href="https://so.csdn.net/so/search?q=ssh%E8%BF%9E%E6%8E%A5&spm=1001.2101.3001.7020">ssh连接</a>方式 端口22被封锁。</p><hr><h3 id="解决方法一："><a href="#解决方法一：" class="headerlink" title="解决方法一："></a>解决方法一：</h3><p><a href="https://blog.csdn.net/weixin_41287260/article/details/124368189">参考此篇文章</a></p><h3 id="解决方法二："><a href="#解决方法二：" class="headerlink" title="解决方法二："></a>解决方法二：</h3><ol><li>进入~&#x2F;.ssh下</li><li>创建一个config文件</li><li>编辑文件内容：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User git</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port 443</span><br><span class="line"></span><br><span class="line">Host gitlab.com</span><br><span class="line">Hostname altssh.gitlab.com</span><br><span class="line">User git</span><br><span class="line">Port 443</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p>4.保存退出</p><p>5.检查是否成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>此时可以提交了</p><h2 id="其他问题："><a href="#其他问题：" class="headerlink" title="其他问题："></a>其他问题：</h2><p>当我输入<code>hexo g</code>时，会出现如下错误：</p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250120100746810.png" alt="image-20250120095943942"></p><p> 从错误信息中可以看出，问题发生在 Hexo 处理 <code>_posts/git问题.md</code> 文件时，出现了 YAML 格式错误。主要错误是 <code>YAMLException: bad indentation of a mapping entry</code>，这表明该文件的 Front Matter（前置数据块）部分存在缩进或语法问题。此外，还有一个提示 <code>connect to host github.com port 22: Connection timed out</code>，这可能与网络连接有关，但不太可能直接导致 Hexo 生成失败。</p><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p>我此篇博客的<code>title</code>是<code>“Git问题：解决“ssh:connect to host github.com port 22: Connection timed out”</code>注意到，其中是有<code>“”</code>的，这可能导致上传失败。将<code>title</code>改为<code>&quot;“Git问题：解决“ssh:connect to host github.com port 22: Connection timed out”&quot;</code>即可解决此问题，同时后面的那个<code>Connection timed out</code>错误也解决了<strong>（昨天晚上折腾了2小时去解决网络问题，没想到问题出在这里，还是以后要注意看报错呀！！！）</strong></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 博客文章统计图</title>
      <link href="/2025/01/19/2025_01/Hexo%20%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E7%BB%9F%E8%AE%A1%E5%9B%BE/"/>
      <url>/2025/01/19/2025_01/Hexo%20%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E7%BB%9F%E8%AE%A1%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p>此文章参考<strong>Eurkon</strong>大神的文章<a href="https://blog.eurkon.com/post/1213ef82.html">Hexo 博客文章统计图</a>，教程基本没有改，完全搬过来，只需要修改个别时间</p><h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h3><p>本文教程主要针对 Hexo 博客，对博客的文章发布时间、文章分类、文章标签的维度绘制统计图，使用的是 <a href="https://echarts.apache.org/examples/zh/index.html">ECharts</a> 开源可视化库。具体效果可以点击本站的 <a href="https://www.ccjinblog.info/charts/">表格</a>页面查看。</p><h3 id="2-新建-charts"><a href="#2-新建-charts" class="headerlink" title="2. 新建 charts"></a>2. 新建 charts</h3><p>方式①：使用命令创建</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page charts</span><br></pre></td></tr></table></figure><p>方式②：手动创建</p><p>在 <code>[Blogroot]\source\</code> 目录下新建 <code>charts</code> 文件夹，并在新建的 <code>charts</code> 文件夹下新建 <code>index.md</code> 文件，添加以下内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章统计</span><br><span class="line">date: 2025-01-19 22:00:00</span><br><span class="line"><span class="section">type: &quot;charts&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h3 id="3-引入-ECharts-js"><a href="#3-引入-ECharts-js" class="headerlink" title="3. 引入 ECharts.js"></a>3. 引入 ECharts.js</h3><blockquote><p>echarts.js 必须在渲染 echarts 实例的 JavaScript 前引入。</p></blockquote><p>方式①：全局引入</p><p>以 butterfly 主题为例，可以在 <code>[Blogroot]\_config.butterfly.yml</code> 的 <code>inject</code> 配置项中引入 <code>echart.js</code> 文件。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://npm.elemecdn.com/echarts@4.9.0/dist/echarts.min.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>方式②：页面引入</p><p>可以在 <code>index.md</code> 添加以下内容：</p><script src="https://npm.elemecdn.com/echarts@4.9.0/dist/echarts.min.js"></script><h3 id="4-文章统计代码"><a href="#4-文章统计代码" class="headerlink" title="4. 文章统计代码"></a>4. 文章统计代码</h3><p>以 butterfly 主题为例，可以在 <code>[Blogroot]\themes\butterfly\scripts\helpers\</code> 目录下新建 <code>chart.js</code> 文件，然后添加以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">&#x27;moment&#x27;</span>)</span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="keyword">function</span> (<span class="params">locals</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> $ = cheerio.<span class="title function_">load</span>(locals)</span><br><span class="line">  <span class="keyword">const</span> post = $(<span class="string">&#x27;#posts-chart&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> tag = $(<span class="string">&#x27;#tags-chart&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> category = $(<span class="string">&#x27;#categories-chart&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> htmlEncode = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (post.<span class="property">length</span> &gt; <span class="number">0</span> || tag.<span class="property">length</span> &gt; <span class="number">0</span> || category.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (post.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; $(<span class="string">&#x27;#postsChart&#x27;</span>).<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (post.<span class="title function_">attr</span>(<span class="string">&#x27;data-encode&#x27;</span>) === <span class="string">&#x27;true&#x27;</span>) htmlEncode = <span class="literal">true</span></span><br><span class="line">      post.<span class="title function_">after</span>(<span class="title function_">postsChart</span>(post.<span class="title function_">attr</span>(<span class="string">&#x27;data-start&#x27;</span>)))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (tag.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; $(<span class="string">&#x27;#tagsChart&#x27;</span>).<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (tag.<span class="title function_">attr</span>(<span class="string">&#x27;data-encode&#x27;</span>) === <span class="string">&#x27;true&#x27;</span>) htmlEncode = <span class="literal">true</span></span><br><span class="line">      tag.<span class="title function_">after</span>(<span class="title function_">tagsChart</span>(tag.<span class="title function_">attr</span>(<span class="string">&#x27;data-length&#x27;</span>)))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (category.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; $(<span class="string">&#x27;#categoriesChart&#x27;</span>).<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (category.<span class="title function_">attr</span>(<span class="string">&#x27;data-encode&#x27;</span>) === <span class="string">&#x27;true&#x27;</span>) htmlEncode = <span class="literal">true</span></span><br><span class="line">      category.<span class="title function_">after</span>(<span class="title function_">categoriesChart</span>(category.<span class="title function_">attr</span>(<span class="string">&#x27;data-parent&#x27;</span>)))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (htmlEncode) &#123;</span><br><span class="line">      <span class="keyword">return</span> $.<span class="title function_">root</span>().<span class="title function_">html</span>().<span class="title function_">replace</span>(<span class="regexp">/&amp;amp;#/g</span>, <span class="string">&#x27;&amp;#&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> $.<span class="title function_">root</span>().<span class="title function_">html</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> locals</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="number">15</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">postsChart</span> (<span class="params">startMonth</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> startDate = <span class="title function_">moment</span>(startMonth || <span class="string">&#x27;2020-01&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> endDate = <span class="title function_">moment</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> monthMap = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line">  <span class="keyword">const</span> dayTime = <span class="number">3600</span> * <span class="number">24</span> * <span class="number">1000</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> time = startDate; time &lt;= endDate; time += dayTime) &#123;</span><br><span class="line">    <span class="keyword">const</span> month = <span class="title function_">moment</span>(time).<span class="title function_">format</span>(<span class="string">&#x27;YYYY-MM&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (!monthMap.<span class="title function_">has</span>(month)) &#123;</span><br><span class="line">      monthMap.<span class="title function_">set</span>(month, <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  hexo.<span class="property">locals</span>.<span class="title function_">get</span>(<span class="string">&#x27;posts&#x27;</span>).<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">post</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> month = post.<span class="property">date</span>.<span class="title function_">format</span>(<span class="string">&#x27;YYYY-MM&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (monthMap.<span class="title function_">has</span>(month)) &#123;</span><br><span class="line">      monthMap.<span class="title function_">set</span>(month, monthMap.<span class="title function_">get</span>(month) + <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">const</span> monthArr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([...monthMap.<span class="title function_">keys</span>()])</span><br><span class="line">  <span class="keyword">const</span> monthValueArr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([...monthMap.<span class="title function_">values</span>()])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;script id=&quot;postsChart&quot;&gt;</span></span><br><span class="line"><span class="string">    var color = document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ? &#x27;#4c4948&#x27; : &#x27;rgba(255,255,255,0.7)&#x27;</span></span><br><span class="line"><span class="string">    var postsChart = echarts.init(document.getElementById(&#x27;posts-chart&#x27;), &#x27;light&#x27;);</span></span><br><span class="line"><span class="string">    var postsOption = &#123;</span></span><br><span class="line"><span class="string">      title: &#123;</span></span><br><span class="line"><span class="string">        text: &#x27;文章发布统计图&#x27;,</span></span><br><span class="line"><span class="string">        x: &#x27;center&#x27;,</span></span><br><span class="line"><span class="string">        textStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      tooltip: &#123;</span></span><br><span class="line"><span class="string">        trigger: &#x27;axis&#x27;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      xAxis: &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;日期&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;category&#x27;,</span></span><br><span class="line"><span class="string">        boundaryGap: false,</span></span><br><span class="line"><span class="string">        nameTextStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisTick: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLabel: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLine: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          lineStyle: &#123;</span></span><br><span class="line"><span class="string">            color: color</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;monthArr&#125;</span></span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      yAxis: &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;value&#x27;,</span></span><br><span class="line"><span class="string">        nameTextStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        splitLine: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisTick: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLabel: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLine: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          lineStyle: &#123;</span></span><br><span class="line"><span class="string">            color: color</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      series: [&#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;line&#x27;,</span></span><br><span class="line"><span class="string">        smooth: true,</span></span><br><span class="line"><span class="string">        lineStyle: &#123;</span></span><br><span class="line"><span class="string">            width: 0</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        showSymbol: false,</span></span><br><span class="line"><span class="string">        itemStyle: &#123;</span></span><br><span class="line"><span class="string">          opacity: 1,</span></span><br><span class="line"><span class="string">          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;</span></span><br><span class="line"><span class="string">            offset: 0,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(128, 255, 165)&#x27;</span></span><br><span class="line"><span class="string">          &#125;,</span></span><br><span class="line"><span class="string">          &#123;</span></span><br><span class="line"><span class="string">            offset: 1,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(1, 191, 236)&#x27;</span></span><br><span class="line"><span class="string">          &#125;])</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        areaStyle: &#123;</span></span><br><span class="line"><span class="string">          opacity: 1,</span></span><br><span class="line"><span class="string">          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;</span></span><br><span class="line"><span class="string">            offset: 0,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(128, 255, 165)&#x27;</span></span><br><span class="line"><span class="string">          &#125;, &#123;</span></span><br><span class="line"><span class="string">            offset: 1,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(1, 191, 236)&#x27;</span></span><br><span class="line"><span class="string">          &#125;])</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;monthValueArr&#125;</span>,</span></span><br><span class="line"><span class="string">        markLine: &#123;</span></span><br><span class="line"><span class="string">          data: [&#123;</span></span><br><span class="line"><span class="string">            name: &#x27;平均值&#x27;,</span></span><br><span class="line"><span class="string">            type: &#x27;average&#x27;,</span></span><br><span class="line"><span class="string">            label: &#123;</span></span><br><span class="line"><span class="string">              color: color</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &#125;]</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;]</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    postsChart.setOption(postsOption);</span></span><br><span class="line"><span class="string">    window.addEventListener(&#x27;resize&#x27;, () =&gt; &#123; </span></span><br><span class="line"><span class="string">      postsChart.resize();</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    postsChart.on(&#x27;click&#x27;, &#x27;series&#x27;, (event) =&gt; &#123;</span></span><br><span class="line"><span class="string">      if (event.componentType === &#x27;series&#x27;) window.location.href = &#x27;/archives/&#x27; + event.name.replace(&#x27;-&#x27;, &#x27;/&#x27;);</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">  &lt;/script&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tagsChart</span> (<span class="params">len</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> tagArr = []</span><br><span class="line">  hexo.<span class="property">locals</span>.<span class="title function_">get</span>(<span class="string">&#x27;tags&#x27;</span>).<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">tag</span>) &#123;</span><br><span class="line">    tagArr.<span class="title function_">push</span>(&#123; <span class="attr">name</span>: tag.<span class="property">name</span>, <span class="attr">value</span>: tag.<span class="property">length</span>, <span class="attr">path</span>: tag.<span class="property">path</span> &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">  tagArr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123; <span class="keyword">return</span> b.<span class="property">value</span> - a.<span class="property">value</span> &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> dataLength = <span class="title class_">Math</span>.<span class="title function_">min</span>(tagArr.<span class="property">length</span>, len) || tagArr.<span class="property">length</span></span><br><span class="line">  <span class="keyword">const</span> tagNameArr = []</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; dataLength; i++) &#123;</span><br><span class="line">    tagNameArr.<span class="title function_">push</span>(tagArr[i].<span class="property">name</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> tagNameArrJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(tagNameArr)</span><br><span class="line">  <span class="keyword">const</span> tagArrJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(tagArr)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;script id=&quot;tagsChart&quot;&gt;</span></span><br><span class="line"><span class="string">    var color = document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ? &#x27;#4c4948&#x27; : &#x27;rgba(255,255,255,0.7)&#x27;</span></span><br><span class="line"><span class="string">    var tagsChart = echarts.init(document.getElementById(&#x27;tags-chart&#x27;), &#x27;light&#x27;);</span></span><br><span class="line"><span class="string">    var tagsOption = &#123;</span></span><br><span class="line"><span class="string">      title: &#123;</span></span><br><span class="line"><span class="string">        text: &#x27;Top <span class="subst">$&#123;dataLength&#125;</span> 标签统计图&#x27;,</span></span><br><span class="line"><span class="string">        x: &#x27;center&#x27;,</span></span><br><span class="line"><span class="string">        textStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      tooltip: &#123;&#125;,</span></span><br><span class="line"><span class="string">      xAxis: &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;标签&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;category&#x27;,</span></span><br><span class="line"><span class="string">        nameTextStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisTick: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLabel: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          color: color,</span></span><br><span class="line"><span class="string">          interval: 0</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLine: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          lineStyle: &#123;</span></span><br><span class="line"><span class="string">            color: color</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;tagNameArrJson&#125;</span></span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      yAxis: &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;value&#x27;,</span></span><br><span class="line"><span class="string">        splitLine: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        nameTextStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisTick: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLabel: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLine: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          lineStyle: &#123;</span></span><br><span class="line"><span class="string">            color: color</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      series: [&#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;bar&#x27;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;tagArrJson&#125;</span>,</span></span><br><span class="line"><span class="string">        itemStyle: &#123;</span></span><br><span class="line"><span class="string">          borderRadius: [5, 5, 0, 0],</span></span><br><span class="line"><span class="string">          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;</span></span><br><span class="line"><span class="string">            offset: 0,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(128, 255, 165)&#x27;</span></span><br><span class="line"><span class="string">          &#125;,</span></span><br><span class="line"><span class="string">          &#123;</span></span><br><span class="line"><span class="string">            offset: 1,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(1, 191, 236)&#x27;</span></span><br><span class="line"><span class="string">          &#125;])</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        emphasis: &#123;</span></span><br><span class="line"><span class="string">          itemStyle: &#123;</span></span><br><span class="line"><span class="string">            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;</span></span><br><span class="line"><span class="string">              offset: 0,</span></span><br><span class="line"><span class="string">              color: &#x27;rgba(128, 255, 195)&#x27;</span></span><br><span class="line"><span class="string">            &#125;,</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">              offset: 1,</span></span><br><span class="line"><span class="string">              color: &#x27;rgba(1, 211, 255)&#x27;</span></span><br><span class="line"><span class="string">            &#125;])</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        markLine: &#123;</span></span><br><span class="line"><span class="string">          data: [&#123;</span></span><br><span class="line"><span class="string">            name: &#x27;平均值&#x27;,</span></span><br><span class="line"><span class="string">            type: &#x27;average&#x27;,</span></span><br><span class="line"><span class="string">            label: &#123;</span></span><br><span class="line"><span class="string">              color: color</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &#125;]</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;]</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    tagsChart.setOption(tagsOption);</span></span><br><span class="line"><span class="string">    window.addEventListener(&#x27;resize&#x27;, () =&gt; &#123; </span></span><br><span class="line"><span class="string">      tagsChart.resize();</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    tagsChart.on(&#x27;click&#x27;, &#x27;series&#x27;, (event) =&gt; &#123;</span></span><br><span class="line"><span class="string">      if(event.data.path) window.location.href = &#x27;/&#x27; + event.data.path;</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">  &lt;/script&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">categoriesChart</span> (<span class="params">dataParent</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> categoryArr = []</span><br><span class="line">  <span class="keyword">let</span> categoryParentFlag = <span class="literal">false</span></span><br><span class="line">  hexo.<span class="property">locals</span>.<span class="title function_">get</span>(<span class="string">&#x27;categories&#x27;</span>).<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">category</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (category.<span class="property">parent</span>) categoryParentFlag = <span class="literal">true</span></span><br><span class="line">    categoryArr.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">name</span>: category.<span class="property">name</span>,</span><br><span class="line">      <span class="attr">value</span>: category.<span class="property">length</span>,</span><br><span class="line">      <span class="attr">path</span>: category.<span class="property">path</span>,</span><br><span class="line">      <span class="attr">id</span>: category.<span class="property">_id</span>,</span><br><span class="line">      <span class="attr">parentId</span>: category.<span class="property">parent</span> || <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">  categoryParentFlag = categoryParentFlag &amp;&amp; dataParent === <span class="string">&#x27;true&#x27;</span></span><br><span class="line">  categoryArr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123; <span class="keyword">return</span> b.<span class="property">value</span> - a.<span class="property">value</span> &#125;)</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">translateListToTree</span> (<span class="params">data, parent</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> tree = []</span><br><span class="line">    <span class="keyword">let</span> temp</span><br><span class="line">    data.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (data[index].<span class="property">parentId</span> == parent) &#123;</span><br><span class="line">        <span class="keyword">let</span> obj = data[index];</span><br><span class="line">        temp = <span class="title function_">translateListToTree</span>(data, data[index].<span class="property">id</span>);</span><br><span class="line">        <span class="keyword">if</span> (temp.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          obj.<span class="property">children</span> = temp</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (tree.<span class="title function_">indexOf</span>())</span><br><span class="line">          tree.<span class="title function_">push</span>(obj)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> tree</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> categoryNameJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(categoryArr.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">category</span>) &#123; <span class="keyword">return</span> category.<span class="property">name</span> &#125;))</span><br><span class="line">  <span class="keyword">const</span> categoryArrJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(categoryArr)</span><br><span class="line">  <span class="keyword">const</span> categoryArrParentJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="title function_">translateListToTree</span>(categoryArr, <span class="string">&#x27;0&#x27;</span>))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;script id=&quot;categoriesChart&quot;&gt;</span></span><br><span class="line"><span class="string">    var color = document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ? &#x27;#4c4948&#x27; : &#x27;rgba(255,255,255,0.7)&#x27;</span></span><br><span class="line"><span class="string">    var categoriesChart = echarts.init(document.getElementById(&#x27;categories-chart&#x27;), &#x27;light&#x27;);</span></span><br><span class="line"><span class="string">    var categoryParentFlag = <span class="subst">$&#123;categoryParentFlag&#125;</span></span></span><br><span class="line"><span class="string">    var categoriesOption = &#123;</span></span><br><span class="line"><span class="string">      title: &#123;</span></span><br><span class="line"><span class="string">        text: &#x27;文章分类统计图&#x27;,</span></span><br><span class="line"><span class="string">        x: &#x27;center&#x27;,</span></span><br><span class="line"><span class="string">        textStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      legend: &#123;</span></span><br><span class="line"><span class="string">        top: &#x27;bottom&#x27;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;categoryNameJson&#125;</span>,</span></span><br><span class="line"><span class="string">        textStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      tooltip: &#123;</span></span><br><span class="line"><span class="string">        trigger: &#x27;item&#x27;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      series: []</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    categoriesOption.series.push(</span></span><br><span class="line"><span class="string">      categoryParentFlag ? </span></span><br><span class="line"><span class="string">      &#123;</span></span><br><span class="line"><span class="string">        nodeClick :false,</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;sunburst&#x27;,</span></span><br><span class="line"><span class="string">        radius: [&#x27;15%&#x27;, &#x27;90%&#x27;],</span></span><br><span class="line"><span class="string">        center: [&#x27;50%&#x27;, &#x27;55%&#x27;],</span></span><br><span class="line"><span class="string">        sort: &#x27;desc&#x27;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;categoryArrParentJson&#125;</span>,</span></span><br><span class="line"><span class="string">        itemStyle: &#123;</span></span><br><span class="line"><span class="string">          borderColor: &#x27;#fff&#x27;,</span></span><br><span class="line"><span class="string">          borderWidth: 2,</span></span><br><span class="line"><span class="string">          emphasis: &#123;</span></span><br><span class="line"><span class="string">            focus: &#x27;ancestor&#x27;,</span></span><br><span class="line"><span class="string">            shadowBlur: 10,</span></span><br><span class="line"><span class="string">            shadowOffsetX: 0,</span></span><br><span class="line"><span class="string">            shadowColor: &#x27;rgba(255, 255, 255, 0.5)&#x27;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      :</span></span><br><span class="line"><span class="string">      &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;pie&#x27;,</span></span><br><span class="line"><span class="string">        radius: [30, 80],</span></span><br><span class="line"><span class="string">        roseType: &#x27;area&#x27;,</span></span><br><span class="line"><span class="string">        label: &#123;</span></span><br><span class="line"><span class="string">          color: color,</span></span><br><span class="line"><span class="string">          formatter: &#x27;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;categoryArrJson&#125;</span>,</span></span><br><span class="line"><span class="string">        itemStyle: &#123;</span></span><br><span class="line"><span class="string">          emphasis: &#123;</span></span><br><span class="line"><span class="string">            shadowBlur: 10,</span></span><br><span class="line"><span class="string">            shadowOffsetX: 0,</span></span><br><span class="line"><span class="string">            shadowColor: &#x27;rgba(255, 255, 255, 0.5)&#x27;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    )</span></span><br><span class="line"><span class="string">    categoriesChart.setOption(categoriesOption);</span></span><br><span class="line"><span class="string">    window.addEventListener(&#x27;resize&#x27;, () =&gt; &#123; </span></span><br><span class="line"><span class="string">      categoriesChart.resize();</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    categoriesChart.on(&#x27;click&#x27;, &#x27;series&#x27;, (event) =&gt; &#123;</span></span><br><span class="line"><span class="string">      if(event.data.path) window.location.href = &#x27;/&#x27; + event.data.path;</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">  &lt;/script&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>更多统计图的自定义属性可以查看 <a href="https://echarts.apache.org/zh/option.html">ECharts 配置项文档</a>，根据自行喜好对 ECharts 统计图进行修改。</p><h3 id="5-使用统计图"><a href="#5-使用统计图" class="headerlink" title="5. 使用统计图"></a>5. 使用统计图</h3><p>在上文新建的 <code>[Blogroot]\source\charts\index.md</code> 文件中添加以下内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 文章发布时间统计图 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;posts-chart&quot;</span> <span class="attr">data-start</span>=<span class="string">&quot;2021-01&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-radius: 8px; height: 300px; padding: 10px;&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;!-- 文章标签统计图 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tags-chart&quot;</span> <span class="attr">data-length</span>=<span class="string">&quot;10&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-radius: 8px; height: 300px; padding: 10px;&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;!-- 文章分类统计图 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;categories-chart&quot;</span> <span class="attr">data-parent</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-radius: 8px; height: 300px; padding: 10px;&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>当然也可以在其他页面引入文章统计图，如果出现图表显示不全的现象可以修改 <code>div</code> 的 <code>height</code> 属性。。</p><ul><li><code>posts-chart</code> 的 <code>data-start=&quot;2021-01&quot;</code> 属性表示文章发布时间统计图仅显示 <code>2021-01</code> 及以后的文章数据。</li><li><code>tags-chart</code> 的 <code>data-length=&quot;10&quot;</code> 属性表示仅显示排名前 <code>10</code> 的标签。</li><li><code>categories-chart</code> 的 <code>data-parent=&quot;true&quot;</code> 属性表示 <code>有子分类</code> 时以旭日图显示分类，其他 <code>无子分类</code> 或 <code>设置为false</code> 或 <code>不设置该属性</code> 或 <code>设置为其他非true属性</code> 情况都以饼状图显示分类。</li></ul><p>具体展示效果如下：</p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250119223013608.png" alt="image-20250119222530001"></p><h4 id="5-1-在归档页使用统计图"><a href="#5-1-在归档页使用统计图" class="headerlink" title="5.1 在归档页使用统计图"></a>5.1 在归档页使用统计图</h4><p><code>[Blogroot]\themes\butterfly\layout\archive.pug</code></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  include ./includes/mixins/article-sort.pug</span><br><span class="line">  #archive</span><br><span class="line"><span class="addition">+   &lt;div id=&quot;posts-chart&quot; data-start=&quot;2021-01&quot; style=&quot;height: 300px; padding: 10px;&quot;&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>或者写成 pug 文件语法 <code>#posts-chart(data-start=&quot;2021-01&quot; style=&quot;height: 300px; padding: 10px;&quot;)</code>。</p><h4 id="5-2-在分类页使用统计图"><a href="#5-2-在分类页使用统计图" class="headerlink" title="5.2 在分类页使用统计图"></a>5.2 在分类页使用统计图</h4><p>总分类页 <code>/categories</code>，在 <code>[Blogroot]\themes\butterfly\layout\includes\page\categories.pug</code> 添加：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  .category-lists!= list_categories()</span><br><span class="line"><span class="addition">+ &lt;div id=&quot;categories-chart&quot; data-parent=&quot;true&quot; style=&quot;height: 300px; padding: 10px;&quot;&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>各分类页 <code>/categories/[分类]</code>，在 <code>[Blogroot]\themes\butterfly\layout\category.pug</code> 添加：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  if theme.category_ui == &#x27;index&#x27;</span><br><span class="line">    include ./includes/mixins/post-ui.pug</span><br><span class="line">    #recent-posts.recent-posts.category_ui</span><br><span class="line">      +postUI</span><br><span class="line">      include includes/pagination.pug</span><br><span class="line">  else</span><br><span class="line">    include ./includes/mixins/article-sort.pug</span><br><span class="line">    #category</span><br><span class="line"><span class="addition">+     &lt;div id=&quot;categories-chart&quot; data-parent=&quot;true&quot; style=&quot;height: 300px; padding: 10px;&quot;&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>或者写成 pug 文件语法 <code>#categories-chart(data-parent=&quot;true&quot; style=&quot;height: 300px; padding: 10px;&quot;)</code>。</p><h4 id="5-3-在标签页使用统计图"><a href="#5-3-在标签页使用统计图" class="headerlink" title="5.3 在标签页使用统计图"></a>5.3 在标签页使用统计图</h4><p>总标签页 <code>/tags</code>，在 <code>[Blogroot]\themes\butterfly\layout\includes\page\tags.pug</code> 添加：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  .tag-cloud-list.is-center</span><br><span class="line">    !=cloudTags(&#123;source: site.tags, orderby: page.orderby || &#x27;random&#x27;, order: page.order || 1, minfontsize: 1.2, maxfontsize: 2.1, limit: 0, unit: &#x27;em&#x27;&#125;)</span><br><span class="line"><span class="addition">+ &lt;div id=&quot;tags-chart&quot; data-length=&quot;10&quot; style=&quot;height: 300px; padding: 10px;&quot;&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>各标签页 <code>/tags/[标签]</code>，在 <code>[Blogroot]\themes\butterfly\layout\tag.pug</code> 添加：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  if theme.tag_ui == &#x27;index&#x27;</span><br><span class="line">    include ./includes/mixins/post-ui.pug</span><br><span class="line">    #recent-posts.recent-posts</span><br><span class="line">      +postUI</span><br><span class="line">      include includes/pagination.pug</span><br><span class="line">  else</span><br><span class="line">    include ./includes/mixins/article-sort.pug</span><br><span class="line">    #tag</span><br><span class="line"><span class="addition">+     &lt;div id=&quot;tags-chart&quot; data-length=&quot;10&quot; style=&quot;height: 300px; padding: 10px;&quot;&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>或者写成 pug 文件语法 <code>#tags-chart(data-length=&quot;10&quot; style=&quot;height: 300px; padding: 10px;&quot;)</code>。</p><h3 id="6-适配明暗模式"><a href="#6-适配明暗模式" class="headerlink" title="6. 适配明暗模式"></a>6. 适配明暗模式</h3><p>统计图内部文字的颜色通过 <code>chart.js</code> 文件中的 <code>var color = &#39;#000&#39;</code> 设置，如果需要适配博客明暗模式更改统计图文字颜色，以 butterfly 主题为例，可以修改三处的 <code>color</code>:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- var color = &#x27;#000&#x27;</span></span><br><span class="line"><span class="addition">+ var color = document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ? &#x27;#4c4948&#x27; : &#x27;rgba(255,255,255,0.7)&#x27;</span></span><br></pre></td></tr></table></figure><p>同时引入自定义 js 文件并添加以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">switchPostChart</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 这里为了统一颜色选取的是“明暗模式”下的两种字体颜色，也可以自己定义</span></span><br><span class="line">  <span class="keyword">let</span> color = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-theme&#x27;</span>) === <span class="string">&#x27;light&#x27;</span> ? <span class="string">&#x27;#4C4948&#x27;</span> : <span class="string">&#x27;rgba(255,255,255,0.7)&#x27;</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;posts-chart&#x27;</span>) &amp;&amp; postsOption) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> postsOptionNew = postsOption</span><br><span class="line">      postsOptionNew.<span class="property">title</span>.<span class="property">textStyle</span>.<span class="property">color</span> = color</span><br><span class="line">      postsOptionNew.<span class="property">xAxis</span>.<span class="property">nameTextStyle</span>.<span class="property">color</span> = color</span><br><span class="line">      postsOptionNew.<span class="property">yAxis</span>.<span class="property">nameTextStyle</span>.<span class="property">color</span> = color</span><br><span class="line">      postsOptionNew.<span class="property">xAxis</span>.<span class="property">axisLabel</span>.<span class="property">color</span> = color</span><br><span class="line">      postsOptionNew.<span class="property">yAxis</span>.<span class="property">axisLabel</span>.<span class="property">color</span> = color</span><br><span class="line">      postsOptionNew.<span class="property">xAxis</span>.<span class="property">axisLine</span>.<span class="property">lineStyle</span>.<span class="property">color</span> = color</span><br><span class="line">      postsOptionNew.<span class="property">yAxis</span>.<span class="property">axisLine</span>.<span class="property">lineStyle</span>.<span class="property">color</span> = color</span><br><span class="line">      postsOptionNew.<span class="property">series</span>[<span class="number">0</span>].<span class="property">markLine</span>.<span class="property">data</span>[<span class="number">0</span>].<span class="property">label</span>.<span class="property">color</span> = color</span><br><span class="line">      postsChart.<span class="title function_">setOption</span>(postsOptionNew)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;tags-chart&#x27;</span>) &amp;&amp; tagsOption) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> tagsOptionNew = tagsOption</span><br><span class="line">      tagsOptionNew.<span class="property">title</span>.<span class="property">textStyle</span>.<span class="property">color</span> = color</span><br><span class="line">      tagsOptionNew.<span class="property">xAxis</span>.<span class="property">nameTextStyle</span>.<span class="property">color</span> = color</span><br><span class="line">      tagsOptionNew.<span class="property">yAxis</span>.<span class="property">nameTextStyle</span>.<span class="property">color</span> = color</span><br><span class="line">      tagsOptionNew.<span class="property">xAxis</span>.<span class="property">axisLabel</span>.<span class="property">color</span> = color</span><br><span class="line">      tagsOptionNew.<span class="property">yAxis</span>.<span class="property">axisLabel</span>.<span class="property">color</span> = color</span><br><span class="line">      tagsOptionNew.<span class="property">xAxis</span>.<span class="property">axisLine</span>.<span class="property">lineStyle</span>.<span class="property">color</span> = color</span><br><span class="line">      tagsOptionNew.<span class="property">yAxis</span>.<span class="property">axisLine</span>.<span class="property">lineStyle</span>.<span class="property">color</span> = color</span><br><span class="line">      tagsOptionNew.<span class="property">series</span>[<span class="number">0</span>].<span class="property">markLine</span>.<span class="property">data</span>[<span class="number">0</span>].<span class="property">label</span>.<span class="property">color</span> = color</span><br><span class="line">      tagsChart.<span class="title function_">setOption</span>(tagsOptionNew)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;categories-chart&#x27;</span>) &amp;&amp; categoriesOption) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> categoriesOptionNew = categoriesOption</span><br><span class="line">      categoriesOptionNew.<span class="property">title</span>.<span class="property">textStyle</span>.<span class="property">color</span> = color</span><br><span class="line">      categoriesOptionNew.<span class="property">legend</span>.<span class="property">textStyle</span>.<span class="property">color</span> = color</span><br><span class="line">      <span class="keyword">if</span> (!categoryParentFlag) &#123; categoriesOptionNew.<span class="property">series</span>[<span class="number">0</span>].<span class="property">label</span>.<span class="property">color</span> = color &#125;</span><br><span class="line">      categoriesChart.<span class="title function_">setOption</span>(categoriesOptionNew)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;mode-button&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123; <span class="built_in">setTimeout</span>(switchPostChart, <span class="number">100</span>) &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-Hexo-三连"><a href="#7-Hexo-三连" class="headerlink" title="7. Hexo 三连"></a>7. Hexo 三连</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> butterfly魔改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Boss直聘反爬解决办法</title>
      <link href="/2025/01/19/2025_01/boss%E7%9B%B4%E8%81%98%E5%8F%8D%E7%88%AC%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2025/01/19/2025_01/boss%E7%9B%B4%E8%81%98%E5%8F%8D%E7%88%AC%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="方法一：更换网络"><a href="#方法一：更换网络" class="headerlink" title="方法一：更换网络"></a>方法一：更换网络</h3><p>例如使用家里面<code>wifi</code>被网站进行了反爬的限制，此时只需要更换手机的热点，重新爬取即可，若是手机的<code>wifi</code>也被限制，则打开手机的飞行模式，再重启热点，此时就可以修改手机<code>wifi</code>的网络<code>IP</code>地址，接着进行爬取</p><h3 id="方法二：浏览器复用"><a href="#方法二：浏览器复用" class="headerlink" title="方法二：浏览器复用"></a>方法二：浏览器复用</h3><h4 id="浏览器复用是什么？"><a href="#浏览器复用是什么？" class="headerlink" title="浏览器复用是什么？"></a>浏览器复用是什么？</h4><p>在Web自动化测试中，通常要求在成功扫码登陆后才能执行后续操作。这里boss直聘的反爬操作中，会经过人工输入验证码，然后才能接着进行爬虫操作，但是每次爬取一个字段的时候，就会新打开一个浏览器，导致登录状态取消。采用浏览器复用，可以帮助我们保持一个浏览器的开启，不会在运行过程中，新打开一个浏览器。</p><h4 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h4><p>① 首先打开<code>cmd</code>，输入<code>netstat -ano | findstr &quot;9222&quot;</code>查看<code>9222</code>端口是否被占用</p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250119191050444.png" alt="image-20250119185029052"></p><p>如果运行结果如上，则说明<code>9222</code>端口没有被占用</p><p>② 修改chrome浏览器设置，按照下图将<code>关闭 Google Chrome 后继续运行后台应用</code>按钮关闭</p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250119191050445.png" alt="image-20250119185219755"></p><p>③ 在<code>cmd</code>中输入<code>chrome.exe -remote-debugging-port=9222</code>会弹出一个浏览器页面，此时我们登录我们的boss账号进行爬取操作即可</p>]]></content>
      
      
      <categories>
          
          <category> 毕业设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu系统基础操作和使用</title>
      <link href="/2025/01/15/2025_01/Ubuntu%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
      <url>/2025/01/15/2025_01/Ubuntu%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h2><p><a href="https://so.csdn.net/so/search?q=Ubuntu%E7%B3%BB%E7%BB%9F&spm=1001.2101.3001.7020">Ubuntu系统</a> 是一种基于Linux的 <a href="https://so.csdn.net/so/search?q=%E5%BC%80%E6%BA%90%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F&spm=1001.2101.3001.7020">开源操作系统</a>，它由南非的商业人士马克·舍特尔沃斯创立，其目标是提供一个易于使用、免费且开放的操作系统</p><p>这里省略安装教程，采用版本为22.04。</p><h2 id="二、Ubuntu系统的基础操作"><a href="#二、Ubuntu系统的基础操作" class="headerlink" title="二、Ubuntu系统的基础操作"></a>二、Ubuntu系统的基础操作</h2><h3 id="2-1-页面介绍"><a href="#2-1-页面介绍" class="headerlink" title="2.1 页面介绍"></a>2.1 页面介绍</h3><p>页面很清晰易懂，任务栏——位于屏幕顶部的横条通常包含了应用程序启动器、系统菜单、通知区域等；通知区域——通常位于任务栏右侧，包含了系统通知、网络连接、音量控制等快捷操作……这里不做过多介绍</p><h3 id="2-2-应用安装和卸载"><a href="#2-2-应用安装和卸载" class="headerlink" title="2.2 应用安装和卸载"></a>2.2 应用安装和卸载</h3><p>在Ubuntu系统中可以通过软件中心或命令行来安装和卸载应用程序。</p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250115185353308.png" alt="下载界面"></p><h3 id="2-3-如何打开中终端"><a href="#2-3-如何打开中终端" class="headerlink" title="2.3 如何打开中终端"></a>2.3 如何打开中终端</h3><ol><li>在Ubuntu系统中可以通过在应用程序菜单中搜索“终端”或使用快捷键<code>Ctrl+Alt+T</code>来打开终端。</li><li>常用命令：</li></ol><ul><li>cd：用于切换当前工作目录。例如，<code>cd Documents</code> 将当前目录更改为 <code>Documents</code>文件夹。</li><li>ls：用于列出当前目录中的文件和文件夹。例如，<code>ls -l </code>将以详细格式显示文件列表。</li><li>mkdir：用于创建新的文件夹。例如，<code>mkdir myfolder</code>将创建一个名为<code>myfolder</code>的文件夹。</li><li>rm：用于删除文件和文件夹。例如，<code>rm myfile</code>将删除名为<code>myfile</code>的文件。</li><li>cp：用于复制文件和文件夹。例如，<code>cp myfile newfile</code>将复制<code>myfile</code>并将其命名为<code>newfile</code>。</li><li>mv：用于移动文件和文件夹，或者重命名文件和文件夹。例如，<code>mv myfile newlocation</code>将<code>myfile</code>移动到<code>newlocation</code>。</li><li>sudo：用于以管理员权限执行命令。例如，<code>sudo apt-get update</code>将更新软件包列表。</li><li>grep：用于在文件中查找指定的文本模式。例如，<code>grep &quot;keyword&quot; myfile</code>将在<code>myfile</code>文件中查找包含”keyword”的行。</li></ul><ol start="3"><li>命令的参数和选项：许多命令都有不同的参数和选项，可以根据需求来使用。可以通过在终端中输入命令名后加上–help来查看命令的帮助文档，了解可用的参数和选项。</li></ol><h2 id="三、常见问题和解决方案"><a href="#三、常见问题和解决方案" class="headerlink" title="三、常见问题和解决方案"></a>三、常见问题和解决方案</h2><ol><li><p>忘记了sudo密码该怎么办？<br>解决方案：如果忘记了sudo密码，可以通过重置root密码来解决。在启动时，进入“恢复模式”并选择<code>root shell</code>选项。然后使用命令<code>passwd &lt;username&gt;</code>来更改sudo用户的密码。</p></li><li><p>无法添加软件源，显示错误信息 怎么办？<br>解决方案：当添加软件源时，可能会遇到各种错误。首先，请确保输入的软件源地址正确。然后，检查网络连接是否正常。还可以在终端中运行命令<code>sudo apt update</code>来获取更详细的错误信息，并根据错误信息解决问题。</p></li><li><p>无法安装软件包，显示依赖项错误。<br>解决方案：当安装软件包时，可能会遇到依赖项错误。请检查错误消息中提到的依赖项，并尝试使用命令<code>sudo apt install &lt;dependency&gt;</code>来安装缺少的依赖项。如果问题仍然存在，可以尝试使用命令<code>sudo apt --fix-broken install</code>来修复依赖项问题。</p></li><li><p>问题：系统运行缓慢或出现错误。<br>解决方案：如果系统运行缓慢或出现错误，可能是由于系统资源不足或软件冲突引起的。可以尝试清理系统垃圾文件、关闭不必要的后台进程、升级硬件或重新安装操作系统来改善系统性能。</p></li><li><p>问题：无法删除用户，显示错误消息。<br>解决方案：当删除用户时，可能会遇到错误。请确保有足够的权限以及正确的用户名。还可以尝试在删除用户之前，先检查并解决该用户是否仍然拥有文件或进程。可以使用命令<code>sudo lsof -u &lt;username&gt;</code>来查找该用户的活动进程，并使用命令<code>kill &lt;PID&gt;</code>来终止进程。</p></li></ol><p>摘自：<a href="https://blog.csdn.net/Long_xu/article/details/135039596">Ubuntu系统入门指南：基础操作和使用-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 一生一芯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一生一芯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim基本用法</title>
      <link href="/2025/01/15/2025_01/vim%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
      <url>/2025/01/15/2025_01/vim%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h2><ul><li>vim filename可直接新建文件，打开文件后默认进入命令模式。</li><li>命令模式下可以移动光标或者进行删除、复制、粘贴。</li><li>移动光标常用命令：<ul><li>方向键或者h（左）、j（下）、k（上）、l（右）：光标移动一个字符。</li><li>[Ctrl] + [f]：向下翻页。</li><li>[Ctrl] + [b]：向上翻页。</li><li>0 或 [Home]：光标移动到当前行最前面的字符。</li><li>$ 或 [End]：光标移动到当前行最后面的字符。</li><li>G:光标移动到文件最后一行。</li><li>gg：光标移动到文件第一行。</li></ul></li><li>删除、复制、粘贴常用命令：<ul><li>x：向后删除一个字符。</li><li>X：向前删除一个字符。</li><li>dd：删除当前行。</li><li>ndd：n为数字，删除包含当前行的n行。</li><li>yy：复制当前行。</li><li>nyy：n为数字，复制包含当前行的n行。</li><li>p：粘贴到当前行的下一行。</li><li>P：粘贴到当前行的上一行。</li><li>u：撤销上一个动作。</li><li>[Ctrl] + [r]：重做上一个动作。</li></ul></li></ul><h2 id="编辑模式："><a href="#编辑模式：" class="headerlink" title="编辑模式："></a>编辑模式：</h2><ul><li>在命令模式下按i进入编辑模式。编辑模式下可以看到“– INSERT –”的提示。</li><li>编辑完成后按esc键退出到命令模式中。</li></ul><h2 id="末行模式："><a href="#末行模式：" class="headerlink" title="末行模式："></a>末行模式：</h2><ul><li>在命令模式下按:（英文冒号）进入末行模式。该模式下可以进行设置、保存、退出等操作。</li><li>按esc键可以退出到命令模式中。</li><li>末行模式下常用命令：<ul><li>:w：保存文件。</li><li>:q：不保存，退出vim。</li><li>:wq：保存并退出vim。</li><li>:q!：不保存，强制退出vim。</li><li>:wq!：保存并强制退出vim。</li><li>:set nu：显示行号。</li><li>:set nonu：取消行号。</li><li>:set ff&#x3D;unix：设置文件格式为unix格式。</li></ul></li></ul><p>参考此篇blog：</p><blockquote><p>作者：拉普拉斯妖kk<br>链接：<a href="https://juejin.cn/post/7015514944527400973">https://juejin.cn/post/7015514944527400973</a><br>来源：稀土掘金</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 一生一芯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一生一芯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一生一芯_PA0</title>
      <link href="/2025/01/15/2025_01/%E4%B8%80%E7%94%9F%E4%B8%80%E8%8A%AF_PA0/"/>
      <url>/2025/01/15/2025_01/%E4%B8%80%E7%94%9F%E4%B8%80%E8%8A%AF_PA0/</url>
      
        <content type="html"><![CDATA[<h2 id="First-Exploration-with-GNU-Linux"><a href="#First-Exploration-with-GNU-Linux" class="headerlink" title="First Exploration with GNU&#x2F;Linux"></a>First Exploration with GNU&#x2F;Linux</h2><p>查看<code>Ubuntu</code> 占用了多少磁盘空间</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure><p>关闭系统</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poweroff</span><br></pre></td></tr></table></figure><h2 id="Installing-Tools"><a href="#Installing-Tools" class="headerlink" title="Installing Tools"></a>Installing Tools</h2><p>在 GUN&#x2F;Linux中，可以通过包管理器，采用命令行下载和安装软件，不同的 GNU&#x2F;Linux 发行版有不同的包管理器。在 <code>Ubuntu</code> 中，包管理器称为 <code>apt</code>。</p><h3 id="检查网络连接"><a href="#检查网络连接" class="headerlink" title="检查网络连接"></a>检查网络连接</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用以下命令</span></span><br><span class="line">ping mirrors.tuna.tsinghua.edu.cn -c 4</span><br><span class="line"><span class="comment"># 或者使用下面的命令</span></span><br><span class="line">ping www.baidu.com -c 4</span><br></pre></td></tr></table></figure><p>若是<code>ping</code>成功，返回入图片的内容则网络连接成功</p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250114124539779.jpg" alt="检查网络"></p><h3 id="设置-APT-源文件"><a href="#设置-APT-源文件" class="headerlink" title="设置 APT 源文件"></a>设置 APT 源文件</h3><p>执行以下命令更新 APT 源文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/archive.ubuntu.com/mirrors.tuna.tsinghua.edu.cn/g&quot;</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>可能会收到以下报错信息：<code>sed: /etc/apt/sources.list: Permission denied</code></p><p>这是因为 APT 源文件归 root 所有，ysyx（我的用户名）没有权限修改它，使用<code>sudo</code>，在指令前面加上<code>sudo</code>意味着超级管理员权限，但是在使用<code>sudo</code>之前，应该先切换到<code>root</code>用户，并将账户添加到<code>sudo</code>组中。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行以下命令</span></span><br><span class="line">su -</span><br><span class="line"><span class="comment"># 在Password:后面输入密码</span></span><br><span class="line"><span class="comment"># 此时切换到root用户：</span></span><br><span class="line">root@hostname:/home/username#</span><br><span class="line"><span class="comment"># 依次执行如下指令</span></span><br><span class="line">adduser username <span class="built_in">sudo</span>  <span class="comment"># Change `username` to your user name</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">whoami</span></span><br></pre></td></tr></table></figure><p>执行完上述指令后，用户名<code>ysyx</code>便在<code>sudo</code>组中，此时执行更新APT源文件的指令，执行完后用如下指令查看刚刚更新的行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="更新-APT-软件包信息"><a href="#更新-APT-软件包信息" class="headerlink" title="更新 APT 软件包信息"></a>更新 APT 软件包信息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update</span><br></pre></td></tr></table></figure><p>不使用<code>sudo</code>会报如下错误：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E: Could not open lock file /var/lib/apt/lists/lock - open (13: Permission denied)</span><br><span class="line">E: Unable to lock directory /var/lib/apt/lists/</span><br></pre></td></tr></table></figure><h3 id="安装-PA-工具"><a href="#安装-PA-工具" class="headerlink" title="安装 PA 工具"></a>安装 PA 工具</h3><p>在<code>sudo</code>权限下执行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt-get install build-essential    <span class="comment"># build-essential packages, include binary utilities, gcc, make, and so on</span></span><br><span class="line">apt-get install man                <span class="comment"># on-line reference manual</span></span><br><span class="line">apt-get install gcc-doc            <span class="comment"># on-line reference manual for gcc</span></span><br><span class="line">apt-get install gdb                <span class="comment"># GNU debugger</span></span><br><span class="line">apt-get install git                <span class="comment"># revision control system</span></span><br><span class="line">apt-get install libreadline-dev    <span class="comment"># a library used later</span></span><br><span class="line">apt-get install libsdl2-dev        <span class="comment"># a library used later</span></span><br></pre></td></tr></table></figure><h3 id="安装中文输入法"><a href="#安装中文输入法" class="headerlink" title="安装中文输入法"></a>安装中文输入法</h3><p>参考 <a href="https://blog.csdn.net/fr16021028/article/details/125891812"><strong>教程</strong></a> 注意，最后的输入源，可能和此篇文章不一样，在“键盘”菜单栏中可以找到输入源</p><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250114152818931.jpg" alt="切换输入源"></p><h2 id="配置vim"><a href="#配置vim" class="headerlink" title="配置vim"></a>配置vim</h2><p>下载<code>vim</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install vim</span><br></pre></td></tr></table></figure><p>参考“南京大学‘计算机系统基础’实验_PA0_的配置<code>vim</code>体会<code>vim</code>编辑器的使用</p><h3 id="启用语法高亮"><a href="#启用语法高亮" class="headerlink" title="启用语法高亮"></a>启用语法高亮</h3><p><code>vim</code>许多改进默认禁用的，这里启动一下<code>vim</code>的语法高亮配置，修改<code>vim</code>配置文件。该文件名为<code>.vimrc</code>，位于<code>/etc/vim</code>目录下</p><p>我们首先使用命令将其复制到主目录<code>cp</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/vim/vimrc ~/.vimrc</span><br></pre></td></tr></table></figure><p>在执行上述命令时，若尚未进入主目录，先切换到主目录：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br></pre></td></tr></table></figure><p>使用<code>ls</code>列出文件，看不到<code>.vimrc</code>刚刚复制的文件。这是因为名称以 <code>.</code>开头的文件在 GNU&#x2F;Linux 中是隐藏文件。要显示隐藏文件，使用<code>ls</code>选项<code>-a</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -a</span><br></pre></td></tr></table></figure><p>然后<code>.vimrc</code>使用以下方式打开<code>vim</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .vimrc</span><br></pre></td></tr></table></figure><p><a href="https://www.ccjinblog.info/2025/01/15/vim%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/">vim基本用法</a>（见点击链接直达）</p><p>之后通过修改以下内容，通过GUN diff format的格式进行展示修改</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--- before modification</span></span><br><span class="line"><span class="comment">+++ after modification</span></span><br><span class="line"><span class="meta">@@ -17,3 +17,3 @@</span></span><br><span class="line"> &quot; Vim5 and later versions support syntax highlighting. Uncommenting the next</span><br><span class="line"> &quot; line enables syntax highlighting by default.</span><br><span class="line"><span class="deletion">-&quot;syntax on</span></span><br><span class="line"><span class="addition">+syntax on</span></span><br></pre></td></tr></table></figure><h4 id="GNU-diff-格式"><a href="#GNU-diff-格式" class="headerlink" title="GNU diff 格式"></a><strong>GNU diff 格式</strong></h4><p>GNU diff 格式是一种常用的文件差异展示方式，显示了文件的修改内容。解释如下：</p><ul><li><p><strong><code>--- before modification</code></strong><br>表示修改前的文件内容。</p></li><li><p><strong><code>+++ after modification</code></strong><br>表示修改后的文件内容。</p></li><li><p><strong><code>@@ -17,3 +17,3 @@</code></strong><br>这行称为“hunk header”，包含上下文信息：</p><ul><li><code>-17,3</code> 表示原文件从第 17 行开始，影响了 3 行。</li><li><code>+17,3</code> 表示修改后的文件同样从第 17 行开始，影响了 3 行。</li></ul></li><li><p><strong>修改内容本身</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">diff复制代码-&quot;syntax on</span><br><span class="line">+syntax on</span><br></pre></td></tr></table></figure><ul><li>以 <code>-</code> 开头的行是 <strong>原文件</strong> 中的内容。</li><li>以 <code>+</code> 开头的行是 <strong>修改后</strong> 的内容。<br>在这里，<code>&quot;syntax on</code> 被修改为 <code>syntax on</code>（去掉了行首的注释符号 <code>&quot;</code>，启用了语法高亮功能）。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 一生一芯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一生一芯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>枚举</title>
      <link href="/2025/01/13/2025_01/%E5%A4%8D%E8%AF%95%E6%9C%BA%E8%AF%95%E5%A4%8D%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
      <url>/2025/01/13/2025_01/%E5%A4%8D%E8%AF%95%E6%9C%BA%E8%AF%95%E5%A4%8D%E4%B9%A0%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a><strong>题目链接：</strong></h4><p><a href="https://leetcode.cn/problems/count-good-triplets/description/?envType=problem-list-v2&envId=enumeration">https://leetcode.cn/problems/count-good-triplets/description/?envType=problem-list-v2&amp;envId=enumeration</a></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p><img src="https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250113233233070.png" alt="题目描述"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">countGoodTriplets</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; arr, <span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; arr.<span class="built_in">size</span>() - <span class="number">2</span>; ++i)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; arr.<span class="built_in">size</span>() - <span class="number">1</span>; ++j)&#123;</span><br><span class="line">                 <span class="keyword">for</span> (<span class="type">int</span> k = j + <span class="number">1</span>; k &lt; arr.<span class="built_in">size</span>(); ++k) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">abs</span>(arr[i] - arr[j]) &lt;= a &amp;&amp; </span><br><span class="line">                        <span class="built_in">abs</span>(arr[j] - arr[k]) &lt;= b &amp;&amp; </span><br><span class="line">                        <span class="built_in">abs</span>(arr[i] - arr[k]) &lt;= c) ++res;</span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//int abs(int x)求绝对值，如果 x 是正数，则返回 x，如果 x 是负数，则返回它的相反数，即 -x。如果 x 是 0，则返回 0。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 计算机机试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2025/01/10/2025_01/%E7%AC%AC%E4%B8%80%E7%AF%87blog/"/>
      <url>/2025/01/10/2025_01/%E7%AC%AC%E4%B8%80%E7%AF%87blog/</url>
      
        <content type="html"><![CDATA[<p>距离考研结束已经20天了，三天后回家，就应该准备复试内容，接着学操作系统和英语了</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<div class="note warning modern"><p><b>非商免字体、网图</b><br>等资源未经授权仅限个人使用，不得用于商业用途。本站平时仅用于交流和学习，如涉及侵权请联系站长删除对应资源，谢谢！ —— 致版权方</p></div><details class="folding-tag" purple><summary> 查看网站更新日志 </summary>              <div class='content'>              <div class="timeline  blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>魔改ing</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2025-01-23</p></div></div><div class='timeline-item-content'><ol><li>增加了gitalk自动提交<code>issues</code>的配置，在<code>_config.butterfly.yml</code>中的<code>gitalk</code>配置项中加入 <code>createIssueManually: false</code></li><li>个人信息卡片背景图</li><li>增加了页脚Github徽标，没有采用时钟样式，配置在<code>_config.yml</code>文件中，采用插件<code>npm install hexo-butterfly-footer-beautify --save</code></li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2025-01-22</p></div></div><div class='timeline-item-content'><ol><li>首页样式的修改</li><li>butterfly魔改时间轴的插入（外挂标签的应用）</li><li>分栏<code>tab</code>（外挂标签的应用）</li><li><code>hexo-magnet</code> 插件 的使用：<ul><li>自定义 tags 或 categories 的排列和展示</li><li>自定义 tags 或 categories 的展示图标，名称</li><li>自定义排列的行数，默认 2 行</li></ul></li><li>首页轮播图的插入</li><li>卡片透明度的的修改（暂时弃用）</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2025-01-21</p></div></div><div class='timeline-item-content'><ol><li><p>外挂标签的引入（店长）</p></li><li><p>网站恶搞标题</p></li><li><p>gitalk评论系统</p></li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2025-01-20</p></div></div><div class='timeline-item-content'><ol><li><p>文章标题居中显示</p></li><li><p>文章页波浪线（安知鱼）</p></li></ol></div></div></div>              </div>            </details><h2 id="技术栈-框架"><a href="#技术栈-框架" class="headerlink" title="技术栈&amp;框架"></a>技术栈&amp;框架</h2><p>博客框架：Hexo  7.3.0<br>主题：Butterfly<br>源码仓库：<a href="https://github.com/">Github</a><br>图床：阿里云oss存储平台</p><h2 id="关于本人"><a href="#关于本人" class="headerlink" title="关于本人"></a>关于本人</h2><p>昵称：未闻花名<br>性别：♂<br>生日：200X.04.24<br>身份：某正在奋力考研的大四学生<br>地点：暂时北方某地<br>邮箱：<a href="mailto:&#x33;&#x32;&#x30;&#54;&#48;&#54;&#x33;&#x31;&#52;&#53;&#x40;&#x71;&#x71;&#46;&#99;&#111;&#109;">&#x33;&#x32;&#x30;&#54;&#48;&#54;&#x33;&#x31;&#52;&#53;&#x40;&#x71;&#x71;&#46;&#99;&#111;&#109;</a></p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p>Fomalhaut🥝（详见友链，参考up的博客进行修改，非常感谢up的帮助）</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>文章统计</title>
      <link href="/charts/index.html"/>
      <url>/charts/index.html</url>
      
        <content type="html"><![CDATA[<script src="https://npm.elemecdn.com/echarts@4.9.0/dist/echarts.min.js"></script><!-- 文章发布时间统计图 --><div id="posts-chart" data-start="2024-12" style="border-radius: 8px; height: 300px; padding: 8px;"></div><!-- 文章标签统计图 --><div id="tags-chart" data-length="10" style="border-radius: 8px; height: 300px; padding: 10px;"></div><!-- 文章分类统计图 --><div id="categories-chart" data-parent="true" style="border-radius: 8px; height: 300px; padding: 10px;"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>我的一些碎碎念</title>
      <link href="/shuoshuo/index.html"/>
      <url>/shuoshuo/index.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="1d4832cd1f51b0d6e6e977104b6749454d1ea7974cff0d2308d30327243bc3a0">9d4fe9047ed7fb9f3dc40dc89cc0e0da86f11b64d8364f8a60cf426b5e026d5290b9581438e62fb10d6284d1296408f08adce9b0b680cfea60f65a3b223267fcaa4ba459fa17bc9b99877f0afbc0a1bb7c46b314c386c3a3bbd7cec42328bb39306e78205150790ee6049b74cb001e1e5271e7e5f83eb5249232f30630815553e0b062bd09eaf65dde3c3b3a5777e20170db1537ff863daa8efcf00f84e74935f6830e7bdea1be279a616f5ece6ea13f83fb46cd01730c0506c39803af5a037a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">这里需要密码才可查看哦</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/config/css/bolang.css"/>
      <url>/config/css/bolang.css</url>
      
        <content type="html"><![CDATA[/* 波浪css */.main-hero-waves-area {    width: 100%;    position: absolute;    left: 0;    bottom: -11px;    z-index: 5;}.waves-area .waves-svg {    width: 100%;    height: 5rem;}/* Animation */.parallax > use {    animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;}.parallax > use:nth-child(1) {    animation-delay: -2s;    animation-duration: 7s;    fill: #f7f9febd;}.parallax > use:nth-child(2) {    animation-delay: -3s;    animation-duration: 10s;    fill: #f7f9fe82;}.parallax > use:nth-child(3) {    animation-delay: -4s;    animation-duration: 13s;    fill: #f7f9fe36;}.parallax > use:nth-child(4) {    animation-delay: -5s;    animation-duration: 20s;    fill: #f7f9fe;}/* 黑色模式背景 */[data-theme="dark"] .parallax > use:nth-child(1) {    animation-delay: -2s;    animation-duration: 7s;    fill: #18171dc8;}[data-theme="dark"] .parallax > use:nth-child(2) {    animation-delay: -3s;    animation-duration: 10s;    fill: #18171d80;}[data-theme="dark"] .parallax > use:nth-child(3) {    animation-delay: -4s;    animation-duration: 13s;    fill: #18171d3e;}[data-theme="dark"] .parallax > use:nth-child(4) {    animation-delay: -5s;    animation-duration: 20s;    fill: #18171d;}@keyframes move-forever {    0% {        transform: translate3d(-90px, 0, 0);    }    100% {        transform: translate3d(85px, 0, 0);    }}/*Shrinking for mobile*/@media (max-width: 768px) {    .waves-area .waves-svg {        height: 40px;        min-height: 40px;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/config/css/custom.css"/>
      <url>/config/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;}#page-header {    background: transparent !important;}/* 白天模式遮罩透明 */#footer::before {    background: rgba(0, 0, 0, 0.2) !important;}#page-header::before {    background: rgba(0, 0, 0, 0.2) !important;}/* 夜间模式遮罩透明 */[data-theme="dark"] #footer::before {    background: transparent !important;}[data-theme="dark"] #page-header::before {    background: transparent !important;}/* 去除导航栏选项中底下的蓝条 */#nav *::after{    background-color: transparent !important;}/* 导航栏菜单鼠标移入字体放大 */#nav #site-name:hover,#nav .menus_item:hover,#nav #search-button:hover{    font-size:28px;}/* 个人信息卡片背景图 */[data-theme="light"] #aside-content > .card-widget.card-info {    background-image: url(https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250123110300675.png);    background-repeat: no-repeat;    background-attachment: inherit;    background-size: 100%;}[data-theme="dark"] #aside-content > .card-widget.card-info {    background-image: url(https://ccjinblog.oss-cn-beijing.aliyuncs.com/blogiamge/20250123110300675.png);    background-repeat: no-repeat;    background-attachment: inherit;    background-size: 100%;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/config/css/font.css"/>
      <url>/config/css/font.css</url>
      
        <content type="html"><![CDATA[/* 在线链接服务仅供平台体验和调试使用，平台不承诺服务的稳定性，企业客户需下载字体包自行发布使用并做好备份。 */@font-face {    font-family: 'iconfont';  /* Project id 4808987 */    src: url('//at.alicdn.com/t/c/font_4808987_ey59jk1xjwf.woff2?t=1736597902055') format('woff2'),    url('//at.alicdn.com/t/c/font_4808987_ey59jk1xjwf.woff?t=1736597902055') format('woff'),    url('//at.alicdn.com/t/c/font_4808987_ey59jk1xjwf.ttf?t=1736597902055') format('truetype');}.iconfont {    font-family: "iconfont" !important;    font-size: 16px; /* 字体大小自行修改 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;}.icon-github:before {    content: "\ea0b";    color: red; /* 图标颜色需要自行修改 */}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/config/css/transpancy.css"/>
      <url>/config/css/transpancy.css</url>
      
        <content type="html"><![CDATA[/* 文章页背景，仅适用于白天模式 */:root:not([data-theme="dark"]) .layout_post>#post {    /* 以下代表透明度为0.7 可以自行修改 */    background: rgba(255, 255, 255, 0.9);}/* 所有页面背景，仅适用于白天模式 */:root:not([data-theme="dark"]) #aside_content .card-widget,:root:not([data-theme="dark"]) #recent-posts>.recent-post-item,:root:not([data-theme="dark"]) .layout_page>div:first-child:not(.recent-posts),:root:not([data-theme="dark"]) .layout_post>#page,:root:not([data-theme="dark"]) .layout_post>#post,:root:not([data-theme="dark"]) .read-mode .layout_post>#post {    /* 以下代表透明度为0.8 */    background: rgba(255, 255, 255, 0.9);}/* 侧边卡片的透明度，仅适用于白天模式 */:root:not([data-theme="dark"]) {    --card-bg: rgba(255, 255, 255, 0.9);}/* 页脚透明，仅适用于白天模式 */:root:not([data-theme="dark"]) #footer {    /* 以下代表透明度为0.1 */    background: rgba(255, 255, 255, 0.2);}/* 黑夜模式设置 */[data-theme="dark"] .layout_post>#post,[data-theme="dark"] #aside_content .card-widget,[data-theme="dark"] #recent-posts>.recent-post-item,[data-theme="dark"] .layout_page>div:first-child:not(.recent-posts),[data-theme="dark"] .layout_post>#page,[data-theme="dark"] .layout_post>#post,[data-theme="dark"] .read-mode .layout_post>#post,[data-theme="dark"] #footer {    /* 黑夜模式下的背景为纯黑（可根据需要调整） */    background: rgba(0, 0, 0, 0.9);}/* 黑夜模式侧边卡片 */[data-theme="dark"] {    --card-bg: rgba(0, 0, 0, 0.9);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/config/js/chart.js"/>
      <url>/config/js/chart.js</url>
      
        <content type="html"><![CDATA[// 图表统计function switchPostChart () {    // 这里为了统一颜色选取的是“明暗模式”下的两种字体颜色，也可以自己定义    let color = document.documentElement.getAttribute('data-theme') === 'light' ? '#4C4948' : 'rgba(255,255,255,0.7)'    if (document.getElementById('posts-chart') && postsOption) {        try {            let postsOptionNew = postsOption            postsOptionNew.title.textStyle.color = color            postsOptionNew.xAxis.nameTextStyle.color = color            postsOptionNew.yAxis.nameTextStyle.color = color            postsOptionNew.xAxis.axisLabel.color = color            postsOptionNew.yAxis.axisLabel.color = color            postsOptionNew.xAxis.axisLine.lineStyle.color = color            postsOptionNew.yAxis.axisLine.lineStyle.color = color            postsOptionNew.series[0].markLine.data[0].label.color = color            postsChart.setOption(postsOptionNew)        } catch (error) {            console.log(error)        }    }    if (document.getElementById('tags-chart') && tagsOption) {        try {            let tagsOptionNew = tagsOption            tagsOptionNew.title.textStyle.color = color            tagsOptionNew.xAxis.nameTextStyle.color = color            tagsOptionNew.yAxis.nameTextStyle.color = color            tagsOptionNew.xAxis.axisLabel.color = color            tagsOptionNew.yAxis.axisLabel.color = color            tagsOptionNew.xAxis.axisLine.lineStyle.color = color            tagsOptionNew.yAxis.axisLine.lineStyle.color = color            tagsOptionNew.series[0].markLine.data[0].label.color = color            tagsChart.setOption(tagsOptionNew)        } catch (error) {            console.log(error)        }    }    if (document.getElementById('categories-chart') && categoriesOption) {        try {            let categoriesOptionNew = categoriesOption            categoriesOptionNew.title.textStyle.color = color            categoriesOptionNew.legend.textStyle.color = color            if (!categoryParentFlag) { categoriesOptionNew.series[0].label.color = color }            categoriesChart.setOption(categoriesOptionNew)        } catch (error) {            console.log(error)        }    }}document.getElementById("mode-button").addEventListener("click", function () { setTimeout(switchPostChart, 100) })]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/config/js/title.js"/>
      <url>/config/js/title.js</url>
      
        <content type="html"><![CDATA[//动态标题，恶搞标题var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function () {    if (document.hidden) {        //离开当前页面时标签显示内容        document.title = '＞︿＜ 跑哪里去了~';        clearTimeout(titleTime);    } else {        //返回当前页面时标签显示内容        document.title = 'ヾ(≧▽≦*)o 抓到你啦～';        //两秒后变回正常标题        titleTime = setTimeout(function () {            document.title = OriginTitile;        }, 2000);    }});]]></content>
      
    </entry>
    
    
  
</search>
